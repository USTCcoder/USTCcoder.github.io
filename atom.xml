<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://USTCcoder.github.io/"/>
  <updated>2019-05-27T03:51:30.966Z</updated>
  <id>https://USTCcoder.github.io/</id>
  
  <author>
    <name>USTCcoder</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全局搜索算法比较(Global Search Algorithm Comparison)</title>
    <link href="https://USTCcoder.github.io/2019/05/26/optimization_compare/"/>
    <id>https://USTCcoder.github.io/2019/05/26/optimization_compare/</id>
    <published>2019-05-26T10:59:14.000Z</published>
    <updated>2019-05-27T03:51:30.966Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5168;&#x5C40;&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#x6BD4;&#x8F83;</font></strong></center><p></p><h1 id="&#x5168;&#x5C40;&#x641C;&#x7D22;"><a href="#&#x5168;&#x5C40;&#x641C;&#x7D22;" class="headerlink" title="&#x5168;&#x5C40;&#x641C;&#x7D22;"></a><font size="5" color="red">&#x5168;&#x5C40;&#x641C;&#x7D22;</font></h1><p>&#x2003;&#x2003;&#x68AF;&#x5EA6;&#x65B9;&#x6CD5;&#xFF0C;&#x725B;&#x987F;&#x6CD5;&#xFF0C;&#x5171;&#x8F6D;&#x68AF;&#x5EA6;&#x6CD5;&#xFF0C;&#x62DF;&#x725B;&#x987F;&#x6CD5;&#x7B49;&#xFF0C;&#x80FD;&#x591F;&#x4ECE;&#x521D;&#x59CB;&#x70B9;&#x51FA;&#x53D1;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x5E8F;&#x5217;&#x3002;&#x4F46;&#x662F;&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x53EA;&#x80FD;&#x6536;&#x655B;&#x5230;<strong>&#x5C40;&#x90E8;&#x6781;&#x5C0F;&#x70B9;</strong>&#x3002;&#x56E0;&#x6B64;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x7B97;&#x6CD5;&#x80FD;&#x591F;&#x6536;&#x655B;&#x5230;<strong>&#x5168;&#x5C40;&#x6700;&#x5C0F;&#x70B9;</strong>&#xFF0C;&#x9700;&#x8981;&#x501F;&#x52A9;&#x4E8E;<strong>&#x5168;&#x5C40;&#x641C;&#x7D22;&#x7B97;&#x6CD5;</strong>&#x6765;&#x5B9E;&#x73B0;&#x3002;<br><a id="more"></a></p><h1 id="&#x7B97;&#x6CD5;&#x5206;&#x7C7B;"><a href="#&#x7B97;&#x6CD5;&#x5206;&#x7C7B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x5206;&#x7C7B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x5206;&#x7C7B;</font></h1><p><img src="/images/OPTIMIZATION/compare.png" alt="COMPARE"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><p><font size="4">&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;-SA"><a href="#&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;-SA" class="headerlink" title="&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;(SA)"></a><a href="https://ustccoder.github.io/2019/05/20/optimization_SA/">&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;(SA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x7B80;&#x5355;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x76F8;&#x6BD4;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x9003;&#x79BB;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x7684;&#x53EF;&#x80FD;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x53C2;&#x6570;&#x654F;&#x611F;</li><li>&#x6536;&#x655B;&#x901F;&#x5EA6;&#x6162;</li><li>&#x6267;&#x884C;&#x65F6;&#x95F4;&#x957F;</li><li>&#x7B97;&#x6CD5;&#x6027;&#x80FD;&#x4E0E;&#x521D;&#x59CB;&#x503C;&#x6709;&#x5173;</li><li>&#x53EF;&#x80FD;&#x843D;&#x5165;&#x5176;&#x4ED6;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/sa1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_sa_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_sa_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_sa_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x9057;&#x4F20;&#x7B97;&#x6CD5;-GA"><a href="#&#x9057;&#x4F20;&#x7B97;&#x6CD5;-GA" class="headerlink" title="&#x9057;&#x4F20;&#x7B97;&#x6CD5;(GA)"></a><a href="https://ustccoder.github.io/2019/05/21/optimization_GA/">&#x9057;&#x4F20;&#x7B97;&#x6CD5;(GA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x4F7F;&#x7528;&#x6982;&#x7387;&#x673A;&#x5236;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#xFF0C;&#x5177;&#x6709;&#x968F;&#x673A;&#x6027;</li><li>&#x5177;&#x6709;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5BB9;&#x6613;&#x4E0E;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x7ED3;&#x5408;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5927;</li><li>&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x5BF9;&#x95EE;&#x9898;&#x7F16;&#x7801;&#x8868;&#x793A;&#x8F83;&#x4E3A;&#x56F0;&#x96BE;</li><li>&#x7B97;&#x6CD5;&#x5BF9;&#x521D;&#x59CB;&#x79CD;&#x7FA4;&#x7684;&#x9009;&#x62E9;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x4F9D;&#x8D56;&#x6027;</li><li>&#x641C;&#x7D22;&#x901F;&#x5EA6;&#x6BD4;&#x8F83;&#x6162;&#xFF0C;&#x8981;&#x5F97;&#x5230;&#x8F83;&#x7CBE;&#x786E;&#x7684;&#x89E3;&#x9700;&#x8981;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x65F6;&#x95F4;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/ga1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_ga_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_ga_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_ga_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x514D;&#x75AB;&#x7B97;&#x6CD5;-IA"><a href="#&#x514D;&#x75AB;&#x7B97;&#x6CD5;-IA" class="headerlink" title="&#x514D;&#x75AB;&#x7B97;&#x6CD5;(IA)"></a><a href="https://ustccoder.github.io/2019/05/22/optimization_IA/">&#x514D;&#x75AB;&#x7B97;&#x6CD5;(IA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x89E3;&#x51B3;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x5BF9;&#x6297;&#x4F53;&#x9009;&#x62E9;&#x7684;&#x4F9D;&#x8D56;&#x6027;&#x964D;&#x4F4E;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x4F7F;&#x7528;&#x6982;&#x7387;&#x673A;&#x5236;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#xFF0C;&#x5177;&#x6709;&#x968F;&#x673A;&#x6027;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x95EE;&#x9898;&#x7F16;&#x7801;&#x8868;&#x793A;&#x8F83;&#x4E3A;&#x56F0;&#x96BE;</li><li>&#x8981;&#x8FDB;&#x884C;&#x591A;&#x6B21;&#x514D;&#x75AB;&#x5E94;&#x7B54;&#xFF0C;&#x56E0;&#x6B64;&#x901F;&#x5EA6;&#x6162;&#x4E8E;&#x9057;&#x4F20;&#x7B97;&#x6CD5;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/ia1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_ia_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_ia_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_ia_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x8681;&#x7FA4;&#x7B97;&#x6CD5;-ACO"><a href="#&#x8681;&#x7FA4;&#x7B97;&#x6CD5;-ACO" class="headerlink" title="&#x8681;&#x7FA4;&#x7B97;&#x6CD5;(ACO)"></a><a href="https://ustccoder.github.io/2019/05/23/optimization_ACO/">&#x8681;&#x7FA4;&#x7B97;&#x6CD5;(ACO)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x641C;&#x7D22;&#x901F;&#x5EA6;&#x8F83;&#x5FEB;</li><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x5177;&#x6709;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5BB9;&#x6613;&#x4E0E;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x7ED3;&#x5408;</li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong></font></li><li>&#x5BF9;&#x521D;&#x59CB;&#x8682;&#x8681;&#x7684;&#x6570;&#x91CF;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x8981;&#x6C42;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/aco1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_aco_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_aco_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_aco_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;-PSO"><a href="#&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;-PSO" class="headerlink" title="&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;(PSO)"></a><a href="https://ustccoder.github.io/2019/05/24/optimization_PSO/">&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;(PSO)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x641C;&#x7D22;&#x80FD;&#x529B;&#x6700;&#x5FEB;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong></font></li><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5927;</li><li>&#x5B58;&#x5728;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x5BF9;&#x521D;&#x59CB;&#x7C92;&#x5B50;&#x7FA4;&#x7684;&#x6570;&#x91CF;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x8981;&#x6C42;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/pso1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_pso_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_pso_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_pso_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x5355;&#x7EAF;&#x5F62;&#x6CD5;-Nelder-Mead"><a href="#&#x5355;&#x7EAF;&#x5F62;&#x6CD5;-Nelder-Mead" class="headerlink" title="&#x5355;&#x7EAF;&#x5F62;&#x6CD5;(Nelder-Mead)"></a><a href="https://ustccoder.github.io/2019/05/25/optimization_NM/">&#x5355;&#x7EAF;&#x5F62;&#x6CD5;(Nelder-Mead)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x5177;&#x6709;&#x5FEB;&#x901F;&#x968F;&#x673A;&#x7684;&#x641C;&#x7D22;&#x80FD;&#x529B;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x90FD;&#x66F4;&#x63A5;&#x8FD1;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x7CBE;&#x5EA6;&#x6700;&#x9AD8;</li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong></font></li><li>&#x7B97;&#x6CD5;&#x6027;&#x80FD;&#x4E0E;&#x521D;&#x59CB;&#x503C;&#x6709;&#x5173;</li><li>&#x53EF;&#x80FD;&#x843D;&#x5165;&#x5176;&#x4ED6;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/nm1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_nm_2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><p></p><center><div style="float:left;margin-left:50px"><img src="/images/OPTIMIZATION/compare_nm_3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/OPTIMIZATION/compare_nm_4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h2 id="&#x7B97;&#x6CD5;&#x5BF9;&#x6BD4;"><a href="#&#x7B97;&#x6CD5;&#x5BF9;&#x6BD4;" class="headerlink" title="&#x7B97;&#x6CD5;&#x5BF9;&#x6BD4;"></a>&#x7B97;&#x6CD5;&#x5BF9;&#x6BD4;</h2><p></p><center><img src="/images/OPTIMIZATION/compare1.png">&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x5206;&#x6790;</center><p></p><div style="float:none;clear:both;"></div><br><center><img src="/images/OPTIMIZATION/compare2.png">&#x6240;&#x7528;&#x65F6;&#x95F4;&#x5206;&#x6790;</center><br><div style="float:none;clear:both;"></div><h1 id="&#x7279;&#x70B9;&#x5C0F;&#x7ED3;"><a href="#&#x7279;&#x70B9;&#x5C0F;&#x7ED3;" class="headerlink" title="&#x7279;&#x70B9;&#x5C0F;&#x7ED3;"></a><font size="5" color="red">&#x7279;&#x70B9;&#x5C0F;&#x7ED3;</font></h1><h2 id="&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;-SA-1"><a href="#&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;-SA-1" class="headerlink" title="&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;(SA)"></a>&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;(SA)</h2><ul><li>&#x4E0D;&#x540C;&#x95EE;&#x9898;&#x5BF9;&#x6E29;&#x5EA6;&#x8981;&#x6C42;&#x4E0D;&#x540C;&#xFF0C;&#x8D77;&#x59CB;&#x6E29;&#x5EA6;&#x548C;&#x6E29;&#x5EA6;&#x53D8;&#x5316;&#x7387;&#x90FD;&#x4F1A;&#x5F71;&#x54CD;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x548C;&#x65F6;&#x95F4;</li><li>&#x6BCF;&#x6B21;&#x90FD;&#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x89E3;&#xFF0C;&#x6709;&#x65F6;&#x5F88;&#x96BE;&#x8DF3;&#x51FA;&#x8F83;&#x6DF1;&#x8F83;&#x8FDC;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x4F18;</li><li>&#x53EF;&#x4EE5;&#x91CD;&#x590D;&#x8FD0;&#x7B97;&#x591A;&#x6B21;&#xFF0C;&#x53D6;&#x591A;&#x6B21;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5F97;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;</li></ul><h2 id="&#x9057;&#x4F20;&#x7B97;&#x6CD5;-GA-1"><a href="#&#x9057;&#x4F20;&#x7B97;&#x6CD5;-GA-1" class="headerlink" title="&#x9057;&#x4F20;&#x7B97;&#x6CD5;(GA)"></a>&#x9057;&#x4F20;&#x7B97;&#x6CD5;(GA)</h2><ul><li>&#x4E0D;&#x540C;&#x7684;&#x95EE;&#x9898;&#x9700;&#x8981;&#x7684;&#x79CD;&#x7FA4;&#x4E2A;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x79CD;&#x7FA4;&#x4E2A;&#x6570;&#x8D8A;&#x591A;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x8D8A;&#x9AD8;&#xFF0C;&#x7528;&#x65F6;&#x8D8A;&#x957F;</li><li>&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x8D8A;&#x9AD8;&#xFF0C;&#x81EA;&#x7136;&#x9009;&#x62E9;&#x8D8A;&#x5F3A;&#xFF0C;&#x4FDD;&#x7559;&#x7684;&#x7ED3;&#x679C;&#x8D8A;&#x597D;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x8D8A;&#x9AD8;&#xFF0C;&#x7528;&#x65F6;&#x8D8A;&#x957F;</li><li>&#x95EE;&#x9898;&#x7684;&#x8868;&#x793A;&#x5F71;&#x54CD;&#x9057;&#x4F20;&#x7B97;&#x6CD5;&#x7684;&#x6548;&#x7387;&#xFF0C;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x57FA;&#x56E0;&#x4E32;&#x8868;&#x793A;&#x8FD8;&#x662F;&#x7528;&#x5341;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x9700;&#x8981;&#x8003;&#x8651;</li><li>&#x81EA;&#x7136;&#x9009;&#x62E9;&#x7684;&#x65B9;&#x5F0F;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x91C7;&#x7528;&#x7CBE;&#x82F1;&#x9009;&#x62E9;&#x6216;&#x8F6E;&#x76D8;&#x8D4C;&#x4F1A;&#x4EA7;&#x751F;&#x4E0D;&#x540C;&#x7684;&#x6548;&#x679C;</li><li>&#x9057;&#x4F20;&#x7B97;&#x5B50;&#x5BF9;&#x7B97;&#x6CD5;&#x7684;&#x5F71;&#x54CD;&#x5F88;&#x5927;&#xFF0C;&#x91C7;&#x7528;&#x4F55;&#x79CD;&#x4EA4;&#x53C9;&#x65B9;&#x5F0F;&#x548C;&#x591A;&#x5927;&#x7684;&#x53D8;&#x5F02;&#x7387;&#x6700;&#x5408;&#x9002;</li></ul><h2 id="&#x514D;&#x75AB;&#x7B97;&#x6CD5;-IA-1"><a href="#&#x514D;&#x75AB;&#x7B97;&#x6CD5;-IA-1" class="headerlink" title="&#x514D;&#x75AB;&#x7B97;&#x6CD5;(IA)"></a>&#x514D;&#x75AB;&#x7B97;&#x6CD5;(IA)</h2><ul><li>&#x514D;&#x75AB;&#x7B97;&#x6CD5;&#x5305;&#x542B;&#x9057;&#x4F20;&#x7B97;&#x6CD5;&#x7684;&#x6240;&#x6709;&#x7279;&#x70B9;</li><li>&#x514D;&#x75AB;&#x8FC7;&#x7A0B;&#x4ECE;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x4E2D;&#x53D6;&#x51FA;&#x90E8;&#x5206;&#xFF0C;&#x63D0;&#x9AD8;&#x641C;&#x7D22;&#x6548;&#x7387;</li><li>&#x514D;&#x75AB;&#x8FC7;&#x7A0B;&#x968F;&#x673A;&#x4EA7;&#x751F;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x6297;&#x4F53;&#xFF0C;&#x7ED9;&#x641C;&#x7D22;&#x5230;&#x5176;&#x4ED6;&#x66F4;&#x4F18;&#x70B9;&#x521B;&#x9020;&#x4E86;&#x53EF;&#x80FD;&#x6027;</li><li>&#x6BCF;&#x6B21;&#x7684;&#x514D;&#x75AB;&#x8FC7;&#x7A0B;&#x90FD;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x6B21;&#x9057;&#x4F20;&#x7B97;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x514D;&#x75AB;&#x6B21;&#x6570;&#x8D8A;&#x591A;&#xFF0C;&#x7CBE;&#x5EA6;&#x8D8A;&#x9AD8;&#xFF0C;&#x65F6;&#x95F4;&#x8D8A;&#x957F;</li></ul><h2 id="&#x8681;&#x7FA4;&#x7B97;&#x6CD5;-ACO-1"><a href="#&#x8681;&#x7FA4;&#x7B97;&#x6CD5;-ACO-1" class="headerlink" title="&#x8681;&#x7FA4;&#x7B97;&#x6CD5;(ACO)"></a>&#x8681;&#x7FA4;&#x7B97;&#x6CD5;(ACO)</h2><ul><li>&#x548C;&#x81EA;&#x7136;&#x754C;&#x4E2D;&#x8681;&#x7FA4;&#x4E00;&#x6837;&#xFF0C;&#x8682;&#x8681;&#x8D8A;&#x591A;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x8D8A;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x8BA1;&#x7B97;&#x91CF;&#x5927;&#xFF0C;&#x7528;&#x65F6;&#x66F4;&#x957F;</li><li>&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x8D8A;&#x9AD8;&#xFF0C;&#x4FE1;&#x606F;&#x7D20;&#x7684;&#x4F5C;&#x7528;&#x65F6;&#x95F4;&#x8D8A;&#x957F;&#xFF0C;&#x6240;&#x6C42;&#x7ED3;&#x679C;&#x66F4;&#x597D;&#xFF0C;&#x7CBE;&#x5EA6;&#x66F4;&#x9AD8;&#xFF0C;&#x7528;&#x65F6;&#x66F4;&#x957F;</li></ul><h2 id="&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;-PSO-1"><a href="#&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;-PSO-1" class="headerlink" title="&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;(PSO)"></a>&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;(PSO)</h2><ul><li>&#x548C;&#x81EA;&#x7136;&#x754C;&#x4E2D;&#x98DE;&#x9E1F;&#x4E00;&#x6837;&#xFF0C;&#x98DE;&#x9E1F;&#x8D8A;&#x591A;&#x8D8A;&#x5BB9;&#x6613;&#x9047;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x8D8A;&#x9AD8;&#xFF0C;&#x7528;&#x65F6;&#x66F4;&#x957F;</li><li>&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x8D8A;&#x9AD8;&#xFF0C;&#x98DE;&#x9E1F;&#x4E4B;&#x95F4;&#x7684;&#x4FE1;&#x606F;&#x4EA4;&#x6362;&#x8D8A;&#x591A;&#xFF0C;&#x6240;&#x6C42;&#x7ED3;&#x679C;&#x66F4;&#x597D;&#xFF0C;&#x7CBE;&#x5EA6;&#x66F4;&#x9AD8;&#xFF0C;&#x7528;&#x65F6;&#x66F4;&#x957F;</li><li>&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x9AD8;&#x5EA6;&#x7684;&#x5E76;&#x884C;&#x8BA1;&#x7B97;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x641C;&#x7D22;&#x51FD;&#x6570;&#x6700;&#x503C;&#x65B9;&#x9762;&#x901F;&#x5EA6;&#x6700;&#x5FEB;</li></ul><h2 id="&#x5355;&#x7EAF;&#x5F62;&#x6CD5;-Nelder-Mead-1"><a href="#&#x5355;&#x7EAF;&#x5F62;&#x6CD5;-Nelder-Mead-1" class="headerlink" title="&#x5355;&#x7EAF;&#x5F62;&#x6CD5;(Nelder-Mead)"></a>&#x5355;&#x7EAF;&#x5F62;&#x6CD5;(Nelder-Mead)</h2><ul><li>&#x5355;&#x7EAF;&#x5F62;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x6536;&#x7F29;&#x7B97;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x521D;&#x59CB;&#x70B9;&#x9009;&#x62E9;&#x5728;&#x5C40;&#x90E8;&#x6781;&#x5C0F;&#x503C;&#x533A;&#x57DF;&#xFF0C;&#x4F1A;&#x6536;&#x7F29;&#x5230;&#x5C40;&#x90E8;&#x6700;&#x5C0F;</li><li>&#x548C;SA&#x76F8;&#x540C;&#xFF0C;&#x53EF;&#x4EE5;&#x91CD;&#x590D;&#x8FD0;&#x7B97;&#x591A;&#x6B21;&#xFF0C;&#x53D6;&#x591A;&#x6B21;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5F97;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x3002;</li><li>&#x548C;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x4E0D;&#x540C;&#xFF0C;&#x6CA1;&#x6709;&#x968F;&#x673A;&#x6027;&#xFF0C;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x90FD;&#x4EA7;&#x751F;&#x6BD4;&#x4E0A;&#x4E00;&#x6B21;&#x66F4;&#x4F18;&#x7684;&#x89E3;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#x6700;&#x9AD8;</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Global Search Algorithm Comparison&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>单纯形法(Nelder-Mead)</title>
    <link href="https://USTCcoder.github.io/2019/05/25/optimization_NM/"/>
    <id>https://USTCcoder.github.io/2019/05/25/optimization_NM/</id>
    <published>2019-05-25T11:33:42.000Z</published>
    <updated>2019-05-27T03:58:54.654Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5355;&#x7EAF;&#x5F62;&#x6CD5;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;Nelder-Mead:&#x5355;&#x7EAF;&#x5F62;&#x6CD5;&#x79C9;&#x627F;<strong>&#x4FDD;&#x8BC1;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x6BD4;&#x524D;&#x4E00;&#x6B21;&#x66F4;&#x4F18;</strong>&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#xFF0C;&#x5148;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x53EF;&#x884C;&#x89E3;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x662F;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x82E5;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x6CD5;&#x5219;&#x8F6C;&#x6362;&#x5230;&#x53E6;&#x4E00;&#x6539;&#x8FDB;&#x540E;<strong>&#x66F4;&#x4F18;&#x7684;&#x57FA;&#x672C;&#x53EF;&#x884C;&#x89E3;</strong>&#xFF0C;&#x518D;&#x9274;&#x522B;&#xFF0C;&#x82E5;&#x4ECD;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x518D;&#x8F6C;&#x6362;&#xFF0C;&#x6309;&#x6B64;&#x91CD;&#x590D;&#x8FDB;&#x884C;&#x3002;&#x56E0;&#x57FA;&#x672C;&#x53EF;&#x884C;&#x89E3;&#x7684;&#x4E2A;&#x6570;&#x6709;&#x9650;&#xFF0C;&#x6545;&#x7ECF;<strong>&#x6709;&#x9650;&#x6B21;&#x8F6C;&#x6362;&#x5FC5;&#x80FD;&#x5F97;&#x51FA;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;</strong>&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x968F;&#x673A;&#x4EA7;&#x751F;N+1&#x4E2A;&#x70B9;&#xFF0C;&#x6784;&#x9020;&#x5355;&#x7EAF;&#x5F62;&#xFF0C;N&#x4E3A;&#x6240;&#x6C42;&#x6781;&#x503C;&#x7684;&#x7EF4;&#x5EA6;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x5BF9;&#x8FD9;&#x4E9B;&#x70B9;&#x7684;&#x51FD;&#x6570;&#x503C;&#x8FDB;&#x884C;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#xFF0C;&#x6C42;&#x51FA;&#x6700;&#x4F18;N&#x4E2A;&#x70B9;&#x7684;&#x91CD;&#x5FC3;p<sub>g</sub></font><br>$$f(p_0) \leq f(p_1) \leq \ldots \leq f(p_N)$$<br>$$p_{g}=\displaystyle \sum_{i=0}^{N-1}\frac {p_{i}}{N}$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x5BF9;&#x6700;&#x5DEE;&#x7684;&#x70B9;&#x8FDB;&#x884C;&#x53CD;&#x5C04;&#x5F97;&#x5230;p<sub>r</sub></font><br>$$p_{r}=p_{g}+\rho \cdot (p_{g}-p_{N}) \ , \ &#x5176;&#x4E2D; \rho &#x4E3A;&#x53CD;&#x5C04;&#x7CFB;&#x6570;$$</p><p>&#x2003;&#x2003;<font size="4">4. &#x5982;&#x679C;f(p<sub>0</sub>)&#x2264;f(p<sub>r</sub>)&lt;f(p<sub>N-1</sub>)&#xFF0C;p<sub>r</sub>&#x4EE3;&#x66FF;p<sub>N</sub>&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x5982;&#x679C;f(p<sub>r</sub>)&lt;f(p<sub>0</sub>)&#xFF0C;&#x8BF4;&#x660E;p<sub>r</sub>&#x65B9;&#x5411;&#x6709;&#x5229;&#x4E8E;&#x51FD;&#x6570;&#x503C;&#x4E0B;&#x964D;</font><br>$$p_{e}=p_{g}+ \chi \cdot (p_{r}-p_{g}) \ , \ &#x5176;&#x4E2D; \chi &#x4E3A;&#x5EF6;&#x4F38;&#x7CFB;&#x6570;$$</p><p>&#x2003;&#x2003;<font size="4">6. &#x5982;&#x679C;f(p<sub>e</sub>)&lt;f(p<sub>r</sub>)&#xFF0C;p<sub>e</sub>&#x4EE3;&#x66FF;p<sub>N</sub>&#xFF0C;&#x5426;&#x5219;p<sub>r</sub>&#x4EE3;&#x66FF;p<sub>N</sub>&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2</font></p><p>&#x2003;&#x2003;<font size="4">7. f(p<sub>r</sub>)&#x2265;f(p<sub>N-1</sub>)&#xFF0C;&#x8BF4;&#x660E;&#x8981;&#x8FDB;&#x884C;&#x6536;&#x7F29;&#x64CD;&#x4F5C;</font><br>$$p_{c}= \begin{cases} p_{g}+ \gamma \cdot (p_{r}-p_{g}) &amp;  f(p_{r}) &lt; f(p_{N}) \ p_{g}+ \gamma \cdot (p_{l}-p_{r}) &amp; f(p_{r}) \ge f(p_{N}) \end{cases} \ , \ &#x5176;&#x4E2D; \gamma &#x4E3A;&#x6536;&#x7F29;&#x7CFB;&#x6570;$$</p><p>&#x2003;&#x2003;<font size="4">8. &#x5982;&#x679C;f(p<sub>c</sub>)&#x2264;f(p<sub>N</sub>)&#xFF0C;p<sub>c</sub>&#x4EE3;&#x66FF;p<sub>N</sub>&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2</font></p><p>&#x2003;&#x2003;<font size="4">9. f(p<sub>c</sub>)&gt;f(p<sub>r</sub>)&#xFF0C;&#x53EA;&#x4FDD;&#x7559;p<sub>0</sub>&#xFF0C;&#x5176;&#x4ED6;&#x70B9;&#x5230;p<sub>0</sub>&#x8DDD;&#x79BB;&#x51CF;&#x534A;&#xFF0C;&#x6536;&#x7F29;&#x5355;&#x7EAF;&#x5F62;</font></p><p>&#x2003;&#x2003;<font size="4">10.&#x5982;&#x679C;&#x4E0D;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/nm2.png" alt="NelderMead"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="NelderMead-main-m"><a href="#NelderMead-main-m" class="headerlink" title="NelderMead_main.m"></a>NelderMead_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x53CD;&#x5C04;&#x7CFB;&#x6570;rho</span><br><span class="line">rho=1;</span><br><span class="line">%&#x5EF6;&#x4F38;&#x7CFB;&#x6570;</span><br><span class="line">ka1=2;</span><br><span class="line">%&#x6536;&#x7F29;&#x7CFB;&#x6570;</span><br><span class="line">ka2=0.5;</span><br><span class="line">%&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=100;</span><br><span class="line">%&#x5C1D;&#x8BD5;&#x89E3;&#x6B21;&#x6570;</span><br><span class="line">num=30;</span><br><span class="line">value=zeros(1,num);</span><br><span class="line">tic;</span><br><span class="line">for i=1:num</span><br><span class="line">    x=(rand(1,2))*(range(2)-range(1))+range(1);</span><br><span class="line">    best_value=zeros(1,times);</span><br><span class="line">    for j=1:times</span><br><span class="line">        [~,index]=sort(f(x));</span><br><span class="line">        %&#x5C06;&#x5C0F;&#x7684;&#x503C;&#x6392;&#x5728;&#x524D;&#x9762;</span><br><span class="line">        x=x(index);</span><br><span class="line">        xr=x(1)+rho*(x(1)-x(2));</span><br><span class="line">        if xr&lt;range(1)</span><br><span class="line">            xr=range(1);</span><br><span class="line">        end</span><br><span class="line">        if xr&gt;range(2)</span><br><span class="line">            xr=range(2);</span><br><span class="line">        end</span><br><span class="line">        %&#x5982;&#x679C;&#x65B0;&#x4EA7;&#x751F;&#x7684;&#x70B9;&#x6BD4;&#x6700;&#x5C0F;&#x7684;&#x70B9;&#x8FD8;&#x8981;&#x5C0F;&#xFF0C;&#x8BF4;&#x660E;&#x8FD9;&#x4E2A;&#x65B9;&#x5411;&#x6709;&#x5229;&#x4E8E;&#x503C;&#x7684;&#x51CF;&#x5C0F;</span><br><span class="line">        if f(xr)&lt;f(x(1))</span><br><span class="line">            %&#x8FDB;&#x4E00;&#x6B65;&#x5411;&#x8FD9;&#x4E2A;&#x65B9;&#x5411;&#x5EF6;&#x4F38;</span><br><span class="line">            xe=x(1)+ka1*(xr-x(1));</span><br><span class="line">            if xe&lt;range(1)</span><br><span class="line">                xe=range(1);</span><br><span class="line">            end</span><br><span class="line">            if xe&gt;range(2)</span><br><span class="line">                xe=range(2);</span><br><span class="line">            end</span><br><span class="line">            %&#x5982;&#x679C;&#x7B2C;&#x4E8C;&#x6B21;&#x5EF6;&#x4F38;&#x540E;&#x7684;&#x70B9;&#x6BD4;&#x7B2C;&#x4E00;&#x6B21;&#x5EF6;&#x4F38;&#x540E;&#x4EA7;&#x751F;&#x7684;&#x70B9;&#x5C0F;&#xFF0C;&#x5219;&#x7528;&#x7B2C;&#x4E8C;&#x6B21;&#x5EF6;&#x4F38;&#x540E;&#x7684;&#x70B9;&#x66FF;&#x6362;&#x539F;&#x6765;&#x6700;&#x5927;&#x7684;&#x70B9;</span><br><span class="line">            if f(xe)&lt;f(xr)</span><br><span class="line">                x(2)=xe;</span><br><span class="line">            %&#x5426;&#x5219;&#x7528;&#x7B2C;&#x4E00;&#x6B21;&#x5EF6;&#x4F38;&#x540E;&#x7684;&#x70B9;&#x66FF;&#x6362;&#x539F;&#x6765;&#x6700;&#x5927;&#x7684;&#x70B9;</span><br><span class="line">            else</span><br><span class="line">                x(2)=xr;</span><br><span class="line">            end</span><br><span class="line">        %&#x5982;&#x679C;&#x65B0;&#x4EA7;&#x751F;&#x7684;&#x70B9;&#x6BD4;&#x6700;&#x5C0F;&#x7684;&#x70B9;&#x8FD8;&#x8981;&#x5927;</span><br><span class="line">        else</span><br><span class="line">            %&#x5982;&#x679C;&#x65B0;&#x4EA7;&#x751F;&#x7684;&#x70B9;&#x6BD4;&#x6700;&#x5927;&#x7684;&#x70B9;&#x5C0F;&#xFF0C;&#x8BF4;&#x660E;&#x8981;&#x8FDB;&#x884C;&#x5916;&#x6536;&#x7F29;</span><br><span class="line">            if f(xr)&lt;f(x(2))</span><br><span class="line">                xc=x(1)+ka2*(xr-x(1));</span><br><span class="line">            %&#x5982;&#x679C;&#x65B0;&#x4EA7;&#x751F;&#x7684;&#x70B9;&#x6BD4;&#x6700;&#x5927;&#x7684;&#x70B9;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x8981;&#x8FDB;&#x884C;&#x5185;&#x6536;&#x7F29;</span><br><span class="line">            else</span><br><span class="line">                xc=x(1)+ka2*(x(2)-x(1));</span><br><span class="line">            end</span><br><span class="line">            %&#x5982;&#x679C;&#x65E0;&#x8BBA;&#x8FDB;&#x884C;&#x5185;&#x6536;&#x7F29;&#x8FD8;&#x662F;&#x5916;&#x6536;&#x7F29;&#x4EA7;&#x751F;&#x7684;&#x503C;&#x90FD;&#x6BD4;&#x6700;&#x5927;&#x503C;&#x8981;&#x5C0F;&#xFF0C;&#x5219;&#x66FF;&#x6362;&#x6700;&#x5927;&#x503C;</span><br><span class="line">            if f(xc)&lt;=f(x(2))</span><br><span class="line">                x(2)=xc;</span><br><span class="line">            %%&#x5982;&#x679C;&#x65E0;&#x8BBA;&#x8FDB;&#x884C;&#x5185;&#x6536;&#x7F29;&#x8FD8;&#x662F;&#x5916;&#x6536;&#x7F29;&#x4EA7;&#x751F;&#x7684;&#x503C;&#x90FD;&#x6BD4;&#x6700;&#x5927;&#x503C;&#x8981;&#x5927;&#xFF0C;&#x5219;&#x7F29;&#x5C0F;&#x8303;&#x56F4;&#x7EE7;&#x7EED;&#x641C;&#x7D22;</span><br><span class="line">            else</span><br><span class="line">                x(2)=(x(1)+x(2))/2;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        best_value(j)=x(find(f(x)==min(f(x)),1));</span><br><span class="line">        if j&gt;5&amp;&amp;abs(best_value(j)-best_value(j-5))&lt;1e-5</span><br><span class="line">            break;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    value(i)=x(find(f(x)==min(f(x)),1));</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(value));</span><br><span class="line">disp(mini);</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(value(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/nm1.png" alt="NelderMead"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.968746504328)=-418.982887272434$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x5177;&#x6709;&#x5FEB;&#x901F;&#x968F;&#x673A;&#x7684;&#x641C;&#x7D22;&#x80FD;&#x529B;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x90FD;&#x66F4;&#x63A5;&#x8FD1;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x7CBE;&#x5EA6;&#x6700;&#x9AD8;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x6027;&#x80FD;&#x4E0E;&#x521D;&#x59CB;&#x503C;&#x6709;&#x5173;</li><li>&#x53EF;&#x80FD;&#x843D;&#x5165;&#x5176;&#x4ED6;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Nelder-Mead&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>粒子群算法(PSO)</title>
    <link href="https://USTCcoder.github.io/2019/05/24/optimization_PSO/"/>
    <id>https://USTCcoder.github.io/2019/05/24/optimization_PSO/</id>
    <published>2019-05-24T13:14:15.000Z</published>
    <updated>2019-05-27T04:00:21.570Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;PSO(Particle Swarm Optimization):&#x53D7;&#x5230;&#x98DE;&#x9E1F;&#x96C6;&#x7FA4;&#x6D3B;&#x52A8;&#x7684;&#x89C4;&#x5F8B;&#x6027;&#x542F;&#x53D1;&#xFF0C;&#x8FDB;&#x800C;&#x5229;&#x7528;&#x7FA4;&#x4F53;&#x667A;&#x80FD;&#x5EFA;&#x7ACB;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5316;&#x6A21;&#x578B;&#x3002;&#x7C92;&#x5B50;&#x7FA4;&#x7B97;&#x6CD5;&#x5728;&#x5BF9;&#x52A8;&#x7269;&#x96C6;&#x7FA4;&#x6D3B;&#x52A8;&#x884C;&#x4E3A;&#x89C2;&#x5BDF;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5229;&#x7528;&#x7FA4;&#x4F53;&#x4E2D;&#x7684;&#x4E2A;&#x4F53;&#x5BF9;&#x4FE1;&#x606F;&#x7684;<strong>&#x5171;&#x4EAB;</strong>&#x4F7F;&#x6574;&#x4E2A;&#x7FA4;&#x4F53;&#x7684;&#x8FD0;&#x52A8;&#x5728;&#x95EE;&#x9898;&#x6C42;&#x89E3;&#x7A7A;&#x95F4;&#x4E2D;&#x4EA7;&#x751F;<strong>&#x4ECE;&#x65E0;&#x5E8F;&#x5230;&#x6709;&#x5E8F;</strong>&#x7684;&#x6F14;&#x5316;&#x8FC7;&#x7A0B;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x6700;&#x4F18;&#x89E3;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x7C92;&#x5B50;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x627E;&#x51FA;&#x6240;&#x6709;&#x7C92;&#x5B50;&#x4E2D;&#x9002;&#x5E94;&#x5EA6;&#x6700;&#x4F18;&#x7684;&#x7C92;&#x5B50;g<sub>best</sub></font><br>$$g_{best}=\underset{x}{arg \ min} \ f(x)$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x66F4;&#x65B0;&#x6BCF;&#x4E00;&#x4E2A;&#x7C92;&#x5B50;&#x7684;&#x98DE;&#x884C;&#x901F;&#x5EA6;</font><br>$$v_{i}&#x2019;=w \cdot v_{i}+c1 \cdot r_{i} \cdot (p_{i}-x_{i})+c2 \cdot s_{i} \cdot (g_{best}-x_{i})$$</p><p>&#x2003;&#x2003;<font size="4">4. &#x83B7;&#x5F97;&#x6BCF;&#x4E2A;&#x7C92;&#x5B50;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;x<sub>i</sub>&#x548C;&#x8BE5;&#x7C92;&#x5B50;&#x5728;&#x98DE;&#x884C;&#x4E2D;&#x5230;&#x8FBE;&#x8FC7;&#x7684;&#x6700;&#x4F18;&#x4F4D;&#x7F6E;p<sub>i</sub></font><br>$$x_{i}&#x2019;=x_{i}+v_{i}&#x2019;$$<br>$$p_{i}&#x2019;= \begin{cases} x_{i}&#x2019; &amp;  f(x_{i}&#x2019;) &lt; f(p_{i}) \ p_{i} &amp; f(x_{i}&#x2019;) \ge f(p_{i}) \end{cases}$$</p><p>&#x2003;&#x2003;<font size="4">5. &#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">6. &#x6B64;&#x65F6;&#x7C92;&#x5B50;&#x96C6;&#x7FA4;&#xFF0C;&#x7C92;&#x5B50;&#x7FA4;&#x4F4D;&#x7F6E;&#x4E3A;&#x6781;&#x5C0F;&#x503C;&#xFF0C;&#x6700;&#x5C0F;&#x7684;p&#x4E3A;&#x7B97;&#x6CD5;&#x7684;&#x6700;&#x4F18;&#x89E3;</font></p><p>&#x2003;&#x2003;<font size="4">7. &#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/pso2.png" alt="PSO"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="PSO-main-m"><a href="#PSO-main-m" class="headerlink" title="PSO_main.m"></a>PSO_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=100;</span><br><span class="line">%w&#x4E3A;&#x60EF;&#x6027;&#x6743;&#x91CD;</span><br><span class="line">w=0.8;</span><br><span class="line">%c1&#x4E3A;&#x81EA;&#x8EAB;&#x8BA4;&#x77E5;&#x6743;&#x91CD;</span><br><span class="line">c1=1;</span><br><span class="line">%c2&#x4E3A;&#x793E;&#x4F1A;&#x8BA4;&#x77E5;&#x6743;&#x91CD;</span><br><span class="line">c2=1;</span><br><span class="line">%&#x7C92;&#x5B50;&#x7FA4;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">n=100;</span><br><span class="line">%&#x7C92;&#x5B50;&#x7FA4;&#x7684;&#x521D;&#x59CB;&#x4F4D;&#x7F6E;</span><br><span class="line">x=rand(1,n)*(range(2)-range(1))+range(1);</span><br><span class="line">%&#x4E2A;&#x4F53;&#x6781;&#x503C;</span><br><span class="line">p=x;</span><br><span class="line">%v&#x4EE3;&#x8868;&#x7C92;&#x5B50;&#x7684;&#x901F;&#x5EA6;</span><br><span class="line">v=zeros(1,n);</span><br><span class="line">%&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">best_value=zeros(1,times);</span><br><span class="line">tic;</span><br><span class="line">for i=1:times</span><br><span class="line">    [solve,gbest]=min(f(x));</span><br><span class="line">    for j=1:n</span><br><span class="line">        %&#x901F;&#x5EA6;&#x5206;&#x4E3A;3&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x60EF;&#x6027;&#x901F;&#x5EA6;&#xFF0C;&#x8BE5;&#x70B9;&#x6700;&#x4F18;&#x548C;&#x5168;&#x5C40;&#x6700;&#x4F18;</span><br><span class="line">        v(j)=w*v(j)+c1*rand(1)*(p(j)-x(j))+c2*rand(1)*(x(gbest)-x(j));</span><br><span class="line">        x(j)=x(j)+v(j);</span><br><span class="line">        if x(j)&lt;range(1)</span><br><span class="line">            x(j)=range(1);</span><br><span class="line">        end</span><br><span class="line">        if x(j)&gt;range(2)</span><br><span class="line">            x(j)=range(2);</span><br><span class="line">        end</span><br><span class="line">        if f(x(j))&lt;f(p(j))</span><br><span class="line">            p(j)=x(j);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    best_value(i)=min(f(p));</span><br><span class="line">    if i&gt;5&amp;&amp;abs(best_value(i)-best_value(i-5))&lt;1e-5</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(p));</span><br><span class="line">disp(mini)</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(p(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/pso1.png" alt="PSO"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.968750420615)=-418.982887272432$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x641C;&#x7D22;&#x80FD;&#x529B;&#x6700;&#x5FEB;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5927;</li><li>&#x5B58;&#x5728;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x5BF9;&#x521D;&#x59CB;&#x7C92;&#x5B50;&#x7FA4;&#x7684;&#x6570;&#x91CF;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x8981;&#x6C42;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;PSO&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>蚁群算法(ACO)</title>
    <link href="https://USTCcoder.github.io/2019/05/23/optimization_ACO/"/>
    <id>https://USTCcoder.github.io/2019/05/23/optimization_ACO/</id>
    <published>2019-05-23T12:17:47.000Z</published>
    <updated>2019-05-27T03:50:55.989Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x8681;&#x7FA4;&#x7B97;&#x6CD5;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;ACO(ant colony optimization):&#x7814;&#x7A76;&#x8682;&#x8681;&#x89C5;&#x98DF;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x53D1;&#x73B0;&#x5355;&#x4E2A;&#x8682;&#x8681;&#x7684;&#x884C;&#x4E3A;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x8681;&#x7FA4;&#x6574;&#x4F53;&#x5374;&#x53EF;&#x4EE5;&#x4F53;&#x73B0;&#x4E00;&#x4E9B;&#x667A;&#x80FD;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x4F8B;&#x5982;&#x8681;&#x7FA4;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x5BFB;&#x627E;&#x6700;&#x77ED;&#x5230;&#x8FBE;&#x98DF;&#x7269;&#x6E90;&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x8682;&#x8681;&#x4F1A;&#x5728;&#x5176;&#x7ECF;&#x8FC7;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#x91CA;&#x653E;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;<strong>&#x4FE1;&#x606F;&#x7D20;</strong>&#x7684;&#x7269;&#x8D28;&#xFF0C;&#x8681;&#x7FA4;&#x5185;&#x7684;&#x8682;&#x8681;&#x5BF9;&#x4FE1;&#x606F;&#x7D20;&#x5177;&#x6709;&#x611F;&#x77E5;&#x80FD;&#x529B;&#xFF0C;&#x5B83;&#x4EEC;&#x4F1A;<strong>&#x6CBF;&#x7740;&#x4FE1;&#x606F;&#x7D20;&#x6D53;&#x5EA6;&#x8F83;&#x9AD8;&#x8DEF;&#x5F84;&#x884C;&#x8D70;</strong>&#xFF0C;&#x800C;&#x6BCF;&#x53EA;&#x8DEF;&#x8FC7;&#x7684;&#x8682;&#x8681;&#x90FD;&#x4F1A;&#x5728;&#x8DEF;&#x4E0A;&#x7559;&#x4E0B;&#x4FE1;&#x606F;&#x7D20;&#xFF0C;&#x5F62;&#x6210;&#x4E00;&#x79CD;&#x7C7B;&#x4F3C;<strong>&#x6B63;&#x53CD;&#x9988;</strong>&#x7684;&#x673A;&#x5236;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x8682;&#x8681;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x5224;&#x65AD;&#x8682;&#x8681;&#x6240;&#x5728;&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#x8D8A;&#x5C0F;&#xFF0C;&#x4FE1;&#x606F;&#x7D20;&#x8D8A;&#x591A;</font></p><p>&#x2003;&#x2003;<font size="4">3. &#x5982;&#x679C;&#x4FE1;&#x606F;&#x7D20;&#x8F83;&#x591A;&#xFF0C;&#x8682;&#x8681;&#x5C0F;&#x5E45;&#x79FB;&#x52A8;&#xFF0C;&#x4FE1;&#x606F;&#x7D20;&#x8F83;&#x5C11;&#xFF0C;&#x8682;&#x8681;&#x5927;&#x5E45;&#x79FB;&#x52A8;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x5982;&#x679C;&#x8682;&#x8681;&#x79FB;&#x52A8;&#x4E4B;&#x540E;&#x503C;&#x53D8;&#x5C0F;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x79FB;&#x52A8;&#x65B9;&#x5411;&#x6B63;&#x786E;</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">6. &#x6B64;&#x65F6;&#x8682;&#x8681;&#x96C6;&#x7FA4;&#xFF0C;&#x8681;&#x7FA4;&#x4F4D;&#x7F6E;&#x4E3A;&#x6781;&#x5C0F;&#x503C;&#xFF0C;&#x6BD4;&#x8F83;&#x53EF;&#x5F97;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x6700;&#x4F18;&#x89E3;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/aco2.png" alt="ACO"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="ACO-main-m"><a href="#ACO-main-m" class="headerlink" title="ACO_main.m"></a>ACO_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x8682;&#x8681;&#x6570;</span><br><span class="line">m=1000;</span><br><span class="line">%&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=1000;</span><br><span class="line">%&#x4FE1;&#x606F;&#x7D20;&#x6325;&#x53D1;&#x7CFB;&#x6570;</span><br><span class="line">rho=0.8;</span><br><span class="line">%&#x8F6C;&#x79FB;&#x6982;&#x7387;&#x5E38;&#x6570;</span><br><span class="line">p0=0.2;</span><br><span class="line">%&#x8F6C;&#x79FB;&#x6982;&#x7387;</span><br><span class="line">p=zeros(1,m);</span><br><span class="line">%x&#x4E3A;&#x8681;&#x7FA4;&#x7684;&#x521D;&#x59CB;&#x4F4D;&#x7F6E;</span><br><span class="line">x=rand(1,m)*(range(2)-range(1))+range(1);</span><br><span class="line">%tau&#x4E3A;&#x4FE1;&#x606F;&#x7D20;</span><br><span class="line">tau=-f(x);</span><br><span class="line">%&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">best_value=zeros(1,times);</span><br><span class="line">tic;</span><br><span class="line">for i=1:times</span><br><span class="line">    [~,bestindex]=max(tau);</span><br><span class="line">    for j=1:m</span><br><span class="line">        %&#x4FE1;&#x606F;&#x7D20;&#x8D8A;&#x5927;&#x8D8A;&#x4E0D;&#x5BB9;&#x6613;&#x8F6C;&#x79FB;</span><br><span class="line">        p(j)=(tau(bestindex)-tau(j))/tau(bestindex);</span><br><span class="line">        if p(j)&lt;p0</span><br><span class="line">            %&#x5982;&#x679C;&#x4FE1;&#x606F;&#x7D20;&#x8F83;&#x591A;&#xFF0C;&#x8F6C;&#x79FB;&#x6B65;&#x4F10;&#x5C31;&#x8F83;&#x5C0F;</span><br><span class="line">            temp=x(j)+(rand(1)*2-1)/i;</span><br><span class="line">        else</span><br><span class="line">            %&#x5982;&#x679C;&#x4FE1;&#x606F;&#x7D20;&#x8F83;&#x5C11;&#xFF0C;&#x8F6C;&#x79FB;&#x6B65;&#x4F10;&#x5C31;&#x8F83;&#x5927;</span><br><span class="line">            temp=x(j)+(rand(1)-0.5)*(range(2)-range(1));</span><br><span class="line">        end</span><br><span class="line">        %&#x9650;&#x5236;&#x8FB9;&#x754C;&#x6761;&#x4EF6;</span><br><span class="line">        if temp&lt;range(1)</span><br><span class="line">            temp=range(1);</span><br><span class="line">        end</span><br><span class="line">        if temp&gt;range(2)</span><br><span class="line">            temp=range(2);</span><br><span class="line">        end</span><br><span class="line">        %&#x5982;&#x679C;&#x79FB;&#x52A8;&#x540E;&#x503C;&#x53D8;&#x5C0F;&#xFF0C;&#x5219;&#x79FB;&#x52A8;</span><br><span class="line">        if f(temp)&lt;f(x(j))</span><br><span class="line">            x(j)=temp;</span><br><span class="line">        end</span><br><span class="line">        %&#x66F4;&#x65B0;&#x4FE1;&#x606F;&#x7D20;&#xFF0C;&#x51FD;&#x6570;&#x503C;&#x8D8A;&#x5C0F;&#xFF0C;&#x4FE1;&#x606F;&#x91CF;&#x8D8A;&#x5927;</span><br><span class="line">        tau(j)=(1-rho)*tau(j)-f(x(j));</span><br><span class="line">    end</span><br><span class="line">    best_value(i)=min(f(x));</span><br><span class="line">    if i&gt;5&amp;&amp;abs(best_value(i)-best_value(i-5))&lt;1e-5</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(x));</span><br><span class="line">disp(mini)</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(x(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/aco1.png" alt="ACO"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.959294517745)=-418.982875999576$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x641C;&#x7D22;&#x901F;&#x5EA6;&#x8F83;&#x5FEB;</li><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x5177;&#x6709;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5BB9;&#x6613;&#x4E0E;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x7ED3;&#x5408;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x521D;&#x59CB;&#x8682;&#x8681;&#x7684;&#x6570;&#x91CF;&#x6709;&#x5F88;&#x9AD8;&#x7684;&#x8981;&#x6C42;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;ACO&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>免疫算法(IA)</title>
    <link href="https://USTCcoder.github.io/2019/05/22/optimization_IA/"/>
    <id>https://USTCcoder.github.io/2019/05/22/optimization_IA/</id>
    <published>2019-05-22T10:29:47.000Z</published>
    <updated>2019-05-27T03:52:22.671Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x8BF4;&#x660E;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;IA(Immune Algorithm):&#x514D;&#x75AB;&#x7B97;&#x6CD5;&#x57FA;&#x4E8E;<strong>&#x751F;&#x7269;&#x514D;&#x75AB;&#x7CFB;&#x7EDF;</strong>&#x7684;&#x57FA;&#x672C;&#x673A;&#x5236;&#xFF0C;&#x6A21;&#x4EFF;&#x4E86;&#x4EBA;&#x4F53;&#x7684;&#x514D;&#x75AB;&#x7CFB;&#x7EDF;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x9057;&#x4F20;&#x7B97;&#x6CD5;&#x7684;<strong>&#x65E9;&#x719F;&#x6536;&#x655B;</strong>&#x95EE;&#x9898;&#x3002;&#x56E0;&#x4E3A;&#x514D;&#x75AB;&#x7CFB;&#x7EDF;&#x5177;&#x6709;<strong>&#x8FA8;&#x8BC6;&#x8BB0;&#x5FC6;</strong>&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x66F4;&#x5FEB;&#x8BC6;&#x522B;&#x7FA4;&#x4F53;&#xFF0C;&#x9762;&#x5BF9;&#x5F85;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x9762;&#x5BF9;&#x5404;&#x79CD;&#x6297;&#x539F;&#xFF0C;&#x53EF;&#x4EE5;&#x63D0;&#x524D;<strong>&#x6CE8;&#x5C04;&#x75AB;&#x82D7;</strong>&#x6291;&#x5236;&#x9000;&#x5316;&#x95EE;&#x9898;&#xFF0C;&#x4ECE;&#x800C;&#x66F4;&#x52A0;&#x4FDD;&#x6301;&#x4F18;&#x80DC;&#x52A3;&#x6C70;&#x7684;&#x7279;&#x70B9;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x53D6;&#x51FA;&#x90E8;&#x5206;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#xFF0C;&#x5269;&#x4E0B;&#x6297;&#x4F53;&#x7531;&#x968F;&#x673A;&#x4EA7;&#x751F;</font></p><p>&#x2003;&#x2003;<font size="4">3. &#x6839;&#x636E;&#x9002;&#x5E94;&#x5EA6;&#x5BF9;&#x6297;&#x4F53;&#x91C7;&#x7528;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x9009;&#x62E9;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x5BF9;&#x9009;&#x62E9;&#x5269;&#x4F59;&#x7684;&#x6297;&#x4F53;&#x8FDB;&#x884C;&#x9057;&#x4F20;&#x64CD;&#x4F5C;&#xFF0C;&#x4EA7;&#x751F;&#x65B0;&#x7684;&#x6297;&#x4F53;</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x56DE;&#x5230;&#x6B65;&#x9AA4;3&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">6. &#x5C06;&#x4EA7;&#x751F;&#x7684;&#x65B0;&#x6297;&#x4F53;&#x548C;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x6BD4;&#x8F83;&#xFF0C;&#x4EA7;&#x751F;&#x65B0;&#x7684;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;</font></p><p>&#x2003;&#x2003;<font size="4">7. &#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">8. &#x6B64;&#x65F6;&#x5F97;&#x5230;&#x514D;&#x75AB;&#x529B;&#x6700;&#x597D;&#x7684;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#xFF0C;&#x6BD4;&#x8F83;&#x53EF;&#x5F97;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x6700;&#x4F18;&#x89E3;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/ia2.png" alt="IA"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="IA-main-m"><a href="#IA-main-m" class="headerlink" title="IA_main.m"></a>IA_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x79CD;&#x7FA4;&#x6570;&#x91CF;</span><br><span class="line">n=100;</span><br><span class="line">%&#x9057;&#x4F20;&#x8FED;&#x4EE3;&#x65F6;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4EE3;&#x7684;&#x6570;&#x91CF;</span><br><span class="line">m=50    ;</span><br><span class="line">%&#x4ECE;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x79CD;&#x62FF;&#x51FA;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">l=50;</span><br><span class="line">%&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=100;</span><br><span class="line">%&#x514D;&#x75AB;&#x4F5C;&#x7528;&#x6B21;&#x6570;</span><br><span class="line">t=10;</span><br><span class="line">%&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;</span><br><span class="line">remember=rand(1,n)*(range(2)-range(1))+range(1);</span><br><span class="line">tic</span><br><span class="line">for p=1:t</span><br><span class="line">    group=[remember(randperm(n,l)),rand(1,n-l)*(range(2)-range(1))+range(1)];</span><br><span class="line">    %&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">    best_value=zeros(1,times);</span><br><span class="line">    for k=1:times</span><br><span class="line">        y=f(group);</span><br><span class="line">        %&#x5168;&#x90E8;&#x53D8;&#x6210;&#x6B63;&#x503C;</span><br><span class="line">        if min(y)&lt;0</span><br><span class="line">            tem=y-min(y)*1.0001;</span><br><span class="line">        else</span><br><span class="line">            tem=y+0.1;</span><br><span class="line">        end</span><br><span class="line">        %&#x503C;&#x8D8A;&#x5C0F;&#x9002;&#x5E94;&#x8D8A;&#x597D;</span><br><span class="line">        tem=1./tem;</span><br><span class="line">        child=zeros(1,n);</span><br><span class="line">        %&#x6311;&#x9009;m&#x4E2A;&#x79CD;&#x7FA4;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4EE3;</span><br><span class="line">        for i=1:m</span><br><span class="line">            %&#x8F6E;&#x76D8;&#x8D4C;&#x9009;&#x62E9;&#xFF0C;&#x9002;&#x5E94;&#x5927;&#x7684;&#x9009;&#x62E9;&#x6982;&#x7387;&#x5927;</span><br><span class="line">            temp=zeros(1,n-i+1);</span><br><span class="line">            for j=1:n-i+1</span><br><span class="line">                temp(j)=sum(tem(1:j));</span><br><span class="line">            end</span><br><span class="line">            temp=temp/temp(n-i+1);</span><br><span class="line">            %&#x4FDD;&#x7559;&#x6700;&#x5408;&#x9002;&#x7684;&#x7269;&#x79CD;</span><br><span class="line">            choose=find(temp&gt;rand(1),1);</span><br><span class="line">            child(i)=group(choose);</span><br><span class="line">            group=[group(1:choose-1),group(choose+1:end)];</span><br><span class="line">            tem=[tem(1:choose-1),tem(choose+1:end)];</span><br><span class="line">        end</span><br><span class="line">        %&#x67D3;&#x8272;&#x4F53;&#x4EA4;&#x6362;,&#x4FDD;&#x7559;&#x7684;&#x7269;&#x79CD;&#x4EA7;&#x751F;&#x540E;&#x4EE3;&#x65F6;&#x53D1;&#x751F;&#x57FA;&#x56E0;&#x91CD;&#x7EC4;</span><br><span class="line">        for i=1:floor((n-m)/2)</span><br><span class="line">            exchange=randperm(m,2);</span><br><span class="line">            a=rand(1);</span><br><span class="line">            child(i*2-1+m)=a*child(exchange(1))+(1-a)*child(exchange(2));</span><br><span class="line">            child(i*2+m)=(1-a)*child(exchange(1))+a*child(exchange(2));</span><br><span class="line">        end</span><br><span class="line">        if mod(n-m,2)==1</span><br><span class="line">            exchange=randperm(m,2);</span><br><span class="line">            child(n)=(child(exchange(1))+child(exchange(2)))/2;</span><br><span class="line">        end</span><br><span class="line">        %&#x57FA;&#x56E0;&#x91CD;&#x7EC4;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x67D3;&#x8272;&#x4F53;&#x53D8;&#x5F02;</span><br><span class="line">        if rand(1)&lt;0.05</span><br><span class="line">            exchange=randperm(n-m,1);</span><br><span class="line">            a=rand(1);</span><br><span class="line">            child(exchange+m)=a*child(exchange+m)+(1-a)*(rand(1)*(range(2)-range(1))+range(1));</span><br><span class="line">        end</span><br><span class="line">        %&#x91CD;&#x7EC4;&#x4E4B;&#x540E;&#x540E;&#x4EE3;&#x53D8;&#x6210;&#x5F53;&#x524D;&#x79CD;&#x7FA4;</span><br><span class="line">        group=child;</span><br><span class="line">        best_value(k)=min(f(group));</span><br><span class="line">        %&#x5982;&#x679C;&#x591A;&#x6B21;&#x8FED;&#x4EE3;&#x540E;&#x503C;&#x4E0D;&#x53D8;&#x5316;&#xFF0C;&#x8BF4;&#x660E;&#x627E;&#x5230;&#x4E86;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">        if k&gt;5&amp;&amp;abs(best_value(k)-best_value(k-5))&lt;1e-5</span><br><span class="line">            break;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    %&#x5C06;&#x672C;&#x6B21;&#x514D;&#x75AB;&#x8FC7;&#x7A0B;&#x4E2D;&#x6700;&#x597D;&#x7684;&#x548C;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x6BD4;&#x8F83;&#xFF0C;&#x9009;&#x53D6;&#x6700;&#x597D;&#x7684;&#x4F5C;&#x4E3A;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;</span><br><span class="line">    if min(f(group))&lt;=min(f(remember))</span><br><span class="line">        [~,index]=min(f(group));</span><br><span class="line">        remember=ones(1,n)*group(index);</span><br><span class="line">    else</span><br><span class="line">        [~,index]=min(f(remember));</span><br><span class="line">        remember=ones(1,n)*remember(index);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(remember));</span><br><span class="line">disp(mini)</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(remember(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/ia1.png" alt="IA"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.966448106285)=-418.982886605937$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;</li><li>&#x89E3;&#x51B3;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x5BF9;&#x6297;&#x4F53;&#x9009;&#x62E9;&#x7684;&#x4F9D;&#x8D56;&#x6027;&#x964D;&#x4F4E;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x4F7F;&#x7528;&#x6982;&#x7387;&#x673A;&#x5236;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#xFF0C;&#x5177;&#x6709;&#x968F;&#x673A;&#x6027;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x95EE;&#x9898;&#x7F16;&#x7801;&#x8868;&#x793A;&#x8F83;&#x4E3A;&#x56F0;&#x96BE;</li><li>&#x8981;&#x8FDB;&#x884C;&#x591A;&#x6B21;&#x514D;&#x75AB;&#x5E94;&#x7B54;&#xFF0C;&#x56E0;&#x6B64;&#x901F;&#x5EA6;&#x6162;&#x4E8E;&#x9057;&#x4F20;&#x7B97;&#x6CD5;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;IA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>遗传算法(GA)</title>
    <link href="https://USTCcoder.github.io/2019/05/21/optimization_GA/"/>
    <id>https://USTCcoder.github.io/2019/05/21/optimization_GA/</id>
    <published>2019-05-21T09:59:45.000Z</published>
    <updated>2019-05-27T03:52:03.173Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x9057;&#x4F20;&#x7B97;&#x6CD5;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;GA(Genetic Algorithm):&#x662F;&#x6A21;&#x62DF;&#x8FBE;&#x5C14;&#x6587;&#x751F;&#x7269;&#x8FDB;&#x5316;&#x8BBA;&#x7684;<strong>&#x81EA;&#x7136;&#x9009;&#x62E9;</strong>&#x548C;<strong>&#x9057;&#x4F20;&#x5B66;&#x673A;&#x7406;</strong>&#x7684;&#x751F;&#x7269;&#x8FDB;&#x5316;&#x8FC7;&#x7A0B;&#x7684;&#x8BA1;&#x7B97;&#x6A21;&#x578B;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x5C31;&#x80FD;&#x81EA;&#x52A8;&#x83B7;&#x53D6;&#x548C;&#x6307;&#x5BFC;&#x4F18;&#x5316;&#x7684;&#x641C;&#x7D22;&#x7A7A;&#x95F4;&#xFF0C;<strong>&#x81EA;&#x9002;&#x5E94;</strong>&#x5730;&#x8C03;&#x6574;&#x641C;&#x7D22;&#x65B9;&#x5411;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x6A21;&#x62DF;&#x81EA;&#x7136;&#x8FDB;&#x5316;&#x8FC7;&#x7A0B;&#x641C;&#x7D22;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x65B9;&#x6CD5;&#x3002;<a id="more"></a><br>&#x521D;&#x4EE3;&#x79CD;&#x7FA4;&#x4EA7;&#x751F;&#x4E4B;&#x540E;&#xFF0C;&#x6309;&#x7167;<strong>&#x9002;&#x8005;&#x751F;&#x5B58;</strong>&#x548C;<strong>&#x4F18;&#x80DC;&#x52A3;&#x6C70;</strong>&#x7684;&#x539F;&#x7406;&#xFF0C;&#x9010;&#x4EE3;&#xFF08;generation&#xFF09;&#x6F14;&#x5316;&#x4EA7;&#x751F;&#x51FA;&#x8D8A;&#x6765;&#x8D8A;&#x597D;&#x7684;&#x8FD1;&#x4F3C;&#x89E3;&#xFF0C;&#x5728;&#x6BCF;&#x4E00;&#x4EE3;&#xFF0C;&#x6839;&#x636E;&#x95EE;&#x9898;&#x57DF;&#x4E2D;&#x4E2A;&#x4F53;&#x7684;<strong>&#x9002;&#x5E94;&#x5EA6;&#xFF08;fitness&#xFF09;</strong>&#x5927;&#x5C0F;&#x9009;&#x62E9;&#x4E2A;&#x4F53;&#xFF0C;&#x5E76;&#x501F;&#x52A9;&#x4E8E;&#x81EA;&#x7136;&#x9057;&#x4F20;&#x5B66;&#x7684;<strong>&#x9057;&#x4F20;&#x7B97;&#x5B50;</strong>&#x8FDB;&#x884C;&#x7EC4;&#x5408;<strong>&#x4EA4;&#x53C9;&#xFF08;crossover&#xFF09;</strong>&#x548C;<strong>&#x53D8;&#x5F02;&#xFF08;mutation&#xFF09;</strong>&#xFF0C;&#x4EA7;&#x751F;&#x51FA;&#x4EE3;&#x8868;&#x65B0;&#x7684;&#x89E3;&#x96C6;&#x7684;&#x79CD;&#x7FA4;&#x3002;</p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x521D;&#x59CB;&#x79CD;&#x7FA4;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x6839;&#x636E;&#x9002;&#x5E94;&#x5EA6;&#x5BF9;&#x79CD;&#x7FA4;&#x91C7;&#x7528;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x81EA;&#x7136;&#x9009;&#x62E9;</font></p><p>&#x2003;&#x2003;<font size="4">3. &#x5BF9;&#x9009;&#x62E9;&#x5269;&#x4F59;&#x7684;&#x79CD;&#x7FA4;&#x8FDB;&#x884C;&#x9057;&#x4F20;&#x64CD;&#x4F5C;&#xFF0C;&#x4EA7;&#x751F;&#x65B0;&#x7684;&#x79CD;&#x7FA4;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x6B64;&#x65F6;&#x5269;&#x4F59;&#x7684;&#x662F;&#x9002;&#x5E94;&#x5EA6;&#x8F83;&#x597D;&#x7684;&#x79CD;&#x7FA4;&#xFF0C;&#x6BD4;&#x8F83;&#x53EF;&#x5F97;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x6700;&#x4F18;&#x89E3;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/ga2.png" alt="GA"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="GA-main-m"><a href="#GA-main-m" class="headerlink" title="GA_main.m"></a>GA_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x79CD;&#x7FA4;&#x6570;&#x91CF;</span><br><span class="line">n=100;</span><br><span class="line">%&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4EE3;&#x7684;&#x6570;&#x91CF;</span><br><span class="line">m=50;</span><br><span class="line">%&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=100;</span><br><span class="line">%&#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x79CD;&#x7FA4;</span><br><span class="line">group=rand(1,n)*(range(2)-range(1))+range(1);</span><br><span class="line">%&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">best_value=zeros(1,times);</span><br><span class="line">tic;</span><br><span class="line">for k=1:times</span><br><span class="line">    y=f(group);</span><br><span class="line">    %&#x5168;&#x90E8;&#x53D8;&#x6210;&#x6B63;&#x503C;</span><br><span class="line">    if min(y)&lt;0</span><br><span class="line">        tem=y-min(y)*1.0001;</span><br><span class="line">    else</span><br><span class="line">        tem=y+0.1;</span><br><span class="line">    end</span><br><span class="line">    %&#x503C;&#x8D8A;&#x5C0F;&#x9002;&#x5E94;&#x8D8A;&#x597D;</span><br><span class="line">    tem=1./tem;</span><br><span class="line">    child=zeros(1,n);</span><br><span class="line">    %&#x6311;&#x9009;m&#x4E2A;&#x79CD;&#x7FA4;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4EE3;</span><br><span class="line">    for i=1:m</span><br><span class="line">        %&#x8F6E;&#x76D8;&#x8D4C;&#x9009;&#x62E9;&#xFF0C;&#x9002;&#x5E94;&#x5927;&#x7684;&#x9009;&#x62E9;&#x6982;&#x7387;&#x5927;</span><br><span class="line">        temp=zeros(1,n-i+1);</span><br><span class="line">        for j=1:n-i+1</span><br><span class="line">            temp(j)=sum(tem(1:j));</span><br><span class="line">        end</span><br><span class="line">        temp=temp/temp(n-i+1);</span><br><span class="line">        %&#x4FDD;&#x7559;&#x6700;&#x5408;&#x9002;&#x7684;&#x7269;&#x79CD;</span><br><span class="line">        choose=find(temp&gt;rand(1),1);</span><br><span class="line">        child(i)=group(choose);</span><br><span class="line">        group=[group(1:choose-1),group(choose+1:end)];</span><br><span class="line">        tem=[tem(1:choose-1),tem(choose+1:end)];</span><br><span class="line">    end</span><br><span class="line">    %&#x67D3;&#x8272;&#x4F53;&#x4EA4;&#x6362;,&#x4FDD;&#x7559;&#x7684;&#x7269;&#x79CD;&#x4EA7;&#x751F;&#x540E;&#x4EE3;&#x65F6;&#x53D1;&#x751F;&#x57FA;&#x56E0;&#x91CD;&#x7EC4;</span><br><span class="line">    for i=1:floor((n-m)/2)</span><br><span class="line">        exchange=randperm(m,2);</span><br><span class="line">        a=rand(1);</span><br><span class="line">        child(i*2-1+m)=a*child(exchange(1))+(1-a)*child(exchange(2));</span><br><span class="line">        child(i*2+m)=(1-a)*child(exchange(1))+a*child(exchange(2));</span><br><span class="line">    end</span><br><span class="line">    if mod(n-m,2)==1</span><br><span class="line">        exchange=randperm(m,2);</span><br><span class="line">        child(n)=(child(exchange(1))+child(exchange(2)))/2;</span><br><span class="line">    end</span><br><span class="line">    %&#x57FA;&#x56E0;&#x91CD;&#x7EC4;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x67D3;&#x8272;&#x4F53;&#x53D8;&#x5F02;</span><br><span class="line">    if rand(1)&lt;0.05</span><br><span class="line">        exchange=randperm(n-m,1);</span><br><span class="line">        a=rand(1);</span><br><span class="line">        child(exchange+m)=a*child(exchange+m)+(1-a)*(rand(1)*(range(2)-range(1))+range(1));</span><br><span class="line">    end</span><br><span class="line">    %&#x91CD;&#x7EC4;&#x4E4B;&#x540E;&#x540E;&#x4EE3;&#x53D8;&#x6210;&#x5F53;&#x524D;&#x79CD;&#x7FA4;</span><br><span class="line">    group=child;</span><br><span class="line">    best_value(k)=min(f(group));</span><br><span class="line">    %&#x5982;&#x679C;&#x591A;&#x6B21;&#x8FED;&#x4EE3;&#x540E;&#x503C;&#x4E0D;&#x53D8;&#x5316;&#xFF0C;&#x8BF4;&#x660E;&#x627E;&#x5230;&#x4E86;&#x6700;&#x4F18;&#x89E3;</span><br><span class="line">    if k&gt;5&amp;&amp;abs(best_value(k)-best_value(k-5))&lt;1e-5</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(group));</span><br><span class="line">disp(mini)</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(group(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/ga1.png" alt="GA"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.975929624477)=-418.982880761435$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x4ECE;&#x7FA4;&#x4F53;&#x51FA;&#x53D1;&#xFF0C;&#x5177;&#x6709;&#x5E76;&#x884C;&#x6027;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x4F7F;&#x7528;&#x6982;&#x7387;&#x673A;&#x5236;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#xFF0C;&#x5177;&#x6709;&#x968F;&#x673A;&#x6027;</li><li>&#x5177;&#x6709;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5BB9;&#x6613;&#x4E0E;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x7ED3;&#x5408;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x53D7;&#x5230;&#x53C2;&#x6570;&#x5F71;&#x54CD;&#x8F83;&#x5927;</li><li>&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x65E9;&#x719F;&#x6536;&#x655B;&#x95EE;&#x9898;</li><li>&#x5BF9;&#x95EE;&#x9898;&#x7F16;&#x7801;&#x8868;&#x793A;&#x8F83;&#x4E3A;&#x56F0;&#x96BE;</li><li>&#x7B97;&#x6CD5;&#x5BF9;&#x521D;&#x59CB;&#x79CD;&#x7FA4;&#x7684;&#x9009;&#x62E9;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x4F9D;&#x8D56;&#x6027;</li><li>&#x641C;&#x7D22;&#x901F;&#x5EA6;&#x6BD4;&#x8F83;&#x6162;&#xFF0C;&#x8981;&#x5F97;&#x5230;&#x8F83;&#x7CBE;&#x786E;&#x7684;&#x89E3;&#x9700;&#x8981;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x65F6;&#x95F4;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;GA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>模拟退火算法(SA)</title>
    <link href="https://USTCcoder.github.io/2019/05/20/optimization_SA/"/>
    <id>https://USTCcoder.github.io/2019/05/20/optimization_SA/</id>
    <published>2019-05-20T12:12:20.000Z</published>
    <updated>2019-05-27T04:01:07.628Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x6A21;&#x62DF;&#x9000;&#x706B;&#x7B97;&#x6CD5;</font></strong></center><p></p><h1 id="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"><a href="#&#x80CC;&#x666F;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x80CC;&#x666F;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x80CC;&#x666F;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;SA(Simulate Anneal):&#x662F;&#x4E00;&#x79CD;&#x57FA;&#x4E8E;<strong>Mentcarlo&#x8FED;&#x4EE3;&#x6C42;&#x89E3;&#x6CD5;</strong>&#x7684;&#x4E00;&#x79CD;&#x542F;&#x53D1;&#x5F0F;&#x968F;&#x673A;&#x641C;&#x7D22;&#x65B9;&#x6CD5;&#xFF0C;&#x57FA;&#x4E8E;&#x7269;&#x7406;&#x4E2D;&#x56FA;&#x4F53;&#x7269;&#x8D28;&#x7684;&#x9000;&#x706B;&#x8FC7;&#x7A0B;&#x4E0E;&#x4E00;&#x822C;&#x7EC4;&#x5408;&#x4F18;&#x5316;&#x95EE;&#x9898;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x4F3C;&#x6027;&#xFF0C;&#x901A;&#x8FC7;<strong>&#x6A21;&#x62DF;&#x9000;&#x706B;&#x8FC7;&#x7A0B;</strong>&#xFF0C;&#x7528;&#x6765;&#x5728;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x641C;&#x5BFB;&#x7A7A;&#x95F4;&#x5185;&#x627E;&#x5BFB;&#x547D;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#xFF08;&#x6216;&#x8FD1;&#x4F3C;&#x6700;&#x4F18;&#x89E3;&#xFF09;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x4EFB;&#x9009;&#x4E00;&#x521D;&#x59CB;&#x72B6;&#x6001;S<sub>0</sub>&#x4F5C;&#x4E3A;&#x5F53;&#x524D;&#x89E3;&#xFF0C;&#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x6E29;&#x5EA6;T<sub>0</sub></font></p><p>&#x2003;&#x2003;<font size="4">2. &#x5BF9;&#x8BE5;&#x6E29;&#x5EA6;&#x4E0B;&#x7684;&#x72B6;&#x6001;S<sub>0</sub>&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6270;&#x52A8;S&#x2019;&#xFF0C;&#x5E76;&#x6309;&#x6982;&#x7387;&#x63A5;&#x6536;</font><br>$$\Delta C=f(S&#x2019;)-f(S)$$</p><p>$$P= \begin{cases} 1 &amp;  \Delta C \leq 0 \ e^{\frac {- \Delta C}{T} } &amp; \Delta C &gt; 0 \end{cases}$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x6309;&#x7167;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x964D;&#x6E29;T=T-&#x394;T&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x6B64;&#x65F6;&#x8FBE;&#x5230;&#x7684;&#x72B6;&#x6001;S&#x5373;&#x4E3A;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x6700;&#x4F18;&#x89E3;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/OPTIMIZATION/sa2.png" alt="SA"></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/05/19/optimization_Testfunction/">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;(Test Function)</a></font></p><h2 id="SA-ap-m"><a href="#SA-ap-m" class="headerlink" title="SA_ap.m"></a>SA_ap.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">%&#x6240;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x51FD;&#x6570;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">%x&#x53D6;&#x503C;&#x8303;&#x56F4;</span><br><span class="line">range=[-500,500];</span><br><span class="line">%&#x5C1D;&#x8BD5;&#x89E3;&#x6B21;&#x6570;</span><br><span class="line">num=30;</span><br><span class="line">value=zeros(1,num);</span><br><span class="line">tic;</span><br><span class="line">for i=1:num</span><br><span class="line">    x=rand(1)*(range(2)-range(1))+range(1);</span><br><span class="line">    %&#x521D;&#x59CB;&#x6E29;&#x5EA6;t</span><br><span class="line">    t=100;</span><br><span class="line">    while t&gt;0</span><br><span class="line">        x=SA_metripolis(f,range,t,x);</span><br><span class="line">        %&#x6E29;&#x5EA6;&#x6BCF;&#x6B21;&#x4E0B;&#x964D;0.1&#xB0;</span><br><span class="line">        t=t-0.1;</span><br><span class="line">    end</span><br><span class="line">    value(i)=x;</span><br><span class="line">end</span><br><span class="line">[mini,index]=min(f(value));</span><br><span class="line">disp(mini);</span><br><span class="line">time=toc;</span><br><span class="line">hold on;</span><br><span class="line">plot(value(index),mini,&apos;ro&apos;);</span><br><span class="line">x=-500:1:500;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y);</span><br><span class="line">text(0,550,[&apos;&#x7528;&#x65F6;&#xFF1A;&apos;,num2str(time),&apos;&#x79D2;&apos;]);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><h2 id="SA-metripolis-m"><a href="#SA-metripolis-m" class="headerlink" title="SA_metripolis.m"></a>SA_metripolis.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">function s=SA_metripolis(f,range,t,s)</span><br><span class="line">delta=1;</span><br><span class="line">for i=1:100</span><br><span class="line">    %&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x6270;&#x52A8;</span><br><span class="line">    s_new=(rand(1)-0.5)*delta+s;</span><br><span class="line">    %&#x9650;&#x5236;&#x89E3;&#x7684;&#x8303;&#x56F4;</span><br><span class="line">    if s_new&lt;range(1)</span><br><span class="line">        s_new=range(1);</span><br><span class="line">    end</span><br><span class="line">    if s_new&gt;range(2)</span><br><span class="line">        s_new=range(2);</span><br><span class="line">    end</span><br><span class="line">    dc=f(s_new)-f(s);</span><br><span class="line">    if dc&lt;0</span><br><span class="line">        s=s_new;</span><br><span class="line">        %&#x5982;&#x679C;&#x6270;&#x52A8;&#x7684;&#x7ED3;&#x679C;&#x6BD4;&#x539F;&#x6765;&#x5927;&#xFF0C;&#x5219;&#x6709;&#x6982;&#x7387;&#x7684;&#x4FDD;&#x7559;</span><br><span class="line">    else</span><br><span class="line">        p=exp(-dc/t);</span><br><span class="line">        if rand(1)&lt;=p</span><br><span class="line">            s=s_new;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/OPTIMIZATION/sa1.png" alt="SA"><br>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$&#x7406;&#x8BBA;&#x503C;&#xFF1A;f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><p>$$&#x6240;&#x6C42;&#x503C;&#xFF1A;f(x)_{min}=f(-420.967823415805)=-418.982887164947$$</p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x7B80;&#x5355;</li><li>&#x53EF;&#x7528;&#x4E8E;&#x6C42;&#x89E3;&#x590D;&#x6742;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x4F18;&#x5316;&#x95EE;&#x9898;</li><li>&#x76F8;&#x6BD4;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x9003;&#x79BB;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x7684;&#x53EF;&#x80FD;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x53C2;&#x6570;&#x654F;&#x611F;</li><li>&#x6536;&#x655B;&#x901F;&#x5EA6;&#x6162;</li><li>&#x6267;&#x884C;&#x65F6;&#x95F4;&#x957F;</li><li>&#x7B97;&#x6CD5;&#x6027;&#x80FD;&#x4E0E;&#x521D;&#x59CB;&#x503C;&#x6709;&#x5173;</li><li>&#x53EF;&#x80FD;&#x843D;&#x5165;&#x5176;&#x4ED6;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;SA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>测试函数(Test Function)</title>
    <link href="https://USTCcoder.github.io/2019/05/19/optimization_Testfunction/"/>
    <id>https://USTCcoder.github.io/2019/05/19/optimization_Testfunction/</id>
    <published>2019-05-19T11:29:40.000Z</published>
    <updated>2019-05-26T11:31:16.123Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x8BF4;&#x660E;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x4ECB;&#x7ECD;"><a href="#&#x539F;&#x7406;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x539F;&#x7406;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x539F;&#x7406;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;Test Function:&#x5BF9;&#x4E8E;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x6765;&#x8BF4;&#xFF0C;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x9009;&#x62E9;&#x662F;<strong>&#x81F3;&#x5173;&#x91CD;&#x8981;</strong>&#x7684;&#xFF0C;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x597D;&#x574F;&#x5F80;&#x5F80;&#x53EF;&#x4EE5;&#x4F53;&#x73B0;&#x51FA;<strong>&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#x7684;&#x4F18;&#x52A3;</strong>&#x3002;&#x6709;&#x65F6;&#x6027;&#x80FD;&#x4E00;&#x822C;&#x7684;&#x7B97;&#x6CD5;&#x5728;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x51FD;&#x6570;&#x4E0B;&#x53D1;&#x6325;&#x7684;&#x5F88;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x522B;&#x7684;&#x51FD;&#x6570;&#x4E0B;&#x5C31;&#x5F88;&#x96BE;&#x641C;&#x7D22;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BBE;&#x8BA1;&#x5404;&#x79CD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x4ECE;<strong>&#x641C;&#x7D22;&#x6548;&#x7387;&#xFF0C;&#x641C;&#x7D22;&#x7CBE;&#x5EA6;&#xFF0C;&#x9002;&#x5E94;&#x7A0B;&#x5EA6;</strong>&#x591A;&#x4E2A;&#x65B9;&#x9762;&#x7EFC;&#x5408;&#x6BD4;&#x8F83;&#x5404;&#x4E2A;&#x7B97;&#x6CD5;&#xFF0C;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x5728;&#x4ECA;&#x540E;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x624D;&#x80FD;&#x5F97;&#x5FC3;&#x5E94;&#x624B;&#x3002;<br><a id="more"></a></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><h2 id="Function-one-m"><a href="#Function-one-m" class="headerlink" title="Function_one.m"></a>Function_one.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">f=@(x)x.*sin(sqrt(abs(x)));</span><br><span class="line">x=-5000:1:5000;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y)</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/OPTIMIZATION/test_function1.png" alt="one"></p><p>$$f(x)=x \cdot \sin(\sqrt{\lvert x \rvert}) \ , \ x \in [-500,500]$$</p><p>$$f(x)_{min}=f(-420.96874592006)=-418.982887272434$$</p><h2 id="Function-two-m"><a href="#Function-two-m" class="headerlink" title="Function_two.m"></a>Function_two.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">f=@(x)((x+1).*(x+2).*(x+3).*(x+4).*(x+5)+5);</span><br><span class="line">x=-5:0.01:0;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y)</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/OPTIMIZATION/test_function2.png" alt="two"></p><p>$$f(x)=x \cdot (x+1) \cdot (x+2) \cdot (x+3) \cdot (x+4) \cdot (x+5) + 5 \ , \ x \in [-5,0]$$</p><p>$$f(x)_{min}=f(-1.35556713184173)=1.36856779155116$$</p><h2 id="Function-three-m"><a href="#Function-three-m" class="headerlink" title="Function_three.m"></a>Function_three.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">f=@(x)((x+2).*cos(9*x)+sin(7*x));</span><br><span class="line">x=0:0.01:4;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y)</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/OPTIMIZATION/test_function3.png" alt="three"><br>$$f(x)=(x+2) \cdot \cos(9 \ x) + \sin(7 \ x) \ , \ x \in [0,4]$$</p><p>$$f(x)_{min}=f(2.44888001781347)=-5.43427465397202$$</p><h2 id="Function-four-m"><a href="#Function-four-m" class="headerlink" title="Function_four.m"></a>Function_four.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">f=@(x)(5*exp(-0.5*x).*sin(30*x)+exp(0.2*x).*sin(20*x)+6);</span><br><span class="line">x=0:0.01:8;</span><br><span class="line">y=f(x);</span><br><span class="line">plot(x,y)</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/OPTIMIZATION/test_function4.png" alt="four"><br>$$f(x)=5 \ e^{-0.5 \ x} \cdot \sin(30 \ x) + e^{0.2 \ x} \cdot \sin(20 \ x) + 6 \ , \ x \in [0,8]$$</p><p>$$f(x)_{min}=f(0.5725)=1.2573$$</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Test Function&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="全局搜索方法" scheme="https://USTCcoder.github.io/categories/Computer-Science/%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>聚类算法比较(Clustering Algorithms Comparison)</title>
    <link href="https://USTCcoder.github.io/2019/05/17/clustering_compare/"/>
    <id>https://USTCcoder.github.io/2019/05/17/clustering_compare/</id>
    <published>2019-05-17T14:20:18.000Z</published>
    <updated>2019-05-27T04:43:51.744Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x805A;&#x7C7B;&#x7B97;&#x6CD5;&#x6BD4;&#x8F83;</font></strong></center><p></p><h1 id="&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;"><a href="#&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;" class="headerlink" title="&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;"></a><font size="5" color="red">&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;</font></h1><p>&#x2003;&#x2003;&#x73B0;&#x5B9E;&#x751F;&#x6D3B;&#x4E2D;&#x5E38;&#x5E38;&#x4F1A;<strong>&#x7F3A;&#x4E4F;&#x8DB3;&#x591F;&#x7684;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;</strong>&#xFF0C;&#x56E0;&#x6B64;<strong>&#x96BE;&#x4EE5;&#x4EBA;&#x5DE5;&#x6807;&#x6CE8;&#x7C7B;&#x522B;&#x6216;&#x8FDB;&#x884C;&#x4EBA;&#x5DE5;&#x7C7B;&#x522B;&#x6807;&#x6CE8;&#x7684;&#x6210;&#x672C;&#x592A;&#x9AD8;</strong>&#x3002;&#x5F88;&#x81EA;&#x7136;&#x5730;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x8BA1;&#x7B97;&#x673A;&#x80FD;&#x4EE3;&#x6211;&#x4EEC;&#x5B8C;&#x6210;&#x8FD9;&#x4E9B;&#x5DE5;&#x4F5C;&#xFF0C;&#x6216;&#x81F3;&#x5C11;&#x63D0;&#x4F9B;&#x4E00;&#x4E9B;&#x5E2E;&#x52A9;&#x3002;&#x6839;&#x636E;<strong>&#x7C7B;&#x522B;&#x672A;&#x77E5;(&#x6CA1;&#x6709;&#x88AB;&#x6807;&#x8BB0;)</strong>&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x89E3;&#x51B3;&#x6A21;&#x5F0F;&#x8BC6;&#x522B;&#x4E2D;&#x7684;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;<strong>&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;</strong>&#x3002;<br><a id="more"></a></p><h1 id="&#x7B97;&#x6CD5;&#x5206;&#x7C7B;"><a href="#&#x7B97;&#x6CD5;&#x5206;&#x7C7B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x5206;&#x7C7B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x5206;&#x7C7B;</font></h1><p><img src="/images/MACHINE/compare5.png" alt="COMPARE"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><p><font size="4">&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;-AGNES"><a href="#&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;-AGNES" class="headerlink" title="&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;(AGNES)"></a><a href="https://ustccoder.github.io/2019/05/01/clustering_AGNES/">&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;(AGNES)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x503C;&#x7684;&#x9009;&#x62E9;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x5FEB;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5408;&#x5E76;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x5C11;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/agnes.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_agnes2.png" width="200" height="260"><center>&#x5706;&#x5F62;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;-DIANA"><a href="#&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;-DIANA" class="headerlink" title="&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;(DIANA)"></a><a href="https://ustccoder.github.io/2019/05/02/clustering_DIANA/">&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;(DIANA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x503C;&#x7684;&#x9009;&#x62E9;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x5C11;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x5FEB;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x654F;&#x611F;</li><li>&#x5206;&#x88C2;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/diana.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_diana4.png" width="200" height="260"><center>&#x6DF7;&#x5408;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="K&#x5747;&#x503C;&#x805A;&#x7C7B;-K-MEANS"><a href="#K&#x5747;&#x503C;&#x805A;&#x7C7B;-K-MEANS" class="headerlink" title="K&#x5747;&#x503C;&#x805A;&#x7C7B;(K-MEANS)"></a><a href="https://ustccoder.github.io/2019/05/03/clustering_KMEANS/">K&#x5747;&#x503C;&#x805A;&#x7C7B;(K-MEANS)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x521D;&#x59CB;&#x4E2D;&#x5FC3;&#x70B9;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/kmeans.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_kmeans3.png" width="200" height="260"><center>&#x76F4;&#x7EBF;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;-ISODATA"><a href="#&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;-ISODATA" class="headerlink" title="&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;(ISODATA)"></a><a href="https://ustccoder.github.io/2019/05/04/clustering_ISODATA/">&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;(ISODATA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x53EF;&#x4EE5;&#x52A8;&#x6001;&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x4E2A;&#x6570;&#x548C;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;</li><li>&#x5728;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E0D;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6709;&#x8F83;&#x597D;&#x7684;&#x5206;&#x7C7B;&#x80FD;&#x529B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x521D;&#x59CB;&#x4E2D;&#x5FC3;&#x70B9;&#x654F;&#x611F;</li><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/isodata.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_isodata3.png" width="200" height="260"><center>&#x76F4;&#x7EBF;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;-DBSCAN"><a href="#&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;-DBSCAN" class="headerlink" title="&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;(DBSCAN)"></a><a href="https://ustccoder.github.io/2019/05/05/clustering_DBSCAN/">&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;(DBSCAN)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x786E;&#x5B9A;eps&#x548C;minPts</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x5BC6;&#x5EA6;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x7684;&#x60C5;&#x51B5;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/dbscan.png" width="200" height="260"><center>&#x5706;&#x5F62;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_dbscan3.png" width="200" height="260"><center>&#x76F4;&#x7EBF;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;-MDCA"><a href="#&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;-MDCA" class="headerlink" title="&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;(MDCA)"></a><a href="https://ustccoder.github.io/2019/05/07/clustering_MDCA/">&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;(MDCA)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x786E;&#x5B9A;&#x5BC6;&#x5EA6;&#x9608;&#x503C;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x5BC6;&#x5EA6;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x6216;&#x6574;&#x4F53;&#x5BC6;&#x5EA6;&#x57FA;&#x672C;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/mdca.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_mdca4.png" width="200" height="260"><center>&#x6DF7;&#x5408;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x805A;&#x7C7B;-CFDP"><a href="#&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x805A;&#x7C7B;-CFDP" class="headerlink" title="&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x805A;&#x7C7B;(CFDP)"></a><a href="https://ustccoder.github.io/2019/05/09/clustering_CFDP/">&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x805A;&#x7C7B;(CFDP)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x79BB;&#x7FA4;&#x70B9;&#x7684;&#x786E;&#x5B9A;&#x975E;&#x5E38;&#x590D;&#x6742;</li><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x6574;&#x4F53;&#x5BC6;&#x5EA6;&#x57FA;&#x672C;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/compare_cfdp1.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_cfdp4.png" width="200" height="260"><center>&#x6DF7;&#x5408;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x8C31;&#x805A;&#x7C7B;-Spectral-Clustering"><a href="#&#x8C31;&#x805A;&#x7C7B;-Spectral-Clustering" class="headerlink" title="&#x8C31;&#x805A;&#x7C7B;(Spectral Clustering)"></a><a href="https://ustccoder.github.io/2019/05/11/clustering_SPECTRAL/">&#x8C31;&#x805A;&#x7C7B;(Spectral Clustering)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x4F7F;&#x7528;&#x4E86;&#x964D;&#x7EF4;&#x6280;&#x672F;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#x7684;&#x805A;&#x7C7B;</li><li>&#x5EFA;&#x7ACB;&#x5728;&#x8C31;&#x56FE;&#x7406;&#x8BBA;&#xFF0C;&#x80FD;&#x5728;&#x5927;&#x90E8;&#x5206;&#x5F62;&#x72B6;&#x805A;&#x7C7B;&#xFF0C;&#x6536;&#x655B;&#x4E8E;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x96BE;&#x4EE5;&#x5BF9;&#x5706;&#x5F62;&#x6570;&#x636E;&#x805A;&#x7C7B;</li><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x975E;&#x5E38;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/compare_spectral3.png" width="200" height="260"><center>&#x76F4;&#x7EBF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/spectral.png" width="200" height="260"><center>&#x6DF7;&#x5408;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h2 id="&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x6A21;&#x578B;&#x805A;&#x7C7B;-GMM"><a href="#&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x6A21;&#x578B;&#x805A;&#x7C7B;-GMM" class="headerlink" title="&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x6A21;&#x578B;&#x805A;&#x7C7B;(GMM)"></a><a href="https://ustccoder.github.io/2019/05/12/clustering_GMM/">&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x6A21;&#x578B;&#x805A;&#x7C7B;(GMM)</a></h2><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x5927;&#x90E8;&#x5206;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x5BF9;&#x4E8E;&#x8DDD;&#x79BB;&#x6216;&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;&#xFF0C;&#x66F4;&#x9002;&#x5408;&#x9AD8;&#x7EF4;&#x7279;&#x5F81;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x8BA1;&#x7B97;&#x590D;&#x6742;&#xFF0C;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x96BE;&#x4EE5;&#x5BF9;&#x5706;&#x5F62;&#x6570;&#x636E;&#x805A;&#x7C7B;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;&#x4F1A;&#x5BF9;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x4EA7;&#x751F;&#x5F71;&#x54CD;</li></ul></font></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/compare_gmm1.png" width="200" height="260"><center>&#x9AD8;&#x65AF;&#x578B;&#x6570;&#x636E;</center></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/compare_gmm3.png" width="200" height="260"><center>&#x76F4;&#x7EBF;&#x578B;&#x6570;&#x636E;</center></div><br><div style="float:none;clear:both;"></div><h1 id="&#x7279;&#x70B9;&#x5C0F;&#x7ED3;"><a href="#&#x7279;&#x70B9;&#x5C0F;&#x7ED3;" class="headerlink" title="&#x7279;&#x70B9;&#x5C0F;&#x7ED3;"></a><font size="5" color="red">&#x7279;&#x70B9;&#x5C0F;&#x7ED3;</font></h1><ul><li>&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x5206;&#x5E03;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x7B97;&#x6CD5;&#x90FD;&#x662F;&#x53EF;&#x4EE5;&#x9002;&#x7528;&#x7684;</li><li>&#x5706;&#x5F62;&#x5206;&#x5E03;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;DBSCAN&#x7B97;&#x6CD5;&#x6700;&#x4E3A;&#x5408;&#x9002;</li><li>&#x7EBF;&#x578B;&#x5206;&#x5E03;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;DBSCAN&#xFF0C;Spectral Clustering&#xFF0C;GMM&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;</li><li>&#x9AD8;&#x7EF4;&#x7279;&#x5F81;&#x6700;&#x597D;&#x4F7F;&#x7528;Spectral Clustering&#x6216;&#x8005;GMM&#x7B97;&#x6CD5;</li><li>&#x5BC6;&#x5EA6;&#x7B97;&#x6CD5;&#x5927;&#x591A;&#x9002;&#x7528;&#x4E8E;&#x5404;&#x7C7B;&#x7684;&#x5BC6;&#x5EA6;&#x5CF0;&#x503C;&#x76F8;&#x5DEE;&#x4E0D;&#x5927;&#x7684;&#x60C5;&#x51B5;</li><li>&#x5B9E;&#x9645;&#x4E2D;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5DF2;&#x77E5;&#x7684;&#x67D0;&#x4E9B;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x5C1D;&#x8BD5;&#x53BB;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x7B97;&#x6CD5;</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Clustering Algorithms Comparison&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>高斯混合模型聚类(GMM)</title>
    <link href="https://USTCcoder.github.io/2019/05/12/clustering_GMM/"/>
    <id>https://USTCcoder.github.io/2019/05/12/clustering_GMM/</id>
    <published>2019-05-12T12:05:27.000Z</published>
    <updated>2019-05-27T04:43:05.469Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x6A21;&#x578B;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;GMM(Gaussian Mixture Model,):&#x662F;&#x4E00;&#x4E2A;&#x5C06;&#x4E8B;&#x7269;&#x5206;&#x89E3;&#x4E3A;&#x82E5;&#x5E72;&#x7684;&#x57FA;&#x4E8E;<strong>&#x9AD8;&#x65AF;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#xFF08;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x66F2;&#x7EBF;&#xFF09;</strong>&#x5F62;&#x6210;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x6DF7;&#x5408;&#x9AD8;&#x65AF;&#x5206;&#x5E03;( MoG )&#x7531;&#x591A;&#x4E2A;&#x6DF7;&#x5408;&#x6210;&#x5206;&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6DF7;&#x5408;&#x6210;&#x5206;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#x3002;&#x5F53;&#x805A;&#x7C7B;&#x95EE;&#x9898;&#x4E2D;<strong>&#x5404;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x5C3A;&#x5BF8;&#x4E0D;&#x540C;</strong>&#x3001;&#x805A;&#x7C7B;&#x95F4;<strong>&#x6709;&#x76F8;&#x5173;&#x5173;&#x7CFB;</strong>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x4F7F;&#x7528; MoG &#x66F4;&#x5408;&#x9002;&#x3002;<a id="more"></a>&#x5BF9;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x6765;&#x8BF4;&#xFF0C; MoG &#x5F97;&#x5230;&#x7684;&#x662F;<strong>&#x5176;&#x5C5E;&#x4E8E;&#x5404;&#x4E2A;&#x7C7B;&#x7684;&#x6982;&#x7387;</strong>(&#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#x540E;&#x9A8C;&#x6982;&#x7387;&#x5F97;&#x5230;)&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B8C;&#x5168;&#x7684;&#x5C5E;&#x4E8E;&#x67D0;&#x4E2A;&#x7C7B;&#xFF0C;&#x8FD9;&#x79CD;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;&#x88AB;&#x6210;&#x4E3A;<strong>&#x8F6F;&#x805A;&#x7C7B;</strong>&#x3002;&#x4E00;&#x822C;&#x8BF4;&#x6765;&#xFF0C; <strong>&#x4EFB;&#x610F;&#x5F62;&#x72B6;</strong>&#x7684;&#x6982;&#x7387;&#x5206;&#x5E03;&#x90FD;&#x53EF;&#x4EE5;&#x7528;&#x591A;&#x4E2A;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#x51FD;&#x6570;&#x53BB;&#x8FD1;&#x4F3C;&#xFF0C;&#x56E0;&#x800C;&#xFF0C;MoG &#x7684;&#x5E94;&#x7528;&#x4E5F;&#x6BD4;&#x8F83;&#x5E7F;&#x6CDB;&#x3002;</p><h1 id="&#x6B65;&#x9AA4;&#x5206;&#x6790;"><a href="#&#x6B65;&#x9AA4;&#x5206;&#x6790;" class="headerlink" title="&#x6B65;&#x9AA4;&#x5206;&#x6790;"></a><font size="5" color="red">&#x6B65;&#x9AA4;&#x5206;&#x6790;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x9009;&#x62E9;&#x9AD8;&#x65AF;&#x6A21;&#x578B;&#x4E2A;&#x6570;K&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x6839;&#x636E;&#x8D1D;&#x53F6;&#x65AF;&#x5B9A;&#x7406;&#xFF0C;&#x6C42;&#x51FA;z<sub>j</sub>&#x7684;&#x540E;&#x9A8C;&#x5206;&#x5E03;&#x6982;&#x7387;</font><br>$$p(z_j=i | x_j) = \frac{\alpha_i \cdot p(x_j | \mu_i , \Sigma_i)}{\displaystyle \sum_{l=1}^k \alpha_l \cdot p(x_j | \mu_l , \Sigma_l)}$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x4F7F;&#x7528;EM&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;</font></p><ul><li><p>&#x8BA1;&#x7B97;&#x5747;&#x503C;&#x5411;&#x91CF;&#xFF1A;<br>$$\mu_i &#x2018;=\frac{\displaystyle \sum_{j=1}^m p(z_j=i | x_j) \cdot x_j}{\displaystyle \sum_{j=1}^m p(z_j=i | x_j)}$$</p></li><li><p>&#x8BA1;&#x7B97;&#x534F;&#x65B9;&#x5DEE;&#x77E9;&#x9635;&#xFF1A;<br>$$\Sigma_i &#x2018;=\frac{\displaystyle \sum_{j=1}^m p(z_j=i | x_j) \ (x_j - \mu_i &#x2018;) \ (x_j - \mu_i &#x2018;)^T}{\displaystyle \sum_{j=1}^m p(z_j=i | x_j)}$$</p></li><li><p>&#x8BA1;&#x7B97;&#x6DF7;&#x5408;&#x7CFB;&#x6570;&#xFF1A;<br>$$\alpha_i &#x2018;=\frac{\displaystyle \sum_{j=1}^m p(z_j=i | x_j)}{m}$$</p></li></ul><p>&#x2003;&#x2003;<font size="4">4. &#x91CD;&#x590D;&#x6B65;&#x9AA4;1&#xFF0C;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x5B9A;&#x4E49;&#x9AD8;&#x65AF;&#x6DF7;&#x5408;&#x5206;&#x5E03;</font><br>&#x2003;&#x2003;&#x6839;&#x636E;&#x6240;&#x6C42;&#x5F97;&#x7684;&#x5747;&#x503C;&#x5411;&#x91CF;&#xFF0C;&#x534F;&#x65B9;&#x5DEE;&#x77E9;&#x9635;&#x548C;&#x6DF7;&#x5408;&#x7CFB;&#x6570;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#xFF1A;<br>$$p(x)=\displaystyle \sum_{l=1}^k \alpha_i \cdot p(x | \mu_i , \Sigma_i) \ , \ s.t. \displaystyle \sum_{l=1}^k \alpha_i=1$$<br><img src="/images/MACHINE/gmm5.png" alt="GMM"></p><p>&#x2003;&#x2003;<font size="4">6. &#x5BF9;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x6807;&#x8BB0;</font><br>$$\lambda_j=\underset{i \in { 1,2, \cdots ,k}}{arg\ max} \ p(z_j=i | x_j)$$</p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/gmm9.png" alt="GMM"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="GMM-main-m"><a href="#GMM-main-m" class="headerlink" title="GMM_main.m"></a>GMM_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_mixture.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x6DF7;&#x5408;&#x9AD8;&#x65AF;&#x4E2A;&#x6570;</span><br><span class="line">class_num=3;</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">y=GMM_classify(x_scale,sample_num,class_num,feat_num);</span><br><span class="line">% &#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    GMM_display(x,y,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="GMM-classify-m"><a href="#GMM-classify-m" class="headerlink" title="GMM_classify.m"></a>GMM_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">function y=GMM_classify(x_scale,sample_num,class_num,feat_num)</span><br><span class="line">%&#x521D;&#x59CB;&#x5316;&#x5747;&#x503C;&#x5411;&#x91CF;,&#x534F;&#x65B9;&#x5DEE;&#x77E9;&#x9635;&#xFF0C;&#x6DF7;&#x5408;&#x7CFB;&#x6570;</span><br><span class="line">a=ones(1,class_num)/class_num;</span><br><span class="line">u=zeros(feat_num,class_num);</span><br><span class="line">sigma=zeros(feat_num,feat_num,class_num);</span><br><span class="line">randIndex = randperm(size(x_scale,2));</span><br><span class="line">u(:,1:class_num)=x_scale(:,randIndex(1:class_num));</span><br><span class="line">for i=1:class_num</span><br><span class="line">    sigma(:,:,i)=eye(feat_num)/10;</span><br><span class="line">end</span><br><span class="line">for t=1:50</span><br><span class="line">    %&#x5224;&#x65AD;sigma&#x662F;&#x5426;&#x6B63;&#x5B9A;</span><br><span class="line">    if sum(sum(sum(isnan(sigma))))&gt;0||sum(sum(sum(isinf(sigma))))&gt;0</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">    pm_x=zeros(1,sample_num);</span><br><span class="line">    %&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x5168;&#x6982;&#x7387;</span><br><span class="line">    for i=1:sample_num</span><br><span class="line">        tem=0;</span><br><span class="line">        for j=1:class_num</span><br><span class="line">            tem=tem+a(j)*mvnpdf(x_scale(:,i), u(:,j), sigma(:,:,j));</span><br><span class="line">        end</span><br><span class="line">        pm_x(i)=tem;</span><br><span class="line">    end</span><br><span class="line">    %&#x8BA1;&#x7B97;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5C5E;&#x4E8E;&#x7B2C;j&#x7C7B;&#x7684;&#x540E;&#x9A8C;&#x6982;&#x7387;</span><br><span class="line">    pm=zeros(sample_num,class_num);</span><br><span class="line">    for i=1:sample_num</span><br><span class="line">        for j=1:class_num</span><br><span class="line">            pm(i,j)=a(j)*mvnpdf(x_scale(:,i), u(:,j), sigma(:,:,j))/pm_x(i);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    %&#x8BA1;&#x7B97;&#x5747;&#x503C;&#x5411;&#x91CF;,&#x534F;&#x65B9;&#x5DEE;&#x77E9;&#x9635;&#xFF0C;&#x6DF7;&#x5408;&#x7CFB;&#x6570;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        sum_pm=sum(pm(:,i));</span><br><span class="line">        u(:,i)=sum(repmat(pm(:,i)&apos;,feat_num,1).*x_scale,2)/sum_pm;</span><br><span class="line">        for j=1:sample_num</span><br><span class="line">            sigma(:,:,i)=sigma(:,:,i)+pm(j,i)*(x_scale(:,j)-u(:,i))*(x_scale(:,j)-u(:,i))&apos;;</span><br><span class="line">        end</span><br><span class="line">        sigma(:,:,i)=sigma(:,:,i)/sum_pm;</span><br><span class="line">        a(i)=sum_pm/sample_num;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%&#x628A;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x4E2D;&#x6DF7;&#x5408;&#x7CFB;&#x6570;&#x6700;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4F5C;&#x4E3A;&#x5176;&#x6807;&#x7B7E;</span><br><span class="line">[~,y]=max(pm,[],2);</span><br></pre></td></tr></tbody></table></figure><h2 id="GMM-display-m"><a href="#GMM-display-m" class="headerlink" title="GMM_display.m"></a>GMM_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function GMM_display(x,y,sample_num,class_num)</span><br><span class="line">figure;</span><br><span class="line">hold on;</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    if y(i)==0</span><br><span class="line">        %&#x753B;&#x51FA;&#x566A;&#x58F0;&#x70B9;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;k*&apos;)</span><br><span class="line">    else</span><br><span class="line">        %&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/gmm.png" alt="GMM"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x5927;&#x90E8;&#x5206;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x5BF9;&#x4E8E;&#x8DDD;&#x79BB;&#x6216;&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;&#xFF0C;&#x66F4;&#x9002;&#x5408;&#x9AD8;&#x7EF4;&#x7279;&#x5F81;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x8BA1;&#x7B97;&#x590D;&#x6742;&#xFF0C;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x96BE;&#x4EE5;&#x5BF9;&#x5706;&#x5F62;&#x6570;&#x636E;&#x805A;&#x7C7B;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;&#x4F1A;&#x5BF9;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x4EA7;&#x751F;&#x5F71;&#x54CD;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;GMM&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>谱聚类(Spectral Clustering)</title>
    <link href="https://USTCcoder.github.io/2019/05/11/clustering_SPECTRAL/"/>
    <id>https://USTCcoder.github.io/2019/05/11/clustering_SPECTRAL/</id>
    <published>2019-05-11T10:52:21.000Z</published>
    <updated>2019-05-27T05:05:46.065Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x8C31;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;Spectral Clustering:&#x662F;&#x4E00;&#x79CD;&#x57FA;&#x4E8E;<strong>&#x56FE;&#x8BBA;</strong>&#x7684;&#x805A;&#x7C7B;&#x7B97;&#x6CD5;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;&#x662F;<strong>&#x6784;&#x56FE;</strong>&#xFF1A;&#x5C06;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x770B;&#x505A;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x70B9;V&#xFF0C;&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x4E4B;&#x7528;&#x8FB9;E&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x8DDD;&#x79BB;&#x8F83;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x503C;&#x8F83;&#x4F4E;&#x3001;&#x8DDD;&#x79BB;&#x8F83;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x503C;&#x8F83;&#x9AD8;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;<strong>&#x57FA;&#x4E8E;&#x76F8;&#x4F3C;&#x5EA6;&#x7684;&#x65E0;&#x5411;&#x6743;&#x91CD;&#x56FE;G(V,E)</strong>&#x3002;&#x7B2C;&#x4E8C;&#x6B65;&#x662F;<strong>&#x5207;&#x56FE;</strong>&#xFF1A;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x5207;&#x8FB9;&#x89C4;&#x5219;&#x5C06;&#x56FE;&#x5207;&#x5206;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x5B50;&#x56FE;&#xFF0C;&#x89C4;&#x5219;&#x662F;&#x4F7F;&#x5B50;&#x56FE;&#x5185;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x548C;&#x5C3D;&#x53EF;&#x80FD;&#x5927;&#xFF0C;&#x4E0D;&#x540C;&#x5B50;&#x56FE;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x548C;&#x5C3D;&#x53EF;&#x80FD;&#x5C0F;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x805A;&#x7C7B;&#x76EE;&#x7684;&#x3002;</p><a id="more"></a><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x90BB;&#x63A5;&#x77E9;&#x9635;W&#x7684;&#x6784;&#x5EFA;</font><br>$$w_{ij}=\begin{cases}exp(-\frac{\lVert x_i-x_j \rVert ^2}{2 \sigma ^2})  &amp; i \neq j \[2ex] 0 &amp; i=j \end{cases}$$</p><p>&#x2003;&#x2003;<font size="4">2. &#x5EA6;&#x77E9;&#x9635;W&#x7684;&#x6784;&#x5EFA;</font><br>$$d_{ij}=\begin{cases}0  &amp; i \neq j \[2ex] \displaystyle \sum_{j=1} w_{ij} &amp; i=j \end{cases}$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x76EE;&#x6807;&#x51FD;&#x6570;</font></p><ul><li><p>&#x6743;&#x91CD;&#x5207;&#x56FE;<br>$$W(A,B)=\displaystyle \sum_{i \in A, j \in B} w_{ij}$$</p></li><li><p>Ncut&#x5207;&#x56FE;<br>\begin{align}<br>Ncut(A_1,A_2, \cdots ,A_n) &amp;=\displaystyle \sum_{i=1}^n \frac{W(A_i, \overline {A_i})}{\displaystyle \sum_{j \in A_i} \displaystyle \sum_{k=1} w_{jk}} \<br>&amp;=\underset{F}{\underbrace{arg\ min}}\ {tr(F^TD^{-1/2}LD^{-1/2}F)} \ , \ s.t. \ H^TDH=\mathrm{I}<br>\end{align}</p></li></ul><p>&#x2003;&#x2003;<font size="4">4. &#x6C42;&#x6807;&#x51C6;&#x5316;&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x77E9;&#x9635;</font><br>$$L_{sym}=D^{-1/2}LD^{-1/2}=D^{-1/2}(D-W)D^{-1/2}$$</p><p>&#x2003;&#x2003;<font size="4">5. &#x53D6;&#x524D;K&#x4E2A;&#x7279;&#x5F81;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;</font></p><p>&#x2003;&#x2003;<font size="4">6. &#x7528;K-Means&#x5BF9;&#x5F52;&#x4E00;&#x5316;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x8FDB;&#x884C;&#x5206;&#x7C7B;</font></p><p>&#x2003;&#x2003;<font size="4">7. &#x4E00;&#x4E2A;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#x7684;&#x5B9E;&#x4F8B;</font><br><img src="/images/MACHINE/spectral2.png" alt="SPECTRAL"><br>$$x=\begin{bmatrix} 0.7 &amp; 0.8 &amp; 0.1 &amp; 0.4 &amp; 0.2 &amp; 0.5 &amp; 0.6 \ 0.5 &amp; 0.6 &amp; 0.1 &amp; 0.8 &amp; 0.2 &amp; 0.8 &amp; 0.7 \end{bmatrix}$$<br><br><br><br>$$w=\begin{bmatrix} 0 &amp; 0.990 &amp; 0.771 &amp; 0.914 &amp; 0.844 &amp; 0.937 &amp; 0.975 \ 0.990 &amp; 0 &amp; 0.691 &amp; 0.905 &amp; 0.771 &amp; 0.937 &amp; 0.975 \ 0.771 &amp; 0.691 &amp; 0 &amp; 0.748 &amp; 0.990 &amp; 0.723 &amp; 0.737 \ 0.914 &amp; 0.905 &amp; 0.748 &amp; 0 &amp; 0.819 &amp; 0.995 &amp; 0.975 \ 0.844 &amp; 0.771 &amp; 0.990 &amp; 0.819 &amp; 0 &amp; 0.799 &amp; 0.815 \ 0.937 &amp; 0.937 &amp; 0.723 &amp; 0.995 &amp; 0.799 &amp; 0 &amp; 0.990 \ 0.975 &amp; 0.975 &amp; 0.737 &amp; 0.975 &amp; 0.815 &amp; 0.990 &amp; 0\end{bmatrix}$$<br><br><br><br>$$d=\begin{bmatrix} 5.43 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 5.27 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 4.66 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 5.36 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 5.04 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 5.38 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 5.47\end{bmatrix}$$<br><br><br><br>$$L_{sym}=\begin{bmatrix} 1 &amp; -0.185 &amp; -0.153 &amp; -0.169 &amp; -0.161 &amp; -0.173 &amp; -0.179 \ -0.185 &amp; 1 &amp; -0.139 &amp; -0.170 &amp; -0.150 &amp; -0.176 &amp; -0.182 \ -0.153 &amp; -0.139 &amp; 1 &amp; -0.150 &amp; -0.204 &amp; -0.144 &amp; -0.146 \ -0.169 &amp; -0.170 &amp; -0.150 &amp; 1 &amp; -0.158 &amp; -0.185 &amp; -0.180 \ -0.161 &amp; -0.150 &amp; -0.204 &amp; -0.158 &amp; 1 &amp; -0.153 &amp; -0.155 \ -0.173 &amp; -0.176 &amp; -0.144 &amp; -0.185 &amp; -0.153 &amp; 1 &amp; -0.183 \ -0.179 &amp; -0.182 &amp; -0.146 &amp; -0.180 &amp; -0.155 &amp; -0.183 &amp; 1\end{bmatrix}$$<br><br><br><br>$$feat_value=\begin{bmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 1.080 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 1.159 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 1.205 &amp; 0 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1.183 &amp; 0 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1.187 &amp; 0 \ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1.186\end{bmatrix}$$<br><br><br><br>$$feat_vector=\begin{bmatrix} -0.385 &amp; -0.141 &amp; 0.535 &amp; -0.004 &amp; 0.371 &amp; 0.534 &amp; -0.349 \  -0.379 &amp; -0.302 &amp; 0.470 &amp; -0.040 &amp; 0.042 &amp; -0.691 &amp; 0.249 \  -0.357 &amp; 0.642 &amp; -0.005 &amp; -0.675 &amp; -0.031 &amp; -0.033 &amp; 0.051 \  -0.383 &amp; -0.178 &amp; -0.575 &amp; -0.004 &amp; 0.246 &amp; -0.299 &amp; -0.584 \  -0.371 &amp; 0.558 &amp; 0.010 &amp; 0.736 &amp; -0.036 &amp; -0.053 &amp; 0.070 \  -0.383 &amp; -0.261 &amp; -0.400 &amp; -0.019 &amp; 0.264 &amp; 0.314 &amp; 0.676 \  -0.387 &amp; -0.256 &amp; -0.034 &amp; -0.017 &amp; -0.853 &amp; 0.213 &amp; -0.104\end{bmatrix}$$<br>&#x2003;&#x2003;<font size="4">&#x53D6;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x5F81;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x53EF;&#x5F97;&#xFF1A;</font><br>$$feature_vector=\begin{bmatrix} -0.385 &amp; -0.141 \  -0.379 &amp; -0.302 \  -0.357 &amp; 0.642 \  -0.383 &amp; -0.178 \  -0.371 &amp; 0.558 \  -0.383 &amp; -0.261 \  -0.387 &amp; -0.256\end{bmatrix}$$<br>&#x2003;&#x2003;<font size="4">&#x7279;&#x5F81;&#x5411;&#x91CF;&#x6309;&#x884C;&#x5F52;&#x4E00;&#x5316;&#xFF1A;</font><br>$$feature_vector=\begin{bmatrix} -0.939 &amp; -0.344 \ -0.782 &amp; -0.623 \ -0.486 &amp; 0.874 \ -0.907 &amp; -0.422 \ -0.553 &amp; 0.833 \ -0.827 &amp; -0.563 \ -0.834 &amp; -0.552\end{bmatrix}$$<br>&#x2003;&#x2003;<font size="4">&#x53EF;&#x4EE5;&#x660E;&#x663E;&#x770B;&#x51FA;&#xFF1A;${x_1,x_2,x_4,x_6,x_7} \in A_1\ ,\ {x_3,x_5} \in A_2$</font><br><img src="/images/MACHINE/spectral3.png" alt="SPECTRAL"></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/spectral9.png" alt="SPECTRAL"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="SPECTRAL-main-m"><a href="#SPECTRAL-main-m" class="headerlink" title="SPECTRAL_main.m"></a>SPECTRAL_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_mixture.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">class_num=3;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">y=SPECTRAL_classify(x_scale,sample_num,class_num);</span><br><span class="line">%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    SPECTRAL_display(x,y,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="SPECTRAL-classify-m"><a href="#SPECTRAL-classify-m" class="headerlink" title="SPECTRAL_classify.m"></a>SPECTRAL_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function y=SPECTRAL_classify(x_scale,sample_num,class_num)</span><br><span class="line">%w&#x4E3A;&#x90BB;&#x63A5;&#x77E9;&#x9635;</span><br><span class="line">w=zeros(sample_num);</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    w(i,:)=exp(-sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2)/2);</span><br><span class="line">    w(i,i)=0;</span><br><span class="line">end</span><br><span class="line">%D&#x4E3A;&#x5EA6;&#x77E9;&#x9635;</span><br><span class="line">d=diag(sum(w,2));</span><br><span class="line">%&#x6807;&#x51C6;&#x5316;&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x77E9;&#x9635;</span><br><span class="line">l=d^(-0.5)*(d-w)*d^(-0.5);</span><br><span class="line">%&#x6C42;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x548C;&#x7279;&#x5F81;&#x503C;</span><br><span class="line">[feat_vector,feat_value_temp]=eig(l);</span><br><span class="line">feat_value=diag(feat_value_temp);</span><br><span class="line">temp=sort(feat_value);</span><br><span class="line">loc=feat_value&lt;=temp(class_num);</span><br><span class="line">%&#x6C42;&#x51FA;&#x6700;&#x5C0F;&#x7684;class_num&#x4E2A;&#x7279;&#x5F81;&#x5411;&#x91CF;</span><br><span class="line">class_feat_vector=feat_vector(:,loc);</span><br><span class="line">%&#x7279;&#x5F81;&#x5411;&#x91CF;&#x5F52;&#x4E00;&#x5316;</span><br><span class="line">class_feat_vector=class_feat_vector./repmat(sqrt(sum(class_feat_vector.^2,2)),1,class_num);</span><br><span class="line">%&#x5229;&#x7528;kmeans&#x8FDB;&#x884C;&#x5206;&#x7C7B;</span><br><span class="line">y=SPECTRAL_kmeans(class_feat_vector&apos;,sample_num,class_num);</span><br></pre></td></tr></tbody></table></figure><h2 id="SPECTRAL-display-m"><a href="#SPECTRAL-display-m" class="headerlink" title="SPECTRAL_display.m"></a>SPECTRAL_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function SPECTRAL_display(x,y,sample_num,class_num)</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">hold on;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">    plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><h2 id="SPECTRAL-kmeans-m"><a href="#SPECTRAL-kmeans-m" class="headerlink" title="SPECTRAL_kmeans.m"></a>SPECTRAL_kmeans.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">function y=SPECTRAL_kmeans(class_feat_vector,sample_num,class_num)</span><br><span class="line">%&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;</span><br><span class="line">loc_center=class_feat_vector(:,1:class_num);</span><br><span class="line">%&#x8BBE;&#x7F6E;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">k=0;</span><br><span class="line">while 1</span><br><span class="line">    %&#x521D;&#x59CB;&#x5316;&#x6700;&#x65B0;&#x7684;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;</span><br><span class="line">    loc_center_new=zeros(size(loc_center));</span><br><span class="line">    distance=zeros(class_num,sample_num);</span><br><span class="line">    %distance&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        distance(i,:)=sum((class_feat_vector-repmat(loc_center(:,i),1,sample_num)).^2);</span><br><span class="line">    end</span><br><span class="line">    %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x54EA;&#x4E00;&#x7C7B;&#x6700;&#x8FD1;</span><br><span class="line">    [~,y]=min(distance);</span><br><span class="line">    %&#x66F4;&#x65B0;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        loc_center_new(:,i)=sum(class_feat_vector(:,y==i),2)/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x76F8;&#x7B49;&#x5219;&#x5206;&#x7C7B;&#x5B8C;&#x6BD5;</span><br><span class="line">    if isequal(loc_center_new,loc_center)</span><br><span class="line">        break;</span><br><span class="line">    %&#x5426;&#x5219;&#x7EE7;&#x7EED;&#x5206;&#x7C7B;</span><br><span class="line">    else</span><br><span class="line">        loc_center=loc_center_new;</span><br><span class="line">        k=k+1;</span><br><span class="line">        %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x6B21;&#x6570;&#x8FBE;&#x5230;1000&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED3;&#x675F;&#xFF0C;&#x5219;&#x5F3A;&#x5236;&#x5206;&#x7C7B;&#x7ED3;&#x675F;</span><br><span class="line">        if k&gt;=1000</span><br><span class="line">            break;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/spectral.png" alt="SPECTRAL"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x4F7F;&#x7528;&#x4E86;&#x964D;&#x7EF4;&#x6280;&#x672F;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#x7684;&#x805A;&#x7C7B;</li><li>&#x5EFA;&#x7ACB;&#x5728;&#x8C31;&#x56FE;&#x7406;&#x8BBA;&#xFF0C;&#x80FD;&#x5728;&#x5927;&#x90E8;&#x5206;&#x5F62;&#x72B6;&#x805A;&#x7C7B;&#xFF0C;&#x6536;&#x655B;&#x4E8E;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x96BE;&#x4EE5;&#x5BF9;&#x5706;&#x5F62;&#x6570;&#x636E;&#x805A;&#x7C7B;</li><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x975E;&#x5E38;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Spectral Clustering&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>快速搜索聚类(CFDP)</title>
    <link href="https://USTCcoder.github.io/2019/05/09/clustering_CFDP/"/>
    <id>https://USTCcoder.github.io/2019/05/09/clustering_CFDP/</id>
    <published>2019-05-09T12:09:57.000Z</published>
    <updated>2019-05-27T05:13:33.136Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;CFDP(Clustering By Fast Search And Find Of Density Peaksd):&#x7ECF;&#x5178;&#x7684;&#x805A;&#x7C7B;&#x7B97;&#x6CD5;K-means&#x4E0D;&#x80FD;&#x68C0;&#x6D4B;&#x975E;&#x7403;&#x9762;&#x7C7B;&#x522B;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;&#xFF0C;DBSCAN&#x5FC5;&#x987B;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x5BC6;&#x5EA6;&#x9608;&#x503C;&#xFF0C;CFDP&#x901A;&#x8FC7;&#x5BF9;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x6539;&#x5584;&#xFF0C;&#x9009;&#x62E9;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x6839;&#x636E;&#x5BC6;&#x5EA6;&#x9009;&#x62E9;&#x5468;&#x56F4;&#x70B9;&#x7684;&#x5F52;&#x5C5E;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x5BC6;&#x5EA6;&#x3C1;<sub>i</sub>(&#x591A;&#x79CD;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;)</font></p><ul><li>k&#x8FD1;&#x90BB;&#x5747;&#x503C;&#x5012;&#x6570;<br>$$\rho_i = \frac{k}{\displaystyle \sum_{j=1}^k d_{ij}} \ , \ d_{i1} \leq d_{i2} \leq \cdots \leq d_{in}$$</li><li>&#x9AD8;&#x65AF;&#x6838;&#x76F8;&#x4F3C;&#x5EA6;<br>$$\rho_i = \underset{d_{ij} \leq d_c}{\sum}exp[-(\frac{d_{ij}}{d_c})^2]$$</li><li>&#x5468;&#x56F4;&#x70B9;&#x7684;&#x4E2A;&#x6570;<br>$$\rho_i = \sum_{j=1}^n {\chi(d_{ij}-d_c)} \ , \ \chi(x)= \begin{cases} 1, &amp; x&lt;0 \[2ex] 0, &amp; otherwise \end{cases} \ , \ &#x5176;&#x4E2D;d_c&#x4E3A;&#x622A;&#x65AD;&#x8DDD;&#x79BB;$$</li></ul><p>&#x2003;&#x2003;<font size="4">2. &#x5BC6;&#x5EA6;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F;&#xFF0C;&#x5E76;&#x6C42;&#x51FA;&#x6700;&#x5927;&#x5BC6;&#x5EA6;&#x3C1;<sub>max</sub></font><br>$$\rho_{x_1} \ge \rho_{x_2} \ge \cdots \ge \rho_{x_n} \ , \ \rho_{max} = \rho_{x_1} $$</p><ul><li>d<sub>ij</sub>:&#x539F;&#x5E8F;&#x5217;i&#xFF0C;j&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</li><li>d(x<sub>i</sub>,x<sub>j</sub>):&#x5BC6;&#x5EA6;&#x6392;&#x5E8F;&#x540E;&#xFF0C;x<sub>i</sub>&#x548C;x<sub>j</sub>&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</li></ul><p>&#x2003;&#x2003;<font size="4">3. &#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x3B4;<sub>i</sub></font><br>&#x2003;&#x2003;&#x3B4;<sub>i</sub>&#xFF1A;&#x5230;&#x5BC6;&#x5EA6;&#x5927;&#x4E8E;i&#x7684;&#x6700;&#x8FD1;&#x70B9;j&#x7684;&#x8DDD;&#x79BB;dist(ij)<br>$$\delta_{x_i} = \begin{cases} \underset{j&lt;i}{min}\ d(x_i,x_j) &amp;  i \ge 2  \[2ex] \underset{j \ge 2}{\max}\ \delta_{x_j} &amp; i=1 \end{cases} $$</p><p>&#x2003;&#x2003;<font size="4">4. &#x753B;&#x51FA;&#x3C1;-&#x3B4;&#x56FE;&#xFF0C;&#x627E;&#x5230;&#x79BB;&#x7FA4;&#x70B9;(&#x4EE3;&#x8868;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3;)</font><br><img src="/images/MACHINE/cfdp1.png" alt="CFDP"></p><p>&#x2003;&#x2003;<font size="4">5. &#x6309;&#x5BC6;&#x5EA6;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x5F52;&#x5C5E;&#x4E8E;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x70B9;&#x7684;&#x7C7B;&#x522B;</font><br>$$x_i \in C_k \ , \ &#x5176;&#x4E2D;k=\underset{j&lt;i \ , \ x_j \in C_k}{arg \ min}\ d(x_i,x_j)$$</p><p>&#x2003;&#x2003;<font size="4">6. &#x5B9A;&#x4E49;&#x4E24;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;d<sub>0</sub></font><br>&#x2003;&#x2003;&#x4E24;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#xFF1A;&#x6240;&#x6709;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x8DDD;&#x79BB;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#x540E;&#x7B2C;2%&#x4E2A;&#x79F0;&#x4E24;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x3002;</p><p>&#x2003;&#x2003;<font size="4">7. &#x5B9A;&#x4E49;&#x8FB9;&#x7F18;&#x70B9;&#xFF0C;&#x6C42;&#x51FA;&#x8FB9;&#x7F18;&#x70B9;&#x6700;&#x5927;&#x5BC6;&#x5EA6;&#x3C1;<sub>b</sub></font><br>&#x2003;&#x2003;&#x8FB9;&#x7F18;&#x70B9;&#xFF1A;&#x5728;k&#x7C7B;&#x6570;&#x636E;&#x5230;&#x975E;k&#x7C7B;&#x6570;&#x636E;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;dist<sub>0</sub>&#x7684;&#x70B9;&#xFF0C;&#x79F0;&#x4E3A;k&#x7C7B;&#x6570;&#x636E;&#x7684;&#x8FB9;&#x7F18;&#x70B9;&#x3002;<br>$$E = {i | d_{ij}&lt;dist_0 , \forall i \in C_k , j \in \overline{C_k} }$$<br>$$\rho_b = \underset{i \in E}{\max}\ \rho_i$$</p><p>&#x2003;&#x2003;<font size="4">8. &#x5224;&#x65AD;&#x566A;&#x58F0;&#x70B9;</font><br>&#x2003;&#x2003;&#x566A;&#x58F0;&#x70B9;&#xFF1A;&#x5C06;k&#x7C7B;&#x4E2D;&#x5BC6;&#x5EA6;&#x5C0F;&#x4E8E;&#x3C1;<sub>b</sub>&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x8BB0;&#x4E3A;&#x566A;&#x58F0;&#x3002;<br>$$N={i | \rho_i&lt;\rho_b , \forall i \in C_k  }$$</p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/cfdp9.png" alt="CFDP"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="CFDP-main-m"><a href="#CFDP-main-m" class="headerlink" title="CFDP_main.m"></a>CFDP_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_line.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x5224;&#x65AD;&#x5BC6;&#x5EA6;&#x65F6;&#x68C0;&#x6D4B;&#x5468;&#x56F4;&#x70B9;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">k=round(sample_num/10);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,density_max]=CFDP_classify(x_scale,sample_num,k);</span><br><span class="line">% &#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    CFDP_display(x,y,sample_num,density_max)</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="CFDP-classify-m"><a href="#CFDP-classify-m" class="headerlink" title="CFDP_classify.m"></a>CFDP_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">function [y,density_max]=CFDP_classify(x_scale,sample_num,k)</span><br><span class="line">y=zeros(1,sample_num);</span><br><span class="line">%p&#x4E3A;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x5BC6;&#x5EA6;</span><br><span class="line">p=zeros(1,sample_num);</span><br><span class="line">%deta&#x4E3A;&#x9AD8;&#x5BC6;&#x5EA6;&#x8DDD;&#x79BB;</span><br><span class="line">deta=zeros(1,sample_num);</span><br><span class="line">%distance(i,j)&#x4EE3;&#x8868;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">distance=zeros(sample_num);</span><br><span class="line">%&#x5229;&#x7528;k&#x8FD1;&#x90BB;&#x5747;&#x503C;&#x5B9A;&#x4E49;&#x5BC6;&#x5EA6;&#x8F83;&#x597D;&#xFF0C;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5F88;&#x591A;&#x5BC6;&#x5EA6;&#x76F8;&#x540C;&#x7684;&#x70B9;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528;&#x534A;&#x5F84;&#x5185;&#x4E2A;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x80FD;&#x4E00;&#x5757;&#x533A;&#x57DF;&#x4F1A;&#x51FA;&#x73B0;&#x5F88;&#x591A;&#x7684;&#x7C7B;&#x522B;</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    distance(i,:)=sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2);</span><br><span class="line">    temp=sort(distance(i,:));</span><br><span class="line">    p(i)=k./sum(distance(i,distance(i,:)&lt;=temp(k)));</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    temp=find(p&gt;p(i));</span><br><span class="line">    %&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6700;&#x5927;&#x70B9;</span><br><span class="line">    if isempty(temp)</span><br><span class="line">        deta(i)=distance(i,find(p==max(p),1));</span><br><span class="line">    else</span><br><span class="line">        %&#x627E;&#x5230;&#x5BC6;&#x5EA6;&#x5927;&#x4E8E;&#x8BE5;&#x70B9;&#x7684;&#x4E14;&#x8DDD;&#x79BB;&#x8BE5;&#x70B9;&#x6700;&#x8FD1;&#x7684;&#x70B9;</span><br><span class="line">        tem=find(distance(i,p&gt;p(i))==min(distance(i,p&gt;p(i))),1);</span><br><span class="line">        deta(i)=distance(i,temp(tem));</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x70B9;&#x8D4B;&#x503C;&#x65E0;&#x7A77;   </span><br><span class="line">deta(find(p==max(p),1))=1;</span><br><span class="line">p_judge=max(p)/5;</span><br><span class="line">deta_judge=0.1;</span><br><span class="line">%&#x83B7;&#x53D6;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">center_loc=p&gt;p_judge&amp;deta&gt;deta_judge;</span><br><span class="line">%&#x627E;&#x5230;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x6240;&#x5728;&#x4F4D;&#x7F6E;</span><br><span class="line">density_max=find(center_loc);</span><br><span class="line">%&#x5C06;p&#x548C;deta&#x8F83;&#x5927;&#x7684;&#x503C;&#x4F5C;&#x4E3A;&#x65B0;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;</span><br><span class="line">y(center_loc)=1:sum(center_loc);</span><br><span class="line">%&#x5BF9;&#x5BC6;&#x5EA6;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F;</span><br><span class="line">[~,density_loc]=sort(p,&apos;descend&apos;);</span><br><span class="line">%&#x5C06;&#x67D0;&#x70B9;&#x5212;&#x5206;&#x5230;&#x5BC6;&#x5EA6;&#x5927;&#x4E8E;&#x8BE5;&#x70B9;&#x5E76;&#x4E14;&#x8DDD;&#x79BB;&#x8BE5;&#x70B9;&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x7C7B;</span><br><span class="line">for i=2:sample_num</span><br><span class="line">    if y(density_loc(i))==0</span><br><span class="line">        temp=density_loc(1:i-1);</span><br><span class="line">        y(density_loc(i))=y(temp(find(distance(density_loc(i),temp)==min(distance(density_loc(i),temp)),1)));</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%&#x5B9A;&#x4E49;&#x4E24;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;</span><br><span class="line">distance_temp=distance.*triu(ones(sample_num));</span><br><span class="line">temp=sort(distance_temp(distance_temp&gt;0));</span><br><span class="line">%&#x53D6;&#x51FA;&#x524D;%2&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;</span><br><span class="line">dc=temp(round(length(temp)/50));</span><br><span class="line">for i=1:sum(center_loc)</span><br><span class="line">    %&#x5F97;&#x5230;&#x8FB9;&#x7F18;&#x70B9;</span><br><span class="line">    edge= min(distance(y==i,y~=i),[],2)&lt;dc;</span><br><span class="line">    if ~(isempty(edge)||isequal(edge,zeros(length(find(y==i)),1)))</span><br><span class="line">        tem=find(y==i);</span><br><span class="line">        %&#x5F97;&#x5230;&#x8FB9;&#x7F18;&#x533A;&#x57DF;&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x503C;</span><br><span class="line">        pb=max(p(tem(edge)));</span><br><span class="line">        %&#x5C06;&#x5BC6;&#x5EA6;&#x5C0F;&#x4E8E;&#x8BE5;&#x6700;&#x5927;&#x503C;&#x7684;&#x70B9;&#x4F5C;&#x4E3A;&#x566A;&#x58F0;&#x70B9;</span><br><span class="line">        y(tem(p(y==i)&lt;=pb))=0;</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="CFDP-display-m"><a href="#CFDP-display-m" class="headerlink" title="CFDP_display.m"></a>CFDP_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function CFDP_display(x,y,sample_num,density_max)</span><br><span class="line">color_bar=zeros(length(density_max),3);</span><br><span class="line">hold on;</span><br><span class="line">for i=1:length(density_max)</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    if y(i)==0</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;ko&apos;);</span><br><span class="line">    else</span><br><span class="line">        if ismember(i,density_max)</span><br><span class="line">            plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;*&apos;);</span><br><span class="line">        else</span><br><span class="line">            plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/cfdp.png" alt="CFDP"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x79BB;&#x7FA4;&#x70B9;&#x7684;&#x786E;&#x5B9A;&#x975E;&#x5E38;&#x590D;&#x6742;</li><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x6574;&#x4F53;&#x5BC6;&#x5EA6;&#x57FA;&#x672C;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;CFDP&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>密度最大值聚类(MDCA)</title>
    <link href="https://USTCcoder.github.io/2019/05/07/clustering_MDCA/"/>
    <id>https://USTCcoder.github.io/2019/05/07/clustering_MDCA/</id>
    <published>2019-05-07T12:05:27.000Z</published>
    <updated>2019-05-27T04:47:45.062Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;MDCA(Maximum Density Clustering Application):&#x5C06;&#x57FA;&#x4E8E;&#x5BC6;&#x5EA6;&#x7684;&#x601D;&#x60F3;&#x5F15;&#x5165;&#x5230;&#x5212;&#x5206;&#x805A;&#x7C7B;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;<strong>&#x5BC6;&#x5EA6;</strong>&#x800C;&#x4E0D;&#x662F;&#x521D;&#x59CB;&#x8D28;&#x5FC3;&#x4F5C;&#x4E3A;&#x8003;&#x5BDF;&#x7C07;&#x5F52;&#x5C5E;&#x60C5;&#x51B5;&#x7684;&#x4F9D;&#x636E;&#xFF0C;&#x80FD;&#x591F;<strong>&#x81EA;&#x52A8;&#x786E;&#x5B9A;</strong>&#x7C07;&#x6570;&#x91CF;&#x5E76;&#x53D1;&#x73B0;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x7C07;&#x3002;MDCA&#x4E00;&#x822C;&#x4E0D;&#x4FDD;&#x7559;&#x566A;&#x58F0;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x907F;&#x514D;&#x4E86;&#x7531;&#x4E8E;&#x9608;&#x503C;&#x9009;&#x62E9;&#x4E0D;&#x5F53;&#x800C;&#x9020;&#x6210;&#x5927;&#x91CF;&#x5BF9;&#x8C61;&#x4E22;&#x5F03;&#x60C5;&#x51B5;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1.&#x6700;&#x5927;&#x5BC6;&#x5EA6;&#x70B9;&#xFF1A;&#x53EF;&#x7528;K&#x8FD1;&#x90BB;&#x8DDD;&#x79BB;&#x4E4B;&#x548C;&#x7684;&#x5012;&#x6570;&#x8868;&#x793A;&#x5BC6;&#x5EA6;</font><br>$$\rho_{max}={ \rho_{x} | x \in C, \forall x_i \in C, \rho_(x) \ge \rho_(x_i) } \ , \ &#x5176;&#x4E2D;C&#x4E3A;&#x6570;&#x636E;&#x96C6;$$</p><p>&#x2003;&#x2003;<font size="4">2. &#x5BC6;&#x5EA6;&#x66F2;&#x7EBF;&#xFF1A;&#x6839;&#x636E;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x4E0E;x&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x91CD;&#x65B0;&#x6392;&#x5E8F;</font><br>$$S_{\rho_{max}}={x_1 , x_2 , \cdots , x_n | d(x,x_1) \leq d(x,x_2) \leq \cdots \leq d(x,x_n) }$$<br><img src="/images/MACHINE/mdca1.png" alt="MDCA"></p><p>&#x2003;&#x2003;<font size="4">3. &#x5C06;&#x5BC6;&#x5EA6;&#x66F2;&#x7EBF;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x8C37;&#x503C;&#x4E4B;&#x524D;&#x7684;&#x6570;&#x636E;&#x5F52;&#x4E3A;&#x4E00;&#x7C7B;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5254;&#x9664;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x91CD;&#x590D;&#x6B65;&#x9AA4;1&#xFF0C;2&#xFF0C;3&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x70B9;&#x90FD;&#x5728;&#x3C1;<sub>0</sub>&#x4E4B;&#x4E0B;&#x6216;&#x8005;&#x3C1;<sub>0</sub>&#x4E4B;&#x4E0A;</font></p><p>&#x2003;&#x2003;<font size="4">5. &#x4E24;&#x4E2A;&#x7C07;C<sub>i</sub>&#x548C;C<sub>j</sub>&#xFF0C;&#x7528;&#x6700;&#x8FD1;&#x6837;&#x672C;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x7C07;&#x95F4;&#x8DDD;&#x79BB;</font><br>$$d(c_i,c_j)=\underset{x_i \in C_i,x_j \in C_j}{\min}d(x_i,x_j)$$<br><img src="/images/MACHINE/mdca2.png" alt="MDCA"></p><p>&#x2003;&#x2003;<font size="4">6. &#x6839;&#x636E;&#x7C07;&#x95F4;&#x8DDD;&#x79BB;&#x9608;&#x503C;d<sub>0</sub>&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x5408;&#x5E76;&#x4E24;&#x7C7B;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/mdca9.png" alt="MDCA"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="MDCA-main-m"><a href="#MDCA-main-m" class="headerlink" title="MDCA_main.m"></a>MDCA_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_gauss.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x5224;&#x65AD;&#x5BC6;&#x5EA6;&#x65F6;&#x68C0;&#x6D4B;&#x5468;&#x56F4;&#x70B9;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">k=5;</span><br><span class="line">%&#x6700;&#x5C0F;&#x9608;&#x503C;&#x5BC6;&#x5EA6;</span><br><span class="line">density_min=25000;</span><br><span class="line">%&#x6700;&#x5C0F;&#x9608;&#x503C;&#x8DDD;&#x79BB;</span><br><span class="line">distance_min=0.1;</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,class_num]=MDCA_classify(x_scale,sample_num,k,density_min,distance_min);</span><br><span class="line">% &#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    MDCA_display(x,y,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="MDCA-classify-m"><a href="#MDCA-classify-m" class="headerlink" title="MDCA_classify.m"></a>MDCA_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">function [y,class_num]=MDCA_classify(x_scale,sample_num,k,density_min,distance_min)</span><br><span class="line">class_num=1;</span><br><span class="line">y=zeros(1,sample_num);</span><br><span class="line">%p&#x4E3A;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x5BC6;&#x5EA6;</span><br><span class="line">p=zeros(1,sample_num);</span><br><span class="line">%distance(i,j)&#x4EE3;&#x8868;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">distance=zeros(sample_num);</span><br><span class="line">%&#x5229;&#x7528;k&#x8FD1;&#x90BB;&#x5747;&#x503C;&#x5B9A;&#x4E49;&#x5BC6;&#x5EA6;&#x8F83;&#x597D;&#xFF0C;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5F88;&#x591A;&#x5BC6;&#x5EA6;&#x76F8;&#x540C;&#x7684;&#x70B9;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528;&#x534A;&#x5F84;&#x5185;&#x4E2A;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x80FD;&#x4E00;&#x5757;&#x533A;&#x57DF;&#x4F1A;&#x51FA;&#x73B0;&#x5F88;&#x591A;&#x7684;&#x7C7B;&#x522B;</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    distance(i,:)=sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2);</span><br><span class="line">    temp=sort(distance(i,:));</span><br><span class="line">    p(i)=k./sum(distance(i,distance(i,:)&lt;=temp(k)));</span><br><span class="line">end        </span><br><span class="line">[y,class_num]=MDCA_findclass(y,p,distance,density_min,class_num);    </span><br><span class="line">%&#x8BBE;&#x7F6E;&#x4E24;&#x4E2A;&#x6807;&#x7F6E;&#x4F4D;</span><br><span class="line">while 1</span><br><span class="line">    flag_2=0;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        flag_1=0;</span><br><span class="line">        for j=i+1:class_num</span><br><span class="line">            if min(min(distance(y==i,y==j)))&lt;=distance_min</span><br><span class="line">                y(y==j)=i;</span><br><span class="line">                y(y&gt;j)=y(y&gt;j)-1;</span><br><span class="line">                class_num=class_num-1;</span><br><span class="line">                flag_1=1;</span><br><span class="line">                break;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        if flag_1==1;</span><br><span class="line">            break;</span><br><span class="line">        end</span><br><span class="line">        flag_2=1;</span><br><span class="line">    end</span><br><span class="line">    if flag_2==1</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">loc=find(y~=0);</span><br><span class="line">[temp,tem]=min(distance(y==0,y~=0),[],2);</span><br><span class="line">y(y==0)=y(loc(tem)).*(temp&lt;=distance_min)&apos;;</span><br></pre></td></tr></tbody></table></figure><h2 id="MDCA-findclass-m"><a href="#MDCA-findclass-m" class="headerlink" title="MDCA_findclass.m"></a>MDCA_findclass.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function [y,class_num]=MDCA_findclass(y,p,distance,density_min,class_num)</span><br><span class="line">tem=find(y==0);</span><br><span class="line">p_temp=p(tem);</span><br><span class="line">%&#x627E;&#x5230;&#x6700;&#x5927;&#x7684;&#x5BC6;&#x5EA6;&#x70B9;</span><br><span class="line">p_max=tem(find(p_temp==max(p_temp),1));</span><br><span class="line">%&#x6309;&#x7167;&#x5230;&#x6700;&#x5927;&#x5BC6;&#x5EA6;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;</span><br><span class="line">[~,b]=sort(distance(p_max,tem));</span><br><span class="line">temp=tem(b);</span><br><span class="line">curve=p(temp);</span><br><span class="line">if max(curve)&gt;density_min</span><br><span class="line">    loc=find(curve&lt;=density_min);</span><br><span class="line">    if ~isempty(loc)&amp;&amp;length(loc)&gt;=2</span><br><span class="line">        for i=1:length(loc)-1</span><br><span class="line">            if loc(i+1)-loc(i)&lt;=2</span><br><span class="line">                break;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        y(temp(1:loc(i)))=class_num;</span><br><span class="line">        [y,class_num]=MDCA_findclass(y,p,distance,density_min,class_num+1);</span><br><span class="line">        return;</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="MDCA-display-m"><a href="#MDCA-display-m" class="headerlink" title="MDCA_display.m"></a>MDCA_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function MDCA_display(x,y,sample_num,class_num)</span><br><span class="line">figure;</span><br><span class="line">hold on;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    if y(i)==0</span><br><span class="line">        %&#x753B;&#x51FA;&#x566A;&#x58F0;&#x70B9;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;k*&apos;)</span><br><span class="line">    else</span><br><span class="line">        %&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/mdca.png" alt="MDCA"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x786E;&#x5B9A;&#x5BC6;&#x5EA6;&#x9608;&#x503C;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x5BC6;&#x5EA6;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x6216;&#x6574;&#x4F53;&#x5BC6;&#x5EA6;&#x57FA;&#x672C;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;MDCA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>密度聚类(DBSCAN)</title>
    <link href="https://USTCcoder.github.io/2019/05/05/clustering_DBSCAN/"/>
    <id>https://USTCcoder.github.io/2019/05/05/clustering_DBSCAN/</id>
    <published>2019-05-05T11:25:30.000Z</published>
    <updated>2019-05-27T04:48:51.871Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5BC6;&#x5EA6;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;DBSCAN(Density-Based Spatial Clustering Of Applications With Noise):DBSCAN&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;<strong>&#x626B;&#x63CF;&#x534A;&#x5F84; </strong>(eps)&#x548C;<strong>&#x6700;&#x5C0F;&#x5305;&#x542B;&#x70B9;&#x6570;</strong>(minPts)&#x3002; &#x4EFB;&#x9009;&#x4E00;&#x4E2A;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#x5F00;&#x59CB;&#xFF0C;&#x627E;&#x51FA;&#x4E0E;&#x5176;&#x8DDD;&#x79BB;&#x5728;eps&#x4E4B;&#x5185;(&#x5305;&#x62EC;eps)&#x7684;&#x6240;&#x6709;&#x9644;&#x8FD1;&#x70B9;&#x3002;&#x5982;&#x679C;<strong>&#x9644;&#x8FD1;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;minPts</strong>&#xFF0C;&#x5219;&#x5F53;&#x524D;&#x70B9;&#x4E0E;&#x5176;&#x9644;&#x8FD1;&#x70B9;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x7C07;&#xFF0C;&#x5E76;&#x4E14;&#x51FA;&#x53D1;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#x3002; &#x7136;&#x540E;&#x9012;&#x5F52;&#xFF0C;&#x4EE5;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x5904;&#x7406;&#x8BE5;&#x7C07;&#x5185;&#x6240;&#x6709;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#xFF0C;&#x4ECE;&#x800C;&#x5BF9;&#x7C07;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;&#x5982;&#x679C;<strong>&#x9644;&#x8FD1;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x5C0F;&#x4E8E;minPts</strong>&#xFF0C;&#x5219;&#x8BE5;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#xFF0C;&#x4E0D;&#x4F5C;&#x6269;&#x5C55;&#x3002;&#x5982;&#x679C;&#x7C07;&#x5145;&#x5206;&#x5730;&#x88AB;&#x6269;&#x5C55;&#xFF0C;&#x5373;&#x7C07;&#x5185;&#x7684;&#x6240;&#x6709;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;&#x5DF2;&#x8BBF;&#x95EE;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x540C;&#x6837;&#x7684;&#x7B97;&#x6CD5;&#x53BB;&#x5904;&#x7406;&#x672A;&#x88AB;&#x8BBF;&#x95EE;&#x7684;&#x70B9;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x70B9;&#x90FD;&#x88AB;&#x6807;&#x8BB0;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x6311;&#x9009;&#x4E00;&#x4E2A;&#x672A;&#x6807;&#x8BB0;&#x6837;&#x672C;&#xFF0C;&#x7F6E;&#x4E3A;&#x4E00;&#x7C7B;&#xFF0C;&#x641C;&#x7D22;&#x9644;&#x8FD1;&#x6837;&#x672C;</font><br><img src="/images/MACHINE/dbscan1.jpg" alt="DBSCAN"></p><p>&#x2003;&#x2003;<font size="4">2. &#x5982;&#x679C;&#x9644;&#x8FD1;&#x6837;&#x672C;&#x6570;&#x5927;&#x4E8E;minPts&#xFF0C;&#x5C06;&#x8FD9;&#x4E9B;&#x6837;&#x672C;&#x5F52;&#x4E8E;&#x8BE5;&#x7C7B;&#xFF0C;&#x5728;&#x6B64;&#x7C7B;&#x4E2D;&#x6311;&#x9009;&#x672A;&#x6807;&#x8BB0;&#x6837;&#x672C;&#xFF0C;&#x7EE7;&#x7EED;&#x641C;&#x7D22;&#x9644;&#x8FD1;&#x6837;&#x672C;</font><br><img src="/images/MACHINE/dbscan2.png" alt="DBSCAN"></p><p>&#x2003;&#x2003;<font size="4">3. &#x91CD;&#x590D;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x8BE5;&#x7C7B;&#x4E2D;&#x6240;&#x6709;&#x6837;&#x672C;&#x90FD;&#x88AB;&#x6807;&#x8BB0;</font></p><p>&#x2003;&#x2003;<font size="4">4. &#x91CD;&#x590D;&#x6B65;&#x9AA4;1&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x6837;&#x672C;&#x90FD;&#x88AB;&#x6807;&#x8BB0;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/dbscan9.png" alt="DBSCAN"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="DBSCAN-main-m"><a href="#DBSCAN-main-m" class="headerlink" title="DBSCAN_main.m"></a>DBSCAN_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_cicle.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x641C;&#x7D22;&#x534A;&#x5F84;</span><br><span class="line">eps=0.05;</span><br><span class="line">%&#x5706;&#x5185;&#x70B9;&#x6570;</span><br><span class="line">minpts=2;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,color_bar]=DBSCAN_classify(x_scale,sample_num,eps,minpts);</span><br><span class="line">%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    DBSCAN_display(x,y,color_bar,sample_num)</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="DBSCAN-classify-m"><a href="#DBSCAN-classify-m" class="headerlink" title="DBSCAN_classify.m"></a>DBSCAN_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">function [y,color_bar]=DBSCAN_classify(x_scale,sample_num,eps,minpts)</span><br><span class="line">%&#x6807;&#x8BB0;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5206;&#x8FC7;&#x7C7B;</span><br><span class="line">flag=zeros(1,sample_num);</span><br><span class="line">y=zeros(1,sample_num);</span><br><span class="line">color_bar=[];</span><br><span class="line">%&#x7C7B;&#x522B;&#x6570;&#x76EE;</span><br><span class="line">i=1;</span><br><span class="line">%&#x627E;&#x5230;&#x672A;&#x6807;&#x8BB0;&#x7684;&#x6570;&#x636E;&#x70B9;&#x5219;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;</span><br><span class="line">while ~isempty(find(flag==0,1))</span><br><span class="line">    %&#x6C42;&#x51FA;&#x8BE5;&#x70B9;C&#x5230;&#x5176;&#x4F59;&#x5404;&#x70B9;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">    distance=sum((x_scale-repmat(x_scale(:,find(flag==0,1)),1,sample_num)).^2);</span><br><span class="line">    %&#x5C06;&#x627E;&#x5230;&#x7684;&#x70B9;&#x6807;&#x8BB0;</span><br><span class="line">    flag(find(flag==0,1))=1;</span><br><span class="line">    %&#x627E;&#x51FA;&#x8DDD;&#x79BB;&#x627E;&#x5230;&#x7684;&#x70B9;&#x5C0F;&#x4E8E;&#x534A;&#x5F84;&#x7684;&#x6240;&#x6709;&#x70B9;</span><br><span class="line">    temp=find(distance&lt;eps^2);</span><br><span class="line">    %&#x5982;&#x679C;&#x4E2A;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x8BBE;&#x5B9A;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">    if length(temp)&gt;=minpts</span><br><span class="line">        %&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x989C;&#x8272;&#x4FE1;&#x606F;</span><br><span class="line">        color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">        %&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x5168;&#x90E8;&#x5206;&#x4E3A;i&#x7C7B;</span><br><span class="line">        y(temp)=i;</span><br><span class="line">        %&#x627E;&#x51FA;i&#x7C7B;&#x4E2D;&#x6CA1;&#x6709;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#x5219;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;</span><br><span class="line">        while ~isempty(find(y==i&amp;flag==0,1))</span><br><span class="line">            %&#x6C42;&#x51FA;&#x8BE5;&#x70B9;D&#x5230;&#x5176;&#x4F59;&#x5404;&#x70B9;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">            distance_part=sum((x_scale-repmat(x_scale(:,find(y==i&amp;flag==0,1)),1,sample_num)).^2);</span><br><span class="line">            %&#x5C06;&#x627E;&#x5230;&#x7684;&#x70B9;&#x6807;&#x8BB0;</span><br><span class="line">            flag(find(y==i&amp;flag==0,1))=1;</span><br><span class="line">            %&#x627E;&#x51FA;&#x8DDD;&#x79BB;&#x627E;&#x5230;&#x7684;&#x70B9;&#x5C0F;&#x4E8E;&#x534A;&#x5F84;&#x7684;&#x6240;&#x6709;&#x70B9;</span><br><span class="line">            temp_part=find(distance_part&lt;eps^2);</span><br><span class="line">            %&#x5982;&#x679C;&#x4E2A;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x8BBE;&#x5B9A;&#x7684;&#x4E2A;&#x6570;,</span><br><span class="line">            if length(temp_part)&gt;=minpts</span><br><span class="line">                %&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x5168;&#x90E8;&#x5206;&#x4E3A;i&#x7C7B;</span><br><span class="line">                y(temp_part)=i;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    else</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x8FD9;&#x4E00;&#x7C7B;&#x627E;&#x5B8C;&#x65F6;&#xFF0C;&#x7C7B;&#x522B;&#x52A0;1</span><br><span class="line">    i=i+1;</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="DBSCAN-display-m"><a href="#DBSCAN-display-m" class="headerlink" title="DBSCAN_display.m"></a>DBSCAN_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function DBSCAN_display(x,y,color_bar,sample_num)</span><br><span class="line">figure;</span><br><span class="line">hold on;</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    if y(i)==0</span><br><span class="line">        %&#x753B;&#x51FA;&#x566A;&#x58F0;&#x70B9;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;k*&apos;)</span><br><span class="line">    else</span><br><span class="line">        %&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">        plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/dbscan.png" alt="DBSCAN"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x6570;&#x636E;&#x70B9;&#x7684;&#x9009;&#x62E9;</li><li>&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x786E;&#x5B9A;eps&#x548C;minPts</li><li>&#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x5BC6;&#x5EA6;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x7684;&#x60C5;&#x51B5;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;DBSCAN&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>迭代自组织分析聚类(ISODATA)</title>
    <link href="https://USTCcoder.github.io/2019/05/04/clustering_ISODATA/"/>
    <id>https://USTCcoder.github.io/2019/05/04/clustering_ISODATA/</id>
    <published>2019-05-04T11:28:51.000Z</published>
    <updated>2019-05-27T04:49:38.843Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;ISODATA(Iterative Selforganizing Data Analysis) :&#x5728;k-&#x5747;&#x503C;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x589E;&#x52A0;&#x5BF9;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x7684;<strong>&#x5408;&#x5E76;</strong>&#x548C;<strong>&#x5206;&#x88C2;</strong>&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x5F53;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x4E2D;<strong>&#x6837;&#x672C;&#x6570;&#x592A;&#x5C11;&#xFF0C;&#x6216;&#x4E24;&#x4E2A;&#x7C7B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x592A;&#x8FD1;&#xFF0C;&#x6216;&#x6837;&#x672C;&#x7C7B;&#x522B;&#x8FDC;&#x5927;&#x4E8E;&#x8BBE;&#x5B9A;&#x7C7B;&#x522B;&#x6570;</strong>&#x65F6;&#xFF0C;&#x8FDB;&#x884C;<strong>&#x5408;&#x5E76;</strong>&#xFF0C;&#x5F53;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x4E2D;<strong>&#x6837;&#x672C;&#x6570;&#x592A;&#x591A;&#xFF0C;&#x6216;&#x67D0;&#x4E2A;&#x7C7B;&#x5185;&#x65B9;&#x5DEE;&#x592A;&#x5927;&#xFF0C;&#x6216;&#x6837;&#x672C;&#x7C7B;&#x522B;&#x8FDC;&#x5C0F;&#x4E8E;&#x8BBE;&#x5B9A;&#x7C7B;&#x522B;&#x6570;</strong>&#x65F6;&#xFF0C;&#x8FDB;&#x884C;<strong>&#x5206;&#x88C2;</strong>&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x521D;&#x59CB;&#x5E38;&#x91CF;(c<sub>0</sub>,n<sub>0</sub>,d<sub>min</sub>,d<sub>max</sub>,T)</font><br>&#x2003;&#x2003;&#x2003;&#x2003;c<sub>0</sub>&#xFF1A;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x7684;&#x805A;&#x7C7B;&#x6570;<br>&#x2003;&#x2003;&#x2003;&#x2003;n<sub>0</sub>&#xFF1A;&#x6BCF;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;<br>&#x2003;&#x2003;&#x2003;&#x2003;d<sub>min</sub>&#xFF1A;&#x6700;&#x5C0F;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;<br>&#x2003;&#x2003;&#x2003;&#x2003;d<sub>max</sub>&#xFF1A;&#x6700;&#x5927;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;<br>&#x2003;&#x2003;&#x2003;&#x2003;T&#xFF1A;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</p><p>&#x2003;&#x2003;<font size="4">2. &#x6700;&#x5C0F;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;</font><br>$$d_{min}=\underset{C_i,C_j \subseteq C}{min}{d( \overline {C_i},\overline {C_j} )} \ , \ &#x5176;&#x4E2D;\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}$$</p><p>&#x2003;&#x2003;<font size="4">3. &#x6700;&#x5927;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;</font><br>$$d_{max}=\underset{C_i \subseteq C}{max} \ \frac {1}{\lvert {C_i} \rvert}\underset{x_i \in C_i}{\sum}{d( x_i,\overline C_i )} \ , \ &#x5176;&#x4E2D;\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}$$</p><br><br><br><table>    <tbody><tr><td><center><img src="/images/MACHINE/isodata1.png">&#x521D;&#x59CB;&#x65F6;&#x523B;&#x72B6;&#x6001;</center></td>    <td><center><img src="/images/MACHINE/isodata2.png">&#x7B2C;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x540E;</center></td></tr></tbody></table><br><br><br><br><table>    <tbody><tr><td><center><img src="/images/MACHINE/isodata3.png">&#x7B2C;&#x4E8C;&#x6B21;&#x8FED;&#x4EE3;&#x540E;</center></td>    <td><center><img src="/images/MACHINE/isodata4.png">&#x7B2C;&#x4E09;&#x6B21;&#x8FED;&#x4EE3;&#x540E;</center></td></tr></tbody></table><br><br><br><br><table>    <tbody><tr><td><center><img src="/images/MACHINE/isodata5.png">&#x7B2C;&#x56DB;&#x6B21;&#x8FED;&#x4EE3;&#x540E;</center></td>    <td><center><img src="/images/MACHINE/isodata6.png">&#x7B2C;&#x4E94;&#x6B21;&#x8FED;&#x4EE3;&#x540E;</center></td></tr></tbody></table><p>&#x2003;&#x2003;<font size="4">4. &#x5224;&#x65AD;&#x662F;&#x5426;&#x8FBE;&#x5230;&#x5206;&#x88C2;&#x6761;&#x4EF6;</font></p><ul><li>&#x5F53;&#x524D;&#x7C7B;&#x522B;&#x6570;&#x662F;&#x5426;&#x5C0F;&#x4E8E;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x805A;&#x7C7B;&#x6570;&#x7684;&#x4E00;&#x534A;</li><li>&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6570;&#x76EE;&#x662F;&#x5426;&#x5927;&#x4E8E;&#x6BCF;&#x7C7B;&#x6837;&#x672C;&#x6570;&#x7684;&#x4E8C;&#x500D;</li><li>&#x5F53;&#x524D;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x662F;&#x5426;&#x5927;&#x4E8E;&#x6700;&#x5927;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;</li></ul><p>&#x2003;&#x2003;<font size="4">5. &#x5206;&#x88C2;&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x7C7B;&#x522B;&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><p>&#x2003;&#x2003;<font size="4">6. &#x5224;&#x65AD;&#x662F;&#x5426;&#x8FBE;&#x5230;&#x5408;&#x5E76;&#x6761;&#x4EF6;</font></p><ul><li>&#x5F53;&#x524D;&#x7C7B;&#x522B;&#x6570;&#x662F;&#x5426;&#x5927;&#x4E8E;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x805A;&#x7C7B;&#x6570;&#x7684;&#x4E8C;&#x500D;</li><li>&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6570;&#x76EE;&#x662F;&#x5426;&#x5C0F;&#x4E8E;&#x6BCF;&#x7C7B;&#x6837;&#x672C;&#x6570;&#x7684;&#x4E00;&#x534A;</li><li>&#x5F53;&#x524D;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;&#x662F;&#x5426;&#x5C0F;&#x4E8E;&#x6700;&#x5C0F;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;</li></ul><p>&#x2003;&#x2003;<font size="4">7. &#x5408;&#x5E76;&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x7C7B;&#x522B;&#xFF0C;&#x56DE;&#x5230;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/isodata9.png" alt="ISODATA"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="ISODATA-main-m"><a href="#ISODATA-main-m" class="headerlink" title="ISODATA_main.m"></a>ISODATA_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_gauss.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">hope_class_num=3;</span><br><span class="line">%&#x5E0C;&#x671B;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6570;&#x76EE;</span><br><span class="line">hope_num=20;</span><br><span class="line">%&#x8BBE;&#x5B9A;&#x7C7B;&#x5185;&#x7684;&#x6700;&#x5927;&#x8DDD;&#x79BB;,&#x5C0F;&#x4E00;&#x70B9;</span><br><span class="line">max_class_inner_distance=0.1;</span><br><span class="line">%&#x8BBE;&#x5B9A;&#x7C7B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;,&#x5C0F;&#x4E00;&#x70B9;</span><br><span class="line">min_class_between_distance=0.1;</span><br><span class="line">%&#x6700;&#x591A;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">times=100;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,class_num,class_center]=ISODATA_classify(x_scale,sample_num,hope_class_num,hope_num,max_class_inner_distance,min_class_between_distance,times);</span><br><span class="line">%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));</span><br><span class="line">end</span><br><span class="line">%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    ISODATA_display(x,y,class_center,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="ISODATA-classify-m"><a href="#ISODATA-classify-m" class="headerlink" title="ISODATA_classify.m"></a>ISODATA_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">function [y,class_num,class_center]=ISODATA_classify(x_scale,sample_num,hope_class_num,hope_num,max_class_inner_distance,min_class_between_distance,times)</span><br><span class="line">%&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x89C6;&#x4E3A;0&#x7C7B;</span><br><span class="line">y=zeros(1,sample_num);</span><br><span class="line">%&#x5C06;&#x524D;class_num&#x4E2A;&#x6837;&#x672C;&#x5206;&#x4E3A;class_num&#x7C7B;</span><br><span class="line">y(1:hope_class_num)=1:hope_class_num;</span><br><span class="line">%&#x76EE;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">class_num=hope_class_num;</span><br><span class="line">k=0;</span><br><span class="line">while 1</span><br><span class="line">    class_center=zeros(2,class_num);</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">        class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">    %&#x91C7;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x8FDB;&#x884C;&#x5206;&#x7C7B;</span><br><span class="line">    for i=1:sample_num</span><br><span class="line">        distance=sum((class_center-repmat(x_scale(:,i),1,class_num)).^2);</span><br><span class="line">        y(i)=find(distance==min(distance),1);</span><br><span class="line">    end</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">        class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x5927;&#x4E8E;times&#xFF0C;&#x5219;&#x505C;&#x6B62;&#x8FED;&#x4EE3;</span><br><span class="line">    if k&gt;=times</span><br><span class="line">        break;</span><br><span class="line">    end</span><br><span class="line">    each_class_num=zeros(1,class_num);</span><br><span class="line">    distance_between_class=zeros(class_num);</span><br><span class="line">    %&#x7EDF;&#x8BA1;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2A;&#x6570;,&#x5E76;&#x6C42;&#x51FA;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        each_class_num(i)=sum(y==i);</span><br><span class="line">        distance_between_class(i,:)=sum((class_center-repmat(class_center(:,i),1,class_num)).^2);</span><br><span class="line">        distance_between_class(i,i)=inf;</span><br><span class="line">    end</span><br><span class="line">    %&#x7EDF;&#x8BA1;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;</span><br><span class="line">    distance_class_inner=zeros(1,class_num);</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        temp=x_scale(:,y==i);</span><br><span class="line">        distance_class_inner(i)=sum(sum((temp-repmat(class_center(:,i),1,sum(y==i))).^2))/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7684;&#x4E00;&#x7C7B;&#x7684;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x5927;&#x4E8E;&#x8BBE;&#x5B9A;&#x503C;&#xFF0C;&#x5219;&#x5206;&#x88C2;&#x4E24;&#x7C7B;</span><br><span class="line">    if max(distance_class_inner)&gt;max_class_inner_distance</span><br><span class="line">        tem=find(distance_class_inner==max(distance_class_inner),1);</span><br><span class="line">        %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C;</span><br><span class="line">        temp=x_scale(:,y==tem);</span><br><span class="line">        %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">        distance=zeros(size(temp));</span><br><span class="line">        for i=1:sum(y==tem)</span><br><span class="line">            distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2);</span><br><span class="line">        end</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;</span><br><span class="line">        [row,col]=find(distance==max(max(distance)),1);</span><br><span class="line">        %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E;</span><br><span class="line">        temp=find(y==tem);</span><br><span class="line">        row=temp(row);</span><br><span class="line">        col=temp(col);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        class_num=class_num+1;</span><br><span class="line">        %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500;</span><br><span class="line">        y(y==tem)=0;</span><br><span class="line">        %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        y(row)=tem;</span><br><span class="line">        y(col)=class_num;</span><br><span class="line">        k=k+1;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x4E24;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;&#x8BBE;&#x5B9A;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x5408;&#x5E76;&#x4E24;&#x7C7B;</span><br><span class="line">    if min(min(distance_between_class))&lt;min_class_between_distance</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;</span><br><span class="line">        [row,col]=find(distance_between_class==min(min(distance_between_class)),1);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;-1</span><br><span class="line">        class_num=class_num-1;</span><br><span class="line">        %&#x5C06;col&#x7C7B;&#x5408;&#x5E76;&#x5230;row&#x7C7B;&#x4E2D;</span><br><span class="line">        y(y==col)=row;</span><br><span class="line">        %&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7;</span><br><span class="line">        y(y&gt;col)=y(y&gt;col)-1;</span><br><span class="line">        k=k+1;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x6570;&#x91CF;&#x7684;&#x4E00;&#x534A;</span><br><span class="line">    if min(each_class_num)&lt;=hope_num/2</span><br><span class="line">        %&#x627E;&#x5230;&#x8BE5;&#x7C7B;&#x522B;</span><br><span class="line">        tem=find(each_class_num==min(each_class_num),1);</span><br><span class="line">        %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500;</span><br><span class="line">        y(y==tem)=0;</span><br><span class="line">        %&#x91CD;&#x65B0;&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7;</span><br><span class="line">        y(y&gt;tem)=y(y&gt;tem)-1;</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;-1</span><br><span class="line">        class_num=class_num-1;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x6570;&#x91CF;&#x7684;2&#x500D;</span><br><span class="line">    if max(each_class_num)&gt;=hope_num*2</span><br><span class="line">        %&#x627E;&#x5230;&#x8BE5;&#x7C7B;&#x522B;</span><br><span class="line">        tem=find(each_class_num==max(each_class_num),1);</span><br><span class="line">        %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C;</span><br><span class="line">        temp=x_scale(:,y==tem);</span><br><span class="line">        %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">        distance=zeros(size(temp));</span><br><span class="line">        for i=1:sum(y==tem)</span><br><span class="line">            distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2);</span><br><span class="line">        end</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;</span><br><span class="line">        [row,col]=find(distance==max(max(distance)),1);</span><br><span class="line">        %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E;</span><br><span class="line">        temp=find(y==tem);</span><br><span class="line">        row=temp(row);</span><br><span class="line">        col=temp(col);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        class_num=class_num+1;</span><br><span class="line">        %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500;</span><br><span class="line">        y(y==tem)=0;</span><br><span class="line">        %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        y(row)=tem;</span><br><span class="line">        y(col)=class_num;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x73B0;&#x6709;&#x7C7B;&#x522B;&#x6570;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x7C7B;&#x522B;&#x6570;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x62C6;&#x5206;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7C7B;&#x522B;</span><br><span class="line">    if class_num&lt;=hope_class_num/2</span><br><span class="line">        tem=find(distance_class_inner==max(distance_class_inner),1);</span><br><span class="line">        %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C;</span><br><span class="line">        temp=x_scale(:,y==tem);</span><br><span class="line">        %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">        distance=zeros(size(temp));</span><br><span class="line">        for i=1:sum(y==tem)</span><br><span class="line">            distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2);</span><br><span class="line">        end</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;</span><br><span class="line">        [row,col]=find(distance==max(max(distance)),1);</span><br><span class="line">        %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E;</span><br><span class="line">        temp=find(y==tem);</span><br><span class="line">        row=temp(row);</span><br><span class="line">        col=temp(col);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        class_num=class_num+1;</span><br><span class="line">        %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500;</span><br><span class="line">        y(y==tem)=0;</span><br><span class="line">        %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        y(row)=tem;</span><br><span class="line">        y(col)=class_num;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x73B0;&#x6709;&#x7C7B;&#x522B;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x7C7B;&#x522B;&#x6570;&#x7684;&#x4E8C;&#x500D;&#xFF0C;&#x5408;&#x5E76;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x7C7B;</span><br><span class="line">    if class_num&gt;=hope_class_num*2</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;</span><br><span class="line">        [row,col]=find(distance_between_class==min(min(distance_between_class)),1);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;-1</span><br><span class="line">        class_num=class_num-1;</span><br><span class="line">        %&#x5C06;col&#x7C7B;&#x5408;&#x5E76;&#x5230;row&#x7C7B;&#x4E2D;</span><br><span class="line">        y(y==col)=row;</span><br><span class="line">        %&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7;</span><br><span class="line">        y(y&gt;col)=y(y&gt;col)-1;</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    %&#x6DFB;&#x52A0;&#x6837;&#x672C;&#x7C7B;&#x5185;&#x95F4;&#x8DDD;&#x6700;&#x5927;&#x503C;</span><br><span class="line">    break;</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="ISODATA-display-m"><a href="#ISODATA-display-m" class="headerlink" title="ISODATA_display.m"></a>ISODATA_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function ISODATA_display(x,y,class_center,sample_num,class_num)</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">hold on;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">    plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">    plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/isodata.png" alt="ISODATA"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x53EF;&#x4EE5;&#x52A8;&#x6001;&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x4E2A;&#x6570;&#x548C;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;</li><li>&#x5728;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E0D;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6709;&#x8F83;&#x597D;&#x7684;&#x5206;&#x7C7B;&#x80FD;&#x529B;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x521D;&#x59CB;&#x4E2D;&#x5FC3;&#x70B9;&#x654F;&#x611F;</li><li>&#x7B97;&#x6CD5;&#x590D;&#x6742;&#xFF0C;&#x5206;&#x7C7B;&#x901F;&#x5EA6;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;ISODATA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>K均值聚类(K-MEANS)</title>
    <link href="https://USTCcoder.github.io/2019/05/03/clustering_KMEANS/"/>
    <id>https://USTCcoder.github.io/2019/05/03/clustering_KMEANS/</id>
    <published>2019-05-03T11:14:05.000Z</published>
    <updated>2019-05-27T04:50:11.127Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">K-Means&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;K-Means :&#x968F;&#x673A;&#x9009;&#x53D6;<strong>N&#x4E2A;</strong>&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#xFF0C;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0E;&#x5404;&#x4E2A;&#x79CD;&#x5B50;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x7ED9;&#x8DDD;&#x79BB;&#x5B83;&#x6700;&#x8FD1;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x3002;&#x6BCF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4F1A;&#x6839;&#x636E;&#x805A;&#x7C7B;&#x4E2D;&#x73B0;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x88AB;<strong>&#x91CD;&#x65B0;&#x8BA1;&#x7B97;</strong>&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C06;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x6C42;&#x51FA;N&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;a<sub>1</sub>,a<sub>2</sub>, &#x2026; ,a<sub>N</sub></font><br>$$a_i=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_j}{\sum}{x_i}$$<br>&#x2003;&#x2003;<font size="4">2. &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6837;&#x672C;x<sub>j</sub>&#xFF0C;&#x5C06;&#x5176;&#x6807;&#x8BB0;&#x4E3A;&#x8DDD;&#x79BB;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;a<sub>i</sub>&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x7C7B;</font><br>$$x_j \in C_i \ , \ &#x5176;&#x4E2D;k=\underset{i,a_i \in C_k}{arg \ min}\ d(x_j,a_i)$$<br>&#x2003;&#x2003;<font size="4">3. &#x91CD;&#x590D;&#x6B65;&#x9AA4;1&#xFF0C;2&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font><br><img src="/images/MACHINE/kmeans1.png" alt="KMEANS"></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/kmeans9.png" alt="KMEANS"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="KMEANS-main-m"><a href="#KMEANS-main-m" class="headerlink" title="KMEANS_main.m"></a>KMEANS_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_gauss.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x7C7B;&#x522B;&#x6570;&#x76EE;&#xFF0C;&#x8BF7;&#x8F93;&#x5165;&#x5927;&#x4E8E;1&#x7684;&#x6570;</span><br><span class="line">class_num=3;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">%&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;</span><br><span class="line">loc_center=zeros(feat_num,class_num);</span><br><span class="line">%&#x5982;&#x679C;&#x7C7B;&#x522B;&#x6570;&#x5927;&#x4E8E;&#x6837;&#x672C;&#x6570;&#x6216;&#x8005;&#x7C7B;&#x522B;&#x6570;&#x5C0F;&#x4E8E;1&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x5206;&#x7C7B;</span><br><span class="line">if class_num&gt;sample_num||class_num&lt;1</span><br><span class="line">    disp(&apos;ERROR!&apos;)</span><br><span class="line">else</span><br><span class="line">    %&#x5982;&#x679C;&#x7C7B;&#x522B;&#x6570;&#x7B49;&#x4E8E;1&#xFF0C;&#x5219;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x90FD;&#x5C5E;&#x4E8E;&#x8BE5;&#x7C7B;&#x522B;,&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4E3A;&#x6240;&#x6709;&#x6837;&#x672C;&#x7684;&#x4E2D;&#x70B9;</span><br><span class="line">    if class_num==1</span><br><span class="line">        y=ones(1,sample_num);</span><br><span class="line">        loc_center(:,1)=sum(x,2)/sample_num;</span><br><span class="line">        k=0;</span><br><span class="line">    else</span><br><span class="line">        %&#x53D6;&#x524D;class_num&#x4E2A;&#x6837;&#x672C;&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x7C7B;&#x522B;</span><br><span class="line">        loc_center=x_scale(:,1:class_num);</span><br><span class="line">        %ISO&#x805A;&#x7C7B;&#x6CD5;</span><br><span class="line">        [y,loc_center,k]=KMEANS_classify(x_scale,loc_center,sample_num,class_num);</span><br><span class="line">        %&#x5C06;&#x7F29;&#x653E;&#x540E;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x590D;&#x539F;</span><br><span class="line">        for i=1:feat_num</span><br><span class="line">            loc_center(i,:)=loc_center(i,:)*(max(x(i,:))-min(x(i,:)))+min(x(i,:));</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    if k&gt;=1000</span><br><span class="line">        disp(&apos;Incorrect Classify&apos;)</span><br><span class="line">    else</span><br><span class="line">        %&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">        if feat_num==2</span><br><span class="line">            KMEANS_display(x,y,loc_center,sample_num,class_num)</span><br><span class="line">        else</span><br><span class="line">            disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="KMEANS-classify-m"><a href="#KMEANS-classify-m" class="headerlink" title="KMEANS_classify.m"></a>KMEANS_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">function [y,loc_center,k]=KMEANS_classify(x_scale,loc_center,sample_num,class_num)</span><br><span class="line">%&#x8BBE;&#x7F6E;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span><br><span class="line">k=0;</span><br><span class="line">while 1</span><br><span class="line">    %&#x521D;&#x59CB;&#x5316;&#x6700;&#x65B0;&#x7684;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;</span><br><span class="line">    loc_center_new=zeros(size(loc_center));</span><br><span class="line">    distance=zeros(class_num,sample_num);</span><br><span class="line">    %distance&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        distance(i,:)=sum((x_scale-repmat(loc_center(:,i),1,sample_num)).^2);</span><br><span class="line">    end</span><br><span class="line">    %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x54EA;&#x4E00;&#x7C7B;&#x6700;&#x8FD1;</span><br><span class="line">    [~,y]=min(distance);</span><br><span class="line">    %&#x66F4;&#x65B0;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;</span><br><span class="line">    for i=1:class_num</span><br><span class="line">        loc_center_new(:,i)=sum(x_scale(:,y==i),2)/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">    %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x76F8;&#x7B49;&#x5219;&#x5206;&#x7C7B;&#x5B8C;&#x6BD5;</span><br><span class="line">    if isequal(loc_center_new,loc_center)</span><br><span class="line">        break;</span><br><span class="line">    %&#x5426;&#x5219;&#x7EE7;&#x7EED;&#x5206;&#x7C7B;</span><br><span class="line">    else</span><br><span class="line">        loc_center=loc_center_new;</span><br><span class="line">        k=k+1;</span><br><span class="line">        %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x6B21;&#x6570;&#x8FBE;&#x5230;1000&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED3;&#x675F;&#xFF0C;&#x5219;&#x5F3A;&#x5236;&#x5206;&#x7C7B;&#x7ED3;&#x675F;</span><br><span class="line">        if k&gt;=1000</span><br><span class="line">            break;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="KMEANS-display-m"><a href="#KMEANS-display-m" class="headerlink" title="KMEANS_display.m"></a>KMEANS_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function KMEANS_display(x,y,loc_center,sample_num,class_num)</span><br><span class="line">hold on;</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">%&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">    plot(loc_center(1,i),loc_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)</span><br><span class="line">end</span><br><span class="line">%&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/kmeans.png" alt="KMEANS"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x521D;&#x59CB;&#x4E2D;&#x5FC3;&#x70B9;&#x654F;&#x611F;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;K-Means&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Travelling In HangZhou</title>
    <link href="https://USTCcoder.github.io/2019/05/02/Travelling%20Diaries_hangzhou/"/>
    <id>https://USTCcoder.github.io/2019/05/02/Travelling Diaries_hangzhou/</id>
    <published>2019-05-02T13:06:40.000Z</published>
    <updated>2019-05-11T15:38:19.358Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Travelling/jiuxi3.jpg" alt="jiuxi"><br>&#x56DB;&#x6708;&#x676D;&#x5DDE;&#xFF0C;&#x4E9B;&#x8BB8;&#x8BB0;&#x5FC6;&#x3002;</p><p>ADu:&#x4F60;&#x6700;&#x559C;&#x6B22;&#x7684;&#x989C;&#x8272;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</p><p>Cmilly:&#x5929;&#x7A7A;&#x4E00;&#x6837;&#x7684;&#x84DD;&#x8272;&#x3002;</p><p>&#x90A3;&#x5929;&#x7684;&#x9633;&#x5149;&#x548C;&#x7166;&#xFF0C;&#x67D4;&#x8F6F;&#x5F97;&#x5026;&#x4EBA;&#xFF0C;&#x8F7B;&#x98CE;&#x5439;&#x8D77;&#x6811;&#x53F6;&#xFF0C;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x5982;&#x68A6;&#x4F3C;&#x5E7B;&#x3002;<a id="more"></a></p><p><font size="5" face="STHeiti" color="gray"><strong><em>&#x4E5D;&#x6EAA;&#x70DF;&#x6811;</em></strong></font></p><hr><p>&#x2003;&#x2003;&#x521D;&#x5165;&#x4E5D;&#x6EAA;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x4F53;&#x5473;&#x5230;&#x5979;&#x7684;&#x6C14;&#x8D28;&#xFF0C;&#x5C06;&#x81EA;&#x5DF1;&#x5B89;&#x653E;&#x4E8E;&#x5C71;&#x6DA7;&#x5C0F;&#x9053;&#xFF0C;&#x4E45;&#x800C;&#x4E45;&#x4E4B;&#xFF0C;&#x5BDF;&#x89C9;&#x5DF2;&#x88AB;&#x4E00;&#x80A1;&#x6E05;&#x98CE;&#x5305;&#x56F4;&#xFF0C;&#x4EFF;&#x4F5B;&#x662F;&#x8EAB;&#x5904;&#x68EE;&#x6797;&#x4E4B;&#x5883;&#x3002;&#x60F3;&#x8D77;&#x5728;&#x7E41;&#x534E;&#x95F9;&#x5E02;&#xFF0C;&#x6240;&#x89C1;&#x4E4B;&#x5904;&#xFF0C;&#x4EBA;&#x6D77;&#x6D8C;&#x52A8;&#x3002;&#x5BF9;&#x6BD4;&#x4E8E;&#x6B64;&#xFF0C;&#x771F;&#x771F;&#x5207;&#x5207;&#x4F53;&#x4F1A;&#x5230;&#x4E00;&#x79CD;&#x6C89;&#x6EBA;&#x3002;</p><p>&#x2003;&#x2003;&#x6E29;&#x6696;&#x7684;&#x5929;&#x6C14;&#xFF0C;&#x6F2B;&#x6B65;&#x5728;&#x4E5D;&#x6EAA;&#x5341;&#x516B;&#x6DA7;&#xFF0C;&#x6B22;&#x5FEB;&#x7684;&#x9C7C;&#x513F;&#x5728;&#x6C34;&#x4E2D;&#x6E38;&#x6765;&#x6E38;&#x53BB;&#xFF0C;&#x770B;&#x7740;&#x8FDC;&#x5904;&#x8D77;&#x4F0F;&#x7684;&#x5C0F;&#x5C71;&#xFF0C;&#x6E56;&#x8FB9;&#x5C0F;&#x8DEF;&#x4E0A;&#x5C11;&#x6709;&#x4EBA;&#x8D70;&#x3002;&#x5148;&#x662F;&#x7ECF;&#x8FC7;&#x4E00;&#x7247;&#x897F;&#x6E56;&#x9F99;&#x4E95;&#x8336;&#x4E61;&#xFF0C;&#x5C06;&#x81EA;&#x5DF1;&#x7F6E;&#x8EAB;&#x4E8E;&#x90CA;&#x5916;&#x7530;&#x5730;&#x4E4B;&#x95F4;&#xFF0C;&#x56DE;&#x5934;&#x671B;&#x53BB;&#x5DF2;&#x662F;&#x4E00;&#x5E55;&#x7FE0;&#x7EFF;&#x3002;</p><p><img src="/images/Travelling/jiuxi5.jpg" alt="longjing"></p><p>&#x2003;&#x2003;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x5EFA;&#x5728;&#x4E5D;&#x6EAA;&#x5C71;&#x8170;&#xFF0C;&#x8981;&#x4E00;&#x76F4;&#x4E0A;&#x884C;&#xFF0C;&#x544A;&#x522B;&#x4E86;&#x90A3;&#x4E00;&#x62B9;&#x7EFF;&#x610F;&#x76CE;&#x7136;&#xFF0C;&#x62AC;&#x5934;&#x671B;&#x671B;&#x5929;&#x7A7A;&#xFF0C;&#x52A0;&#x7D27;&#x4E86;&#x6B65;&#x4F10;&#x3002;&#x9053;&#x8DEF;&#x4E24;&#x8FB9;&#x690D;&#x88AB;&#x7E41;&#x8302;&#xFF0C;&#x5F62;&#x6210;&#x8FDE;&#x7EF5;&#x7684;&#x6E7F;&#x5730;&#x3002;&#x65F6;&#x800C;&#x53EF;&#x4EE5;&#x9082;&#x9005;&#x5404;&#x7C7B;&#x6816;&#x606F;&#x4E8E;&#x6B64;&#x7684;&#x6C34;&#x9E1F;&#xFF0C;&#x4E00;&#x7FA4;&#x7FA4;&#x96CF;&#x9E1F;&#x7531;&#x6210;&#x9E1F;&#x5E26;&#x7740;&#x5728;&#x8302;&#x5BC6;&#x82A6;&#x82C7;&#x4E1B;&#x4E2D;&#x63A0;&#x8FC7;&#xFF0C;&#x9047;&#x89C1;&#x4EBA;&#x65F6;&#x4FBF;&#x4F1A;&#x4ED3;&#x7687;&#x9003;&#x53BB;&#x3002;</p><p>&#x2003;&#x2003;&#x4E0D;&#x89C9;&#x5DF2;&#x5230;&#x5C71;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x8FDC;&#x5904;&#x770B;&#x5C71;&#x7684;&#x90A3;&#x79CD;&#x9065;&#x8FDC;&#x4E0D;&#x53EF;&#x53CA;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x662F;&#x611F;&#x53D7;&#x5230;&#x4E00;&#x79CD;&#x795E;&#x5723;&#x4E0D;&#x53EF;&#x4FB5;&#x72AF;&#x3002;&#x6EAA;&#x4E2D;&#x6C34;&#x8D28;&#x8FD9;&#x822C;&#x6E05;&#x6F88;&#xFF0C;&#x6E90;&#x4E8E;&#x751F;&#x6001;&#x7684;&#x4FDD;&#x62A4;&#x3002;&#x6211;&#x5BF9;&#x676D;&#x5DDE;&#x7684;&#x5370;&#x8C61;&#xFF0C;&#x9664;&#x4E86;&#x4FBF;&#x6377;&#x7684;&#x652F;&#x4ED8;&#x4EE5;&#x5916;&#x5C31;&#x662F;&#x4EBA;&#x4EEC;&#x7684;&#x7D20;&#x8D28;&#x3002;&#x5728;&#x6B64;&#x8FC7;&#x4E00;&#x4E2A;&#x9A6C;&#x8DEF;&#x90FD;&#x4F1A;&#x8BA9;&#x6211;&#x70ED;&#x6CEA;&#x76C8;&#x7736;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x4F60;&#x4E0D;&#x4F1A;&#x770B;&#x5230;&#x57CE;&#x5E02;&#x91CC;&#x6D51;&#x6D4A;&#x7684;&#x7A7A;&#x6C14;&#x548C;&#x6C61;&#x6C34;&#xFF0C;&#x88AB;&#x53D6;&#x800C;&#x4EE3;&#x4E4B;&#x7684;&#x662F;&#x5145;&#x65A5;&#x8FD9;&#x7EFF;&#x8336;&#x6E05;&#x9999;&#x7684;&#x82AC;&#x82B3;&#x548C;&#x6E05;&#x6F88;&#x5954;&#x6D41;&#x7684;&#x6C34;&#x6E20;,&#x5979;&#x4EEC;&#x90FD;&#x662F;&#x8FD9;&#x6DF1;&#x5C71;&#x7684;&#x6770;&#x4F5C;&#x3002;</p><p><img src="/images/Travelling/jiuxi4.jpg" alt="shanshui"></p><p>&#x2003;&#x2003;&#x6E38;&#x5C71;&#x73A9;&#x6C34;&#x4E0D;&#x77E5;&#x65F6;&#x95F4;&#x4E4B;&#x5FEB;&#x4E5F;&#xFF0C;&#x968F;&#x7740;&#x5C0F;&#x817F;&#x7684;&#x9178;&#x75DB;&#xFF0C;&#x5DF2;&#x77E5;&#x811A;&#x7A0B;&#x7684;&#x9065;&#x8FDC;&#xFF0C;&#x518D;&#x62AC;&#x5934;&#x65F6;&#x5DF2;&#x6765;&#x5230;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x3002;&#x8EAB;&#x5728;&#x5C71;&#x4E2D;&#x4E0D;&#x77E5;&#x5C71;&#xFF0C;&#x867D;&#x4E0D;&#x5F97;&#x5168;&#x8C8C;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x5C71;&#x6DA7;&#x6D41;&#x6CFB;&#x800C;&#x4E0B;&#x7684;&#x6EAA;&#x6D41;&#x3002;&#x56DE;&#x5473;&#x592A;&#x767D;&#x8BD7;&#x53E5;&#xFF0C;&#x9887;&#x6709;&#x94F6;&#x6CB3;&#x843D;&#x4E5D;&#x5929;&#x4E4B;&#x610F;&#x3002;</p><p><img src="/images/Travelling/jiuxi1.jpg" alt="yanshu"></p><p><font size="5" face="STHeiti" color="gray"><strong><em>&#x6EAA;&#x4E2D;&#x6EAA;</em></strong></font></p><hr><p>&#x2003;&#x2003;&#x5728;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x4E0D;&#x505A;&#x8FC7;&#x591A;&#x6D41;&#x8FDE;&#xFF0C;&#x76F4;&#x5954;&#x6EAA;&#x4E2D;&#x6EAA;&#xFF0C;&#x72B9;&#x5982;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x4E00;&#x822C;&#x795E;&#x79D8;&#xFF0C;&#x6E05;&#x6F88;&#x7684;&#x6C34;&#x6D17;&#x6DA4;&#x8FD9;&#x4E16;&#x95F4;&#x5C18;&#x4FD7;&#xFF0C;&#x6CB3;&#x5E95;&#x5C42;&#x6B21;&#x5206;&#x660E;&#xFF0C;&#x7ED9;&#x6C34;&#x6DFB;&#x52A0;&#x4E00;&#x80A1;&#x529B;&#x91CF;&#xFF0C;&#x6C34;&#x9762;&#x51B2;&#x5237;&#x8FD9;&#x77F3;&#x9636;&#xFF0C;&#x4EFF;&#x4F5B;&#x51C0;&#x5316;&#x6211;&#x7684;&#x5FC3;&#x7075;&#x3002;&#x65F6;&#x800C;&#x5FEB;&#xFF0C;&#x65F6;&#x800C;&#x6162;&#xFF0C;&#x65F6;&#x800C;&#x6C79;&#x6C79;&#x800C;&#x6765;&#xFF0C;&#x65F6;&#x800C;&#x6F7A;&#x6F7A;&#x6D41;&#x52A8;&#x3002;&#x6C34;&#x4E2D;&#x6709;&#x8BB8;&#x591A;&#x91D1;&#x9C7C;&#x9CA4;&#x9C7C;&#xFF0C;&#x4E09;&#x4E94;&#x6210;&#x7FA4;&#xFF0C;&#x4E00;&#x53E5;&#x201C;&#x8C2D;&#x4E2D;&#x9C7C;&#x53EF;&#x767E;&#x8BB8;&#x5934;&#xFF0C;&#x7686;&#x82E5;&#x7A7A;&#x6E38;&#x65E0;&#x6240;&#x4F9D;&#x201D;&#x6D8C;&#x4E0A;&#x5FC3;&#x5934;&#x3002;</p><p>&#x2003;&#x2003;&#x8FD9;&#x91CC;&#x7684;&#x98CE;&#x666F;&#x662F;&#x4E0D;&#x52A0;&#x4EFB;&#x4F55;&#x4FEE;&#x9970;&#x7684;&#xFF0C;&#x4ECE;&#x8FDC;&#x5904;&#x770B;&#xFF0C;&#x5C71;&#x4E0A;&#x4E91;&#x96FE;&#x98D8;&#x6E3A;&#xFF0C;&#x50CF;&#x4EBA;&#x95F4;&#x4ED9;&#x5883;&#x4E00;&#x6837;&#x3002;&#x987A;&#x7740;&#x65C1;&#x8FB9;&#x7684;&#x5D0E;&#x5C96;&#x5C0F;&#x9053;&#x6F2B;&#x6B65;&#xFF0C;&#x7A7A;&#x6C14;&#x4E2D;&#x5939;&#x6742;&#x6CE5;&#x571F;&#x7684;&#x6C14;&#x606F;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x547C;&#x5438;&#xFF0C;&#x56DE;&#x5F52;&#x4E8E;&#x81EA;&#x7136;&#x3002;&#x5C71;&#x4E4B;&#x7F8E;&#xFF0C;&#x6C34;&#x4E4B;&#x7F8E;&#xFF0C;&#x7EFF;&#x6797;&#x626C;&#x98CE;&#xFF0C;&#x767D;&#x6C34;&#x6FC0;&#x6DA7;&#x3002;</p><p><img src="/images/Travelling/jiuxi2.jpg" alt="xizhongxi"></p><p>&#x2003;&#x2003;&#x5929;&#x8272;&#x6E10;&#x665A;&#xFF0C;&#x60A0;&#x7136;&#x81EA;&#x5F97;&#x3002;&#x5929;&#x5E55;&#x5E7D;&#x84DD;&#xFF0C;&#x5C71;&#x8DEF;&#x4E0A;&#x8FD8;&#x6709;&#x6591;&#x9A73;&#x7684;&#x6811;&#x5F71;&#xFF0C;&#x866B;&#x9E1F;&#x5E7D;&#x5A49;&#x7684;&#x50AC;&#x4FC3;&#x5BA2;&#x4EBA;&#x7684;&#x5F52;&#x7A0B;&#x3002;&#x6211;&#x60F3;&#x5DF2;&#x5230;&#x5206;&#x522B;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x5C71;&#x8DEF;&#x5E76;&#x4E0D;&#x9661;&#x5CED;&#xFF0C;&#x987A;&#x7740;&#x659C;&#x5761;&#x5411;&#x4E0B;&#x884C;&#x8D70;&#xFF0C;&#x5F80;&#x5F80;&#x8D70;&#x7684;&#x6781;&#x5176;&#x60EC;&#x610F;&#x3002;&#x5929;&#x6C14;&#x5FAE;&#x51C9;&#xFF0C;&#x665A;&#x98CE;&#x5439;&#x8FC7;&#x94B1;&#x6C5F;&#x6C34;&#xFF0C;&#x7565;&#x5E26;&#x6709;&#x4E00;&#x4E9B;&#x6F6E;&#x6E7F;&#x7684;&#x5473;&#x9053;&#xFF0C;&#x676D;&#x5DDE;&#x7684;&#x6625;&#x5929;&#x6CA1;&#x6709;&#x51AC;&#x540E;&#x7684;&#x5BD2;&#x51B7;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x590F;&#x521D;&#x7684;&#x71E5;&#x70ED;&#xFF0C;&#x6625;&#x98CE;&#x5439;&#x5F97;&#x6E38;&#x4EBA;&#x9189;&#x3002;&#x5728;&#x6625;&#x98CE;&#x4E2D;&#x6211;&#x5750;&#x4E0A;&#x4E86;&#x56DE;&#x53BB;&#x7684;&#x8F66;&#xFF0C;&#x5728;&#x8F66;&#x4E0A;&#x4E0D;&#x77E5;&#x4F55;&#x65F6;&#x7ADF;&#x5DF2;&#x6C89;&#x9189;&#x3002;</p><p>&#x2003;&#x2003;&#x559C;&#x7231;&#x201C;&#x6625;&#x6DF1;&#x201D;&#x4E8C;&#x5B57;&#xFF0C;&#x65E9;&#x83BA;&#x65B0;&#x71D5;&#xFF0C;&#x4E71;&#x82B1;&#x6D45;&#x8349;&#xFF0C;&#x6625;&#x5929;&#x5728;&#x4E00;&#x970E;&#x95F4;&#x63A0;&#x8FC7;&#x9621;&#x964C;&#x3002;&#x5CE5;&#x5D58;&#x82B1;&#x8349;&#x4E00;&#x5982;&#x4F7F;&#x8005;&#xFF0C;&#x5531;&#x7740;&#x9882;&#x6B4C;&#x3002;&#x6B64;&#x540E;&#x6625;&#x6DF1;&#xFF0C;&#x7E41;&#x5BC6;&#x9999;&#x5F7B;&#x3002;&#x8D8A;&#x662F;&#x7231;&#x5F97;&#x76DB;&#x5BC6;&#xFF0C;&#x8D8A;&#x662F;&#x6028;&#x5F97;&#x6DF1;&#x6C93;&#x3002;&#x5343;&#x5E06;&#x8FC7;&#x5C3D;&#xFF0C;&#x5C71;&#x8272;&#x5165;&#x753B;&#x3002;&#x66F4;&#x662F;&#x6625;&#x6DF1;&#x5E7D;&#x9759;&#xFF0C;&#x81EA;&#x5F97;&#x60EC;&#x610F;&#x7545;&#x7F8E;&#x3002;&#x4F9D;&#x65E7;&#x884C;&#x4E8E;&#x5C18;&#x4E16;&#xFF0C;&#x4F46;&#x80FD;&#x4FDD;&#x6709;&#x4E00;&#x9897;&#x9614;&#x5BC2;&#x7684;&#x5FC3;&#xFF0C;&#x800C;&#x53C8;&#x80FD;&#x65F6;&#x65F6;&#x4ECE;&#x5176;&#x4E2D;&#x83B7;&#x53D6;&#x4E30;&#x76DB;&#x7684;&#x7F8E;&#x610F;&#x3002;</p><p>&#x2003;&#x2003;&#x6625;&#x4E8B;&#x5230;&#x6E05;&#x660E;&#xFF0C;&#x5341;&#x5206;&#x82B1;&#x67F3;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;MEETING HANGZHOU&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Travelling Diaries" scheme="https://USTCcoder.github.io/categories/Travelling-Diaries/"/>
    
    
  </entry>
  
  <entry>
    <title>分裂的层次聚类(DIANA)</title>
    <link href="https://USTCcoder.github.io/2019/05/02/clustering_DIANA/"/>
    <id>https://USTCcoder.github.io/2019/05/02/clustering_DIANA/</id>
    <published>2019-05-02T11:38:26.000Z</published>
    <updated>2019-05-27T04:58:57.744Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;DIANA(Divisive Analysis):&#x91C7;&#x7528;<strong>&#x81EA;&#x9876;&#x5411;&#x4E0B;</strong>&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6700;&#x521D;&#x5C06;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x7F6E;&#x4E8E;&#x4E00;&#x4E2A;&#x7C7B;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x67D0;&#x4E9B;&#x51C6;&#x5219;&#x5C06;&#x8FD9;&#x4E9B;&#x7C7B;&#x522B;<strong>&#x9010;&#x6E10;&#x7EC6;&#x5206;</strong>&#x3002;&#x7EC6;&#x5206;&#x8FC7;&#x7A0B;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x76F4;&#x5230;&#x7C7B;&#x522B;&#x8FBE;&#x5230;&#x9884;&#x671F;&#x7684;&#x6570;&#x76EE;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x5C06;&#x6240;&#x6709;&#x6837;&#x672C;&#x90FD;&#x4F5C;&#x4E3A;&#x540C;&#x4E00;&#x7C7B;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x5206;&#x88C2;&#x6240;&#x6709;&#x7C7B;&#x522B;&#x4E2D;&#x5230;&#x8BE5;&#x7C7B;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x5C06;&#x5176;&#x5355;&#x72EC;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B;&#xFF0C;&#x6309;&#x7167;&#x6700;&#x8FD1;&#x90BB;&#x5206;&#x7C7B;&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font><br>$$d_{max}=\underset{C_i \subseteq C}{max} \ (\underset{x_i \in C_i}{max} \ {d(x_i,\overline C_i)}) \ , \ &#x5176;&#x4E2D;\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}$$</p><p><img src="/images/MACHINE/diana1.png" alt="DIANA"></p><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/diana9.png" alt="DIANA"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="DIANA-main-m"><a href="#DIANA-main-m" class="headerlink" title="DIANA_main.m"></a>DIANA_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_gauss.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">class_num=3;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,class_center]=DIANA_classify(x_scale,sample_num,class_num);</span><br><span class="line">%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));</span><br><span class="line">end</span><br><span class="line">%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    DIANA_display(x,y,class_center,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="DIANA-classify-m"><a href="#DIANA-classify-m" class="headerlink" title="DIANA_classify.m"></a>DIANA_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">function [y,class_center]=DIANA_classify(x_scale,sample_num,class_num)</span><br><span class="line">if class_num==1</span><br><span class="line">    class_center=sum(x_scale,2)/sample_num;</span><br><span class="line">    y=ones(1,sample_num);</span><br><span class="line">else</span><br><span class="line">    %&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x89C6;&#x4E3A;0&#x7C7B;</span><br><span class="line">    y=zeros(1,sample_num);</span><br><span class="line">    distance=zeros(sample_num);</span><br><span class="line">    for i=1:sample_num</span><br><span class="line">        distance(i,:)=sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2);</span><br><span class="line">    end</span><br><span class="line">    %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;</span><br><span class="line">    [row,col]=find(distance==max(max(distance)),1);</span><br><span class="line">    %&#x5C06;row&#x5206;&#x4E3A;&#x7B2C;&#x4E00;&#x7C7B;,col&#x5206;&#x4E3A;&#x7B2C;&#x4E8C;&#x7C7B;</span><br><span class="line">    y(row)=1;</span><br><span class="line">    y(col)=2;</span><br><span class="line">    %&#x8BBE;&#x7F6E;&#x7B2C;&#x4E00;&#x7C7B;&#x548C;&#x7B2C;&#x4E8C;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">    class_center(:,1)=x_scale(:,row);</span><br><span class="line">    class_center(:,2)=x_scale(:,col);</span><br><span class="line">    %&#x76EE;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">    class_num_temp=2;</span><br><span class="line">    distance_min=zeros(1,sample_num);</span><br><span class="line">    while class_num_temp~=class_num</span><br><span class="line">        for i=1:sample_num</span><br><span class="line">            %&#x6C42;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB;</span><br><span class="line">            distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2);</span><br><span class="line">            %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x503C;</span><br><span class="line">            distance_min(i)=distance(find(distance==min(distance),1));</span><br><span class="line">        end</span><br><span class="line">        %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x503C;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B;</span><br><span class="line">        temp=find(distance_min==max(distance_min),1);</span><br><span class="line">        %&#x7C7B;&#x522B;&#x6570;+1</span><br><span class="line">        class_num_temp=class_num_temp+1;</span><br><span class="line">        %&#x4FEE;&#x6539;&#x7C7B;&#x522B;&#x4FE1;&#x606F;</span><br><span class="line">        y(temp)=class_num_temp;</span><br><span class="line">        for i=1:class_num_temp</span><br><span class="line">            %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">            class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    %&#x91C7;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x8FDB;&#x884C;&#x5206;&#x7C7B;</span><br><span class="line">    for i=1:sample_num</span><br><span class="line">        distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2);</span><br><span class="line">        y(i)=find(distance==min(distance),1);</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="DIANA-display-m"><a href="#DIANA-display-m" class="headerlink" title="DIANA_display.m"></a>DIANA_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function DIANA_display(x,y,class_center,sample_num,class_num)</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">hold on;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">    plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">    plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/diana.png" alt="DIANA"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x503C;&#x7684;&#x9009;&#x62E9;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x5C11;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x5FEB;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x654F;&#x611F;</li><li>&#x5206;&#x88C2;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;DIANA&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>凝聚的层次聚类(AGNES)</title>
    <link href="https://USTCcoder.github.io/2019/05/01/clustering_AGNES/"/>
    <id>https://USTCcoder.github.io/2019/05/01/clustering_AGNES/</id>
    <published>2019-05-01T11:29:40.000Z</published>
    <updated>2019-05-27T05:00:11.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;&#x65B9;&#x6CD5;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x89E3;&#x8BFB;"><a href="#&#x539F;&#x7406;&#x89E3;&#x8BFB;" class="headerlink" title="&#x539F;&#x7406;&#x89E3;&#x8BFB;"></a><font size="5" color="red">&#x539F;&#x7406;&#x89E3;&#x8BFB;</font></h1><p>&#x2003;&#x2003;AGNES(Agglomerative Nesting):&#x91C7;&#x7528;<strong>&#x81EA;&#x5E95;&#x5411;&#x4E0A;</strong>&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6700;&#x521D;&#x5C06;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x67D0;&#x4E9B;&#x51C6;&#x5219;&#x5C06;&#x8FD9;&#x4E9B;&#x7C7B;&#x522B;<strong>&#x9010;&#x4E00;&#x5408;&#x5E76;</strong>&#x3002;&#x5408;&#x5E76;&#x7684;&#x8FC7;&#x7A0B;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x76F4;&#x5230;&#x7C7B;&#x522B;&#x8FBE;&#x5230;&#x9884;&#x671F;&#x7684;&#x6570;&#x76EE;&#x3002;<br><a id="more"></a></p><h1 id="&#x6838;&#x5FC3;&#x601D;&#x60F3;"><a href="#&#x6838;&#x5FC3;&#x601D;&#x60F3;" class="headerlink" title="&#x6838;&#x5FC3;&#x601D;&#x60F3;"></a><font size="5" color="red">&#x6838;&#x5FC3;&#x601D;&#x60F3;</font></h1><p>&#x2003;&#x2003;<font size="4">1. &#x5C06;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x5355;&#x72EC;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B;</font></p><p>&#x2003;&#x2003;<font size="4">2. &#x5408;&#x5E76;&#x4E24;&#x7C7B;(&#x591A;&#x79CD;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;)&#xFF0C;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</font></p><ul><li><p>&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;<br>$$d_{min}=\underset{x_i \in C_i,x_j \in C_j}{min}d(x_i,x_j)$$</p></li><li><p>&#x6700;&#x5927;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;<br>$$d_{max}=\underset{x_i \in C_i,x_j \in C_j}{max}d(x_i-x_j)$$</p></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/agnes1.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/agnes2.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><ul><li><p>&#x5747;&#x503C;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E2D;&#x6837;&#x672C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;<br>$$d_{mean}=d(\overline {C_i}- \overline {C_j}) \ , \ &#x5176;&#x4E2D;\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}$$</p></li><li><p>&#x5E73;&#x5747;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E2D;&#x6837;&#x672C;&#x95F4;&#x4E24;&#x4E24;&#x8DDD;&#x79BB;&#x7684;&#x5E73;&#x5747;&#x503C;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;<br>$$d_{avg}=\frac {1}{\lvert C_i \rvert \lvert C_j \rvert}\underset{x_i \in C_i}{\sum}\underset{x_j \in C_j}{\sum}d(x_i-x_j)$$</p></li></ul><p></p><center><div style="float:left;margin-left:50px"><img src="/images/MACHINE/agnes3.png" width="200" height="260"></div></center><p></p><div style="float:right;margin-right:50px"><img src="/images/MACHINE/agnes4.png" width="200" height="260"></div><br><div style="float:none;clear:both;"></div><h1 id="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"><a href="#&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;"></a><font size="5" color="red">&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;</font></h1><p><img src="/images/MACHINE/agnes9.png" alt="AGNES"></p><p><br><br></p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><p><font size="4">&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x7528;&#x6570;&#x636E;&#x96C6;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76F8;&#x5173;&#x6587;&#x6863;&#xFF0C;<a href="https://ustccoder.github.io/2019/04/25/clustering_Dataset/">&#x6570;&#x636E;&#x96C6;(Data Set)</a></font></p><h2 id="AGNES-main-m"><a href="#AGNES-main-m" class="headerlink" title="AGNES_main.m"></a>AGNES_main.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">load(&apos;..\\cluster_gauss.mat&apos;);</span><br><span class="line">%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;</span><br><span class="line">x=data;</span><br><span class="line">randIndex = randperm(size(x,2));</span><br><span class="line">x=x(:,randIndex);</span><br><span class="line">%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">class_num=3;</span><br><span class="line">%&#x6837;&#x672C;&#x6570;</span><br><span class="line">sample_num=size(x,2);</span><br><span class="line">%&#x7279;&#x5F81;&#x6570;&#x76EE;</span><br><span class="line">feat_num=size(x,1);</span><br><span class="line">%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1</span><br><span class="line">x_scale=zeros(size(x));</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));</span><br><span class="line">end</span><br><span class="line">[y,class_center]=AGNES_classify(x_scale,sample_num,class_num);</span><br><span class="line">%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;</span><br><span class="line">for i=1:feat_num</span><br><span class="line">    class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));</span><br><span class="line">end</span><br><span class="line">%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;</span><br><span class="line">if feat_num==2</span><br><span class="line">    AGNES_display(x,y,class_center,sample_num,class_num);</span><br><span class="line">else</span><br><span class="line">    disp(&apos;The Feature Is Not Two-Dimensional&apos;);</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="AGNES-classify-m"><a href="#AGNES-classify-m" class="headerlink" title="AGNES_classify.m"></a>AGNES_classify.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">function [y,class_center]=AGNES_classify(x_scale,sample_num,class_num)</span><br><span class="line">%&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x7C7B;&#x522B;</span><br><span class="line">y=1:sample_num;</span><br><span class="line">%&#x5F53;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570;</span><br><span class="line">class_num_temp=sample_num;</span><br><span class="line">%&#x521D;&#x59CB;&#x5316;&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3;</span><br><span class="line">class_center=x_scale;</span><br><span class="line">while class_num_temp~=class_num</span><br><span class="line">    %&#x521D;&#x59CB;&#x5316;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;</span><br><span class="line">    center_distance=zeros(class_num_temp);</span><br><span class="line">    for i=1:class_num_temp</span><br><span class="line">        %&#x8BA1;&#x7B97;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;</span><br><span class="line">        center_distance(i,:)=sum((class_center-repmat(class_center(:,i),1,class_num_temp)).^2);</span><br><span class="line">        center_distance(i,i)=inf;</span><br><span class="line">    end</span><br><span class="line">    %&#x4ECE;&#x4E2D;&#x5FC3;&#x8DDD;&#x4E2D;&#x627E;&#x5230;&#x6700;&#x5C0F;&#x503C;</span><br><span class="line">    [row,col]=find(center_distance==min(min(center_distance)),1);</span><br><span class="line">    %&#x5C06;&#x4E24;&#x7C7B;&#x5408;&#x5E76;</span><br><span class="line">    y(y==col)=row;</span><br><span class="line">    %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4ECE;&#x7B2C;1&#x7C7B;&#x8FDE;&#x7EED;&#x5206;&#x7C7B;</span><br><span class="line">    y(y&gt;col)=y(y&gt;col)-1;</span><br><span class="line">    %&#x7C7B;&#x522B;&#x6570;-1</span><br><span class="line">    class_num_temp=class_num_temp-1;</span><br><span class="line">    %&#x521D;&#x59CB;&#x5316;&#x6837;&#x672C;&#x4E2D;&#x5FC3;</span><br><span class="line">    class_center=zeros(2,class_num_temp);</span><br><span class="line">    for i=1:class_num_temp</span><br><span class="line">        %&#x8BA1;&#x7B97;&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x4E2D;&#x5FC3;</span><br><span class="line">        class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i);</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><h2 id="AGNES-display-m"><a href="#AGNES-display-m" class="headerlink" title="AGNES_display.m"></a>AGNES_display.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function AGNES_display(x,y,class_center,sample_num,class_num)</span><br><span class="line">color_bar=zeros(class_num,3);</span><br><span class="line">hold on;</span><br><span class="line">for i=1:class_num</span><br><span class="line">    color_bar(i,:)=[rand(1),rand(1),rand(1)];</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A;</span><br><span class="line">    plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)</span><br><span class="line">end</span><br><span class="line">for i=1:sample_num</span><br><span class="line">    %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A;</span><br><span class="line">    plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);</span><br><span class="line">end</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><br><br></p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a><font size="5" color="red">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</font></h1><p><img src="/images/MACHINE/agnes.png" alt="AGNES"></p><h1 id="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"><a href="#&#x6027;&#x80FD;&#x6BD4;&#x8F83;" class="headerlink" title="&#x6027;&#x80FD;&#x6BD4;&#x8F83;"></a><font size="5" color="red">&#x6027;&#x80FD;&#x6BD4;&#x8F83;</font></h1><ul><li><font size="4"><strong>&#x4F18;&#x70B9;&#xFF1A;</strong><ul><li>&#x5BF9;&#x566A;&#x58F0;&#x6570;&#x636E;&#x4E0D;&#x654F;&#x611F;</li><li>&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;</li><li>&#x4E0D;&#x4F9D;&#x8D56;&#x521D;&#x59CB;&#x503C;&#x7684;&#x9009;&#x62E9;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x5FEB;</li></ul></font></li><li><font size="4"><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong><ul><li>&#x5408;&#x5E76;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;</li><li>&#x9700;&#x8981;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x77E5;&#x9053;&#x7C7B;&#x522B;&#x7684;&#x4E2A;&#x6570;</li><li>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x8F83;&#x5C11;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x5206;&#x7C7B;&#x8F83;&#x6162;</li><li>&#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;</li><li>&#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;</li></ul></font></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;AGNES&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>ID3</title>
    <link href="https://USTCcoder.github.io/2019/04/30/Machine%20Learning_ID3/"/>
    <id>https://USTCcoder.github.io/2019/04/30/Machine Learning_ID3/</id>
    <published>2019-04-30T13:02:13.000Z</published>
    <updated>2019-05-11T16:57:55.137Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;</p><a id="more"></a><p>Watermelon&#x1F349;</p><blockquote><p>111111</p></blockquote><blockquote><p>2222</p></blockquote><blockquote><p>33333<br>$$x = 100 * y + z - 10 / 33 + 10 % 3$$<br>$$f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right )$$</p></blockquote><p>777</p><button>111</button><p>$$\hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx$$</p><ul><li><p>aaa</p><ul><li><p>bbb</p></li><li><p>ccc</p><ul><li><p>ddd</p></li><li><p>eee</p><ul><li>fff</li><li>ggg<ul><li>hhh<ul><li>iii<ul><li>jjj</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;ID3&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="决策树" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
    
  </entry>
  
  <entry>
    <title>数据集说明(Data Set)</title>
    <link href="https://USTCcoder.github.io/2019/04/25/machine%20learning_BP/"/>
    <id>https://USTCcoder.github.io/2019/04/25/machine learning_BP/</id>
    <published>2019-04-25T10:38:53.000Z</published>
    <updated>2019-05-16T15:13:06.582Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;</p><a id="more"></a><p>Watermelon&#x1F349;</p><blockquote><p>111111</p></blockquote><blockquote><p>2222</p></blockquote><blockquote><p>33333<br>$$x = 100 * y + z - 10 / 33 + 10 % 3$$<br>$$f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right )$$</p></blockquote><p>777</p><button>111</button><p>$$\hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx$$</p><ul><li><p>aaa</p><ul><li><p>bbb</p></li><li><p>ccc</p><ul><li><p>ddd</p></li><li><p>eee</p><ul><li>fff</li><li>ggg<ul><li>hhh<ul><li>iii<ul><li>jjj</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;DATA SET&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>数据集(Data Set)</title>
    <link href="https://USTCcoder.github.io/2019/04/25/clustering_Dataset/"/>
    <id>https://USTCcoder.github.io/2019/04/25/clustering_Dataset/</id>
    <published>2019-04-25T10:38:53.000Z</published>
    <updated>2019-05-25T08:14:02.647Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size="5" color="gray"></font></strong></p><center><strong><font size="5" color="gray">&#x6570;&#x636E;&#x96C6;&#x8BF4;&#x660E;</font></strong></center><p></p><h1 id="&#x539F;&#x7406;&#x4ECB;&#x7ECD;"><a href="#&#x539F;&#x7406;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x539F;&#x7406;&#x4ECB;&#x7ECD;"></a><font size="5" color="red">&#x539F;&#x7406;&#x4ECB;&#x7ECD;</font></h1><p>&#x2003;&#x2003;Data Set:&#x5BF9;&#x4E8E;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9886;&#x57DF;&#x6765;&#x8BF4;&#xFF0C;&#x6570;&#x636E;&#x96C6;&#x7684;&#x9009;&#x62E9;&#x662F;<strong>&#x81F3;&#x5173;&#x91CD;&#x8981;</strong>&#x7684;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x96C6;&#x7684;&#x597D;&#x574F;&#x5F80;&#x5F80;&#x53EF;&#x4EE5;<strong>&#x76F4;&#x63A5;&#x51B3;&#x5B9A;&#x805A;&#x7C7B;&#x7ED3;&#x679C;</strong>&#xFF0C;&#x901A;&#x5E38;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;<strong>&#x5F88;&#x96BE;</strong>&#x9002;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BBE;&#x8BA1;&#x5404;&#x79CD;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x5E76;&#x4E14;<strong>&#x5206;&#x6790;&#x54EA;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x9002;&#x5408;&#x7528;&#x54EA;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;</strong>&#xFF0C;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x5728;&#x4ECA;&#x540E;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x624D;&#x80FD;&#x5F97;&#x5FC3;&#x5E94;&#x624B;&#x3002;<a id="more"></a>&#x8003;&#x8651;&#x5230;&#x6570;&#x636E;&#x96C6;&#x7684;&#x9002;&#x5E94;&#x6027;&#xFF0C;&#x8BBE;&#x8BA1;&#x4E86;&#x4EE5;&#x4E0B;&#x4E94;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x5305;&#x62EC;<strong>&#x6C34;&#x5E73;&#x7AD6;&#x76F4;&#x578B;</strong>&#x6570;&#x636E;&#xFF0C;<strong>&#x659C;&#x7EBF;&#x578B;</strong>&#x6570;&#x636E;&#xFF0C;<strong>&#x5706;&#x5F62;</strong>&#x6570;&#x636E;&#xFF0C;<strong>&#x9AD8;&#x65AF;&#x578B;</strong>&#x6570;&#x636E;&#x548C;<strong>&#x6DF7;&#x5408;&#x578B;</strong>&#x6570;&#x636E;&#x3002;</p><h1 id="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"><a href="#&#x4EE3;&#x7801;&#x5B9E;&#x6218;" class="headerlink" title="&#x4EE3;&#x7801;&#x5B9E;&#x6218;"></a><font size="5" color="red">&#x4EE3;&#x7801;&#x5B9E;&#x6218;</font></h1><h2 id="line-data-m"><a href="#line-data-m" class="headerlink" title="line_data.m"></a>line_data.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">hold on;</span><br><span class="line">axis equal;</span><br><span class="line">%&#x7EBF;&#x7684;&#x957F;&#x5EA6; </span><br><span class="line">long=[10,10,10];</span><br><span class="line">%&#x7EBF;&#x7684;&#x5BBD;&#x5EA6;</span><br><span class="line">wide=[1,1,1];</span><br><span class="line">%&#x7EBF;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</span><br><span class="line">x_0=[0,0,0];</span><br><span class="line">y_0=[2,5,8];</span><br><span class="line">%&#x6BCF;&#x4E00;&#x6761;&#x7EBF;&#x4E0A;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">num=[500,500,500];</span><br><span class="line">data_temp=zeros(2,sum(num));</span><br><span class="line">for i=1:length(long)</span><br><span class="line">    if i==1</span><br><span class="line">        data_temp(:,1:num(i))=[rand(1,num(i))*long(i)+x_0(i);rand(1,num(i))*wide(i)+y_0(i)];</span><br><span class="line">    else</span><br><span class="line">        data_temp(:,sum(num(1:i-1))+1:sum(num(1:i)))=[rand(1,sum(num(1:i))-sum(num(1:i-1)))*long(i)+x_0(i);rand(1,sum(num(1:i))-sum(num(1:i-1)))*wide(i)+y_0(i)];</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%&#x968F;&#x673A;&#x6253;&#x4E71;&#x987A;&#x5E8F;</span><br><span class="line">randIndex = randperm(size(data_temp,2));</span><br><span class="line">data=data_temp(:,randIndex);</span><br><span class="line">plot(data(1,:),data(2,:),&apos;o&apos;);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/MACHINE/cluster_line.png" alt="line"></p><h2 id="slash-data-m"><a href="#slash-data-m" class="headerlink" title="slash_data.m"></a>slash_data.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">hold on;</span><br><span class="line">axis equal;</span><br><span class="line">%x&#x7684;&#x8D77;&#x59CB;&#x548C;&#x7EC8;&#x6B62;&#x4F4D;&#x7F6E;</span><br><span class="line">begend=[0,0,1,6;...</span><br><span class="line">    10,10,5,10];</span><br><span class="line">%&#x659C;&#x7387;&#x548C;&#x622A;&#x8DDD;</span><br><span class="line">kb=[1,1,-5,-5;...</span><br><span class="line">    -2,7,20,50];</span><br><span class="line">data_temp=[];</span><br><span class="line">for i=1:size(begend,2)</span><br><span class="line">    x=begend(1,i):0.1:begend(2,i);</span><br><span class="line">    data_temp=[data_temp,[x+rand(1,length(x))-0.5;kb(1,i)*x+kb(2,i)+rand(1,length(x))-0.5]];</span><br><span class="line">end</span><br><span class="line">%&#x968F;&#x673A;&#x6253;&#x4E71;&#x987A;&#x5E8F;</span><br><span class="line">randIndex = randperm(size(data_temp,2));</span><br><span class="line">data=data_temp(:,randIndex);</span><br><span class="line">plot(data(1,:),data(2,:),&apos;o&apos;);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/MACHINE/cluster_slash.png" alt="slash"></p><h2 id="gauss-data-m"><a href="#gauss-data-m" class="headerlink" title="gauss_data.m"></a>gauss_data.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">hold on;</span><br><span class="line">axis equal;</span><br><span class="line">%&#x7C07;&#x4E2A;&#x6570;</span><br><span class="line">num=3;</span><br><span class="line">%&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">number=300;</span><br><span class="line">%u&#x548C;sigma</span><br><span class="line">data_temp=zeros(2,num*number);</span><br><span class="line">usigma_x=[0,2,6;</span><br><span class="line">    1,1,1];</span><br><span class="line">usigma_y=[0,6,2;</span><br><span class="line">    1,1,1];</span><br><span class="line">for i=1:num</span><br><span class="line">    data_temp(:,(i-1)*number+1:i*number)=[normrnd(usigma_x(1,i),usigma_x(2,i),1,number);normrnd(usigma_y(1,i),usigma_y(2,i),1,number)];</span><br><span class="line">end</span><br><span class="line">%&#x968F;&#x673A;&#x6253;&#x4E71;&#x987A;&#x5E8F;</span><br><span class="line">randIndex = randperm(size(data_temp,2));</span><br><span class="line">data=data_temp(:,randIndex);</span><br><span class="line">plot(data(1,:),data(2,:),&apos;o&apos;);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/MACHINE/cluster_gauss.png" alt="gauss"></p><h2 id="cicle-data-m"><a href="#cicle-data-m" class="headerlink" title="cicle_data.m"></a>cicle_data.m</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">hold on;</span><br><span class="line">axis equal;</span><br><span class="line">theta = 0:0.05:2*pi;</span><br><span class="line">x=cos(theta);</span><br><span class="line">y=sin(theta);</span><br><span class="line">%&#x692D;&#x5706;&#x65B9;&#x7A0B;(x+x0)^2/a^2+(y+y0)^2/b^2=1</span><br><span class="line">ab=[3,4,6,10;...</span><br><span class="line">    3,4,6,10];</span><br><span class="line">xy_0=[0,0,0,0;...</span><br><span class="line">    0,0,0,0];</span><br><span class="line">data_temp=zeros(2,length(theta)*size(ab,2));</span><br><span class="line">for i=1:size(ab,2)</span><br><span class="line">    data_temp(:,(i-1)*length(theta)+1:i*length(theta))=([x;y].*repmat(ab(:,i),1,length(theta)))+repmat(xy_0(:,i),1,length(theta));</span><br><span class="line">end</span><br><span class="line">%&#x968F;&#x673A;&#x6253;&#x4E71;&#x987A;&#x5E8F;</span><br><span class="line">randIndex = randperm(size(data_temp,2));</span><br><span class="line">data=data_temp(:,randIndex);</span><br><span class="line">plot(data(1,:),data(2,:),&apos;o&apos;);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/MACHINE/cluster_cicle.png" alt="cicle"></p><h2 id="mixture-data-m"><a href="#mixture-data-m" class="headerlink" title="mixture_data.m"></a>mixture_data.m</h2><p><font size="4">&#x7531;&#x4E0A;&#x9762;&#x7684;&#x56DB;&#x79CD;&#x6570;&#x636E;&#x96C6;&#x7EC4;&#x5408;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x5F62;&#x6210;&#x6DF7;&#x5408;&#x6570;&#x636E;&#x96C6;&#x3002;</font><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;close all;</span><br><span class="line">hold on;</span><br><span class="line">axis equal;</span><br><span class="line">%x1&#x7684;&#x8D77;&#x59CB;&#x548C;&#x7EC8;&#x6B62;&#x4F4D;&#x7F6E;</span><br><span class="line">x_1=2:0.1:6;</span><br><span class="line">%x1&#x7684;&#x659C;&#x7387;&#x548C;&#x622A;&#x8DDD;</span><br><span class="line">kb_1=[1;4];</span><br><span class="line">data_1=[x_1+rand(1,length(x_1))-0.5;kb_1(1)*x_1+kb_1(2)+rand(1,length(x_1))-0.5];</span><br><span class="line">%x2&#x7684;&#x8D77;&#x59CB;&#x548C;&#x7EC8;&#x6B62;&#x4F4D;&#x7F6E;</span><br><span class="line">x_2=1:0.05:7;</span><br><span class="line">%x2&#x7684;&#x659C;&#x7387;&#x548C;&#x622A;&#x8DDD;</span><br><span class="line">kb_2=[-1;12];</span><br><span class="line">data_2=[x_2+rand(1,length(x_2))-0.5;kb_2(1)*x_2+kb_2(2)+rand(1,length(x_2))-0.5];</span><br><span class="line">%&#x4EA7;&#x751F;&#x9AD8;&#x65AF;&#x6570;&#x636E;&#x96C6;</span><br><span class="line">data_3=normrnd(12,1.5,2,200);</span><br><span class="line">%&#x7EBF;&#x7684;&#x957F;&#x5EA6; </span><br><span class="line">long=[5,1];</span><br><span class="line">%&#x7EBF;&#x7684;&#x5BBD;&#x5EA6;</span><br><span class="line">wide=[1,5];</span><br><span class="line">%&#x7EBF;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</span><br><span class="line">x_0=[6,11];</span><br><span class="line">y_0=[1,1];</span><br><span class="line">%&#x6BCF;&#x4E00;&#x6761;&#x7EBF;&#x4E0A;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;</span><br><span class="line">num=[100,100];</span><br><span class="line">data_4=zeros(2,sum(num));</span><br><span class="line">for i=1:length(long)</span><br><span class="line">    if i==1</span><br><span class="line">        data_4(:,1:num(i))=[rand(1,num(i))*long(i)+x_0(i);rand(1,num(i))*wide(i)+y_0(i)];</span><br><span class="line">    else</span><br><span class="line">        data_4(:,sum(num(1:i-1))+1:sum(num(1:i)))=[rand(1,sum(num(1:i))-sum(num(1:i-1)))*long(i)+x_0(i);rand(1,sum(num(1:i))-sum(num(1:i-1)))*wide(i)+y_0(i)];</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%&#x4EA7;&#x751F;&#x566A;&#x58F0;&#x70B9;</span><br><span class="line">data_5=rand(2,38)*16;</span><br><span class="line">data_temp=[data_1,data_2,data_3,data_4,data_5];</span><br><span class="line">%&#x968F;&#x673A;&#x6253;&#x4E71;&#x987A;&#x5E8F;</span><br><span class="line">randIndex = randperm(size(data_temp,2));</span><br><span class="line">data=data_temp(:,randIndex);</span><br><span class="line">plot(data(1,:),data(2,:),&apos;o&apos;);</span><br><span class="line">hold off;</span><br></pre></td></tr></tbody></table></figure><p></p><p><img src="/images/MACHINE/cluster_mixture.png" alt="mixture"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Data Set&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="聚类方法" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>HK</title>
    <link href="https://USTCcoder.github.io/2019/04/20/Machine%20Learning_HK/"/>
    <id>https://USTCcoder.github.io/2019/04/20/Machine Learning_HK/</id>
    <published>2019-04-20T11:29:40.000Z</published>
    <updated>2019-05-11T16:57:43.914Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;</p><a id="more"></a><p>Watermelon&#x1F349;</p><blockquote><p>111111</p></blockquote><blockquote><p>2222</p></blockquote><blockquote><p>33333<br>$$x = 100 * y + z - 10 / 33 + 10 % 3$$<br>$$f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right )$$</p></blockquote><p>777</p><button>111</button><p>$$\hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx$$</p><ul><li><p>aaa</p><ul><li><p>bbb</p></li><li><p>ccc</p><ul><li><p>ddd</p></li><li><p>eee</p><ul><li>fff</li><li>ggg<ul><li>hhh<ul><li>iii<ul><li>jjj</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;HK&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="决策树" scheme="https://USTCcoder.github.io/categories/Machine-Learning/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
    
  </entry>
  
  <entry>
    <title>k近邻</title>
    <link href="https://USTCcoder.github.io/2019/03/25/Machine%20Learning_KNN/"/>
    <id>https://USTCcoder.github.io/2019/03/25/Machine Learning_KNN/</id>
    <published>2019-03-25T11:29:40.000Z</published>
    <updated>2019-05-13T04:45:29.603Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;</p><a id="more"></a><p>Watermelon&#x1F349;</p><blockquote><p>111111</p></blockquote><blockquote><p>2222</p></blockquote><blockquote><p>33333<br>$$x = 100 * y + z - 10 / 33 + 10 % 3$$<br>$$f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right )$$</p></blockquote><p>777</p><button>111</button><p>$$\hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx$$</p><ul><li><p>aaa</p><ul><li><p>bbb</p></li><li><p>ccc</p><ul><li><p>ddd</p></li><li><p>eee</p><ul><li>fff</li><li>ggg<ul><li>hhh<ul><li>iii<ul><li>jjj</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;KNN&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://USTCcoder.github.io/categories/Machine-Learning/"/>
    
      <category term="k近邻" scheme="https://USTCcoder.github.io/categories/Machine-Learning/k%E8%BF%91%E9%82%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>personal recommendation</title>
    <link href="https://USTCcoder.github.io/2019/03/22/personal%20recommendation/"/>
    <id>https://USTCcoder.github.io/2019/03/22/personal recommendation/</id>
    <published>2019-03-22T11:29:40.000Z</published>
    <updated>2019-04-12T12:17:16.140Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/BEAUTIFUL/cartoon2" alt="cartoon 2"></p><h1 id="leifengta"><a href="#leifengta" class="headerlink" title="leifengta"></a>leifengta</h1><hr><p>xxxxxxx</p><a id="more"></a><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/github.jpeg" alt="GitHub &#x56FE;&#x7247;"><br><img src="/images/github.jpeg" alt="GitHub &#x56FE;&#x7247;"></p><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#87CEFA&gt;&lt;font size=5 face=&quot;STCAIYUN&quot; color=white&gt;&lt;center&gt;五月鸣蜩,六月精阳.&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="personal recommendation" scheme="https://USTCcoder.github.io/categories/Computer-Science/personal-recommendation/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo Environment</title>
    <link href="https://USTCcoder.github.io/2019/03/22/Hexo%20GitHub1/"/>
    <id>https://USTCcoder.github.io/2019/03/22/Hexo GitHub1/</id>
    <published>2019-03-22T11:29:40.000Z</published>
    <updated>2019-05-11T14:46:10.787Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/BLOG/blog.jpg" alt="ghostknife 3"></p><p><font size="5" face="STHeiti" color="gray"><strong><em>Do you want a personal blog for yourself ?<br>Follow me, please.</em></strong></font><br><a id="more"></a></p><p><font size="5" face="STXingkai" color="red"><strong>&#x8FD9;&#x4E2A;&#x6559;&#x7A0B;&#x4E3B;&#x8981;&#x9488;&#x5BF9;&#x4E8E;Windows&#x64CD;&#x4F5C;&#x5E73;&#x53F0;&#xFF0C;&#x5982;&#x679C;&#x662F;Mac&#x6216;&#x8005;Linux&#x5E73;&#x53F0;&#x4E5F;&#x5927;&#x540C;&#x5C0F;&#x5F02;&#x3002;</strong></font></p><h1 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h1><p>&#x53BB;&#x5B98;&#x7F51;<a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a> &#x4E0B;&#x8F7D;&#x3002;<br>Node.js&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5B89;&#x88C5;hexo&#xFF0C;npm&#x5F00;&#x5934;&#x7684;&#x547D;&#x4EE4;&#x90FD;&#x4F9D;&#x8D56;&#x4E8E;Node.js .<br>&#x5982;&#x679C;&#x51FA;&#x73B0; <code>bash: nmp: command not found</code>&#x5219;&#x4EE3;&#x8868;&#x4F60;&#x7684;Node.js&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x3002;</p><hr><h1 id="Install-git"><a href="#Install-git" class="headerlink" title="Install git"></a>Install git</h1><p>&#x53BB;&#x5B98;&#x7F51;<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a> &#x4E0B;&#x8F7D;&#x3002;<br>&#x6309;&#x7167;&#x8981;&#x6C42;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x7684;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002;</p><hr><h1 id="Install-hexo"><a href="#Install-hexo" class="headerlink" title="Install hexo"></a>Install hexo</h1><h2 id="&#x5B89;&#x88C5;&#x6DD8;&#x5B9D;&#x955C;&#x50CF;"><a href="#&#x5B89;&#x88C5;&#x6DD8;&#x5B9D;&#x955C;&#x50CF;" class="headerlink" title="&#x5B89;&#x88C5;&#x6DD8;&#x5B9D;&#x955C;&#x50CF;"></a>&#x5B89;&#x88C5;&#x6DD8;&#x5B9D;&#x955C;&#x50CF;</h2><p><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><h2 id="&#x5B89;&#x88C5;hexo&#x6846;&#x67B6;"><a href="#&#x5B89;&#x88C5;hexo&#x6846;&#x67B6;" class="headerlink" title="&#x5B89;&#x88C5;hexo&#x6846;&#x67B6;"></a>&#x5B89;&#x88C5;hexo&#x6846;&#x67B6;</h2><p><code>cnpm install -g hexo-cli</code></p><h2 id="&#x5B89;&#x88C5;&#x8FDC;&#x7A0B;&#x90E8;&#x7F72;"><a href="#&#x5B89;&#x88C5;&#x8FDC;&#x7A0B;&#x90E8;&#x7F72;" class="headerlink" title="&#x5B89;&#x88C5;&#x8FDC;&#x7A0B;&#x90E8;&#x7F72;"></a>&#x5B89;&#x88C5;&#x8FDC;&#x7A0B;&#x90E8;&#x7F72;</h2><p><code>cnpm install hexo-deployer-git --save</code></p><h2 id="&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;Myblog&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x6587;&#x4EF6;&#x5939;-&#x4EE5;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;"><a href="#&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;Myblog&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x6587;&#x4EF6;&#x5939;-&#x4EE5;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;" class="headerlink" title="&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;Myblog&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x6587;&#x4EF6;&#x5939;,&#x4EE5;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;"></a>&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;Myblog&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x6587;&#x4EF6;&#x5939;,&#x4EE5;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;</h2><p><code>cd Myblog</code></p><h2 id="hexo&#x521D;&#x59CB;&#x5316;"><a href="#hexo&#x521D;&#x59CB;&#x5316;" class="headerlink" title="hexo&#x521D;&#x59CB;&#x5316;"></a>hexo&#x521D;&#x59CB;&#x5316;</h2><p><code>hexo init</code></p><hr><h1 id="Deploy-local-files-to-GitHub"><a href="#Deploy-local-files-to-GitHub" class="headerlink" title="Deploy local files to GitHub"></a>Deploy local files to GitHub</h1><h2 id="&#x521B;&#x5EFA;GitHub&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5EFA;&#x7ACB;&#x4ED3;&#x5E93;"><a href="#&#x521B;&#x5EFA;GitHub&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5EFA;&#x7ACB;&#x4ED3;&#x5E93;" class="headerlink" title="&#x521B;&#x5EFA;GitHub&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5EFA;&#x7ACB;&#x4ED3;&#x5E93;"></a>&#x521B;&#x5EFA;GitHub&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5EFA;&#x7ACB;&#x4ED3;&#x5E93;</h2><p>&#x53BB;&#x5B98;&#x7F51;<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> &#x521B;&#x5EFA;git&#x4ED3;&#x5E93;&#x65F6;&#x5019;&#xFF0C;&#x4ED3;&#x5E93;&#x7684;&#x540D;&#x79F0;&#x6709;&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x3002;<br>&#x6211;&#x7684;GitHub&#x4ED3;&#x5E93;&#x7528;&#x6237;&#x540D;&#x662F;USTCcoder,&#x90A3;&#x4E48;&#x6211;&#x521B;&#x5EFA;&#x7684;&#x4ED3;&#x5E93;&#x540D;&#x79F0;&#x5C31;&#x662F;USTCcoder.github.io,&#x6B64;&#x5904;&#x7684;&#x8B66;&#x544A;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x5DF2;&#x7ECF;&#x6709;&#x8FD9;&#x4E2A;&#x5E93;&#x4E86;&#x3002;<br><img src="/images/BLOG/repository.png" alt="repository"></p><h2 id="&#x672C;&#x673A;git&#x521D;&#x59CB;&#x8BBE;&#x7F6E;"><a href="#&#x672C;&#x673A;git&#x521D;&#x59CB;&#x8BBE;&#x7F6E;" class="headerlink" title="&#x672C;&#x673A;git&#x521D;&#x59CB;&#x8BBE;&#x7F6E;"></a>&#x672C;&#x673A;git&#x521D;&#x59CB;&#x8BBE;&#x7F6E;</h2><ul><li><p>&#x8BBE;&#x7F6E;&#x59D3;&#x540D;&#x548C;&#x90AE;&#x7BB1;&#x5730;&#x5740;</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  --global  user.name  &apos;your name&apos;</span><br><span class="line">git config  --global  user.email  &apos;your_email&apos;</span><br></pre></td></tr></tbody></table></figure></li><li><p>&#x751F;&#x6210;&#x672C;&#x5730;ssh key<br><code>ssh-keygen -t rsa -C sa231035@mail.ustc.edu.cn</code><br>-&#x5C06;&#x516C;&#x94A5;&#x653E;&#x5728;GitHub&#x4E0A;<br><img src="/images/BLOG/ssh.png" alt="ssh"><br>-&#x4F7F;&#x7528;&#x79C1;&#x4EBA;&#x5BC6;&#x94A5;&#x4E0E;GitHub&#x8FDB;&#x884C;&#x8BA4;&#x8BC1;&#x548C;&#x901A;&#x4FE1;<br><code>ssh -T git@github.com</code></p><h2 id="&#x5C06;hexo&#x548C;github&#x8FDB;&#x884C;&#x5173;&#x8054;"><a href="#&#x5C06;hexo&#x548C;github&#x8FDB;&#x884C;&#x5173;&#x8054;" class="headerlink" title="&#x5C06;hexo&#x548C;github&#x8FDB;&#x884C;&#x5173;&#x8054;"></a>&#x5C06;hexo&#x548C;github&#x8FDB;&#x884C;&#x5173;&#x8054;</h2><p><img src="/images/BLOG/url.png" alt="url"><br>&#x5C06;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x7F51;&#x7AD9;&#x5730;&#x5740;&#x5199;&#x5165;&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#x4E2D;</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/USTCcoder/USTCcoder.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><h1 id="Deploy-blogs-to-remote-locations"><a href="#Deploy-blogs-to-remote-locations" class="headerlink" title="Deploy blogs to remote locations"></a>Deploy blogs to remote locations</h1><h2 id="&#x65B0;&#x5EFA;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;"><a href="#&#x65B0;&#x5EFA;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;" class="headerlink" title="&#x65B0;&#x5EFA;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;"></a>&#x65B0;&#x5EFA;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;</h2><p><code>hexo new &quot;my first blog&quot;</code><br>&#x7136;&#x540E;&#x5728;myblog\source\_posts&#x4E2D;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;my first blog.md&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x91CC;&#x7F16;&#x8F91;&#x5373;&#x53EF;&#x3002;</p><h2 id="&#x7D20;&#x8D28;&#x4E09;&#x8FDE;"><a href="#&#x7D20;&#x8D28;&#x4E09;&#x8FDE;" class="headerlink" title="&#x7D20;&#x8D28;&#x4E09;&#x8FDE;"></a>&#x7D20;&#x8D28;&#x4E09;&#x8FDE;</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></tbody></table></figure><p>&#x5728;&#x672C;&#x5730;&#x9884;&#x89C8;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x3002;</p><h2 id="&#x63A8;&#x5230;&#x8FDC;&#x7AEF;"><a href="#&#x63A8;&#x5230;&#x8FDC;&#x7AEF;" class="headerlink" title="&#x63A8;&#x5230;&#x8FDC;&#x7AEF;"></a>&#x63A8;&#x5230;&#x8FDC;&#x7AEF;</h2><p><code>hexo d</code><br>&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5728;USTCcoder.github.io&#x4E2D;&#x770B;&#x5230;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x5566;&#xFF01;&#xFF01;&#xFF01;</p><p><font size="5" face="STXingkai" color="red"><strong>&#x5230;&#x6B64;&#x57FA;&#x672C;&#x7684;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x548C;&#x90E8;&#x7F72;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#xFF0C;<br>&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x6269;&#x5C55;&#x7684;&#x529F;&#x80FD;&#x4ECB;&#x7ECD;&#x3002;</strong></font></p><h1 id="Install-Next-theme"><a href="#Install-Next-theme" class="headerlink" title="Install Next theme"></a>Install Next theme</h1><p>&#x5728;Myblog&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x8F93;&#x5165;<br><code>git clone https://github.com/theme-next/hexo-theme-next.git themes/next</code><br>&#x5728;&#x7AD9;&#x70B9;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x4FEE;&#x6539;<br><code>theme: next</code><br>&#x7D20;&#x8D28;&#x4E09;&#x8FDE;&#x5373;&#x53EF;&#x3002;</p><hr><h1 id="&#x6269;&#x5C55;&#x529F;&#x80FD;"><a href="#&#x6269;&#x5C55;&#x529F;&#x80FD;" class="headerlink" title="&#x6269;&#x5C55;&#x529F;&#x80FD;"></a>&#x6269;&#x5C55;&#x529F;&#x80FD;</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save &#x6DFB;&#x52A0;&#x641C;&#x7D22;&#x529F;&#x80FD;</span><br><span class="line">cnpm install hexo-wordcount --save &#x6DFB;&#x52A0;&#x7EDF;&#x8BA1;&#x529F;&#x80FD;</span><br><span class="line">cnpm install hexo-helper-live2d --save cnpm install live2d-widget-model-wanko --save &#x6DFB;&#x52A0;&#x5BA0;&#x7269;</span><br><span class="line">cd themes\next git clone https://github.com/theme-next/theme-next-pace source/lib/pace &#x6DFB;&#x52A0;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x7279;&#x6548;</span><br><span class="line">cnpm install hexo-generator-feed --save &#x6DFB;&#x52A0;rss&#x529F;&#x80FD;</span><br><span class="line">cnpm uninstall hexo-generator-index --save cnpm install hexo-generator-index-pin-top --save &#x6DFB;&#x52A0;&#x535A;&#x6587;&#x7F6E;&#x9876;</span><br><span class="line">cnpm install hexo-math --save cnpm uninstall hexo-renderer-marked --save cnpm install hexo-renderer-kramed --save &#x6DFB;&#x52A0;LaTex&#x516C;&#x5F0F;&#x7F16;&#x8F91;&#x529F;&#x80FD;</span><br></pre></td></tr></tbody></table></figure><p>&#x5177;&#x4F53;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;Next&#x4E3B;&#x9898;&#x7684;&#x5B98;&#x65B9;&#x4F7F;&#x7528;&#x6587;&#x6863;<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a>&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;Personal Blog&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Hexo GitHub" scheme="https://USTCcoder.github.io/categories/Hexo-GitHub/"/>
    
    
  </entry>
  
  <entry>
    <title>Personal Experiences</title>
    <link href="https://USTCcoder.github.io/2019/03/18/Personal%20Experiences1/"/>
    <id>https://USTCcoder.github.io/2019/03/18/Personal Experiences1/</id>
    <published>2019-03-18T11:29:40.000Z</published>
    <updated>2019-04-02T04:38:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/BEAUTIFUL/landscape3" alt="landscape 3"></p><h1 id="leifengta"><a href="#leifengta" class="headerlink" title="leifengta"></a>leifengta</h1><hr><p>xxxxxxx</p><a id="more"></a><p>Welcome to [Hexo]</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#87CEFA&gt;&lt;font size=5 face=&quot;STCAIYUN&quot; color=white&gt;&lt;center&gt;冷暖自知，干净如始.&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Personal Experiences" scheme="https://USTCcoder.github.io/categories/Personal-Experiences/"/>
    
    
  </entry>
  
  <entry>
    <title>Image Processing</title>
    <link href="https://USTCcoder.github.io/2019/03/18/Image%20Processing%20/"/>
    <id>https://USTCcoder.github.io/2019/03/18/Image Processing /</id>
    <published>2019-03-18T09:29:27.000Z</published>
    <updated>2019-04-02T04:38:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/BEAUTIFUL/cartoon2" alt="cartoon 3"></p><h1 id="leifengta"><a href="#leifengta" class="headerlink" title="leifengta"></a>leifengta</h1><hr><p>xxxxxxx<br><a id="more"></a></p><h2 id="&#x675C;&#x675C;&#x7231;&#x6C64;&#x5706;"><a href="#&#x675C;&#x675C;&#x7231;&#x6C64;&#x5706;" class="headerlink" title="&#x675C;&#x675C;&#x7231;&#x6C64;&#x5706;"></a>&#x675C;&#x675C;&#x7231;&#x6C64;&#x5706;</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#87CEFA&gt;&lt;font size=5 face=&quot;STCAIYUN&quot; color=white&gt;&lt;center&gt;七月流火,八月未央.&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Image Processing" scheme="https://USTCcoder.github.io/categories/Image-Processing/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux Ubuntu</title>
    <link href="https://USTCcoder.github.io/2019/03/18/Linux%20Ubuntu1/"/>
    <id>https://USTCcoder.github.io/2019/03/18/Linux Ubuntu1/</id>
    <published>2019-03-18T09:19:54.000Z</published>
    <updated>2019-04-02T04:38:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/BEAUTIFUL/cartoon2" alt="cartoon 4"></p><h1 id="leifengta"><a href="#leifengta" class="headerlink" title="leifengta"></a>leifengta</h1><hr><p>xxxxxxx</p><a id="more"></a><p>&#x2014;&#x2014;&#x2014;&#x2014;- &#x76EE;&#x5F55;<br>life is short<br>you need python</p><p>&#x2014;&#x2014;&#x2014;&#x2014;- &#x53C2;&#x8003;&#x6587;&#x732E;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#87CEFA&gt;&lt;font size=5 face=&quot;STCAIYUN&quot; color=white&gt;&lt;center&gt;十二月是白雪飘落的永远.&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Linux Ubuntu" scheme="https://USTCcoder.github.io/categories/Linux-Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>Turing Reward in 2018</title>
    <link href="https://USTCcoder.github.io/2018/03/22/TuringReward-2018/"/>
    <id>https://USTCcoder.github.io/2018/03/22/TuringReward-2018/</id>
    <published>2018-03-22T11:29:40.000Z</published>
    <updated>2019-05-11T13:31:55.922Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;&#x2003;2019 &#x5E74; 3 &#x6708; 27 &#x65E5;&#xFF0C;ACM &#x5BA3;&#x5E03;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x4F4D;&#x5927;&#x725B; Yoshua Bengio&#x3001;Yann LeCun&#x3001;Geoffrey Hinton &#x56E0;&#x201C;&#x5728;&#x6982;&#x5FF5;&#x548C;&#x5DE5;&#x7A0B;&#x65B9;&#x9762;&#x4F7F;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6210;&#x4E3A;&#x8BA1;&#x7B97;&#x7684;&#x5173;&#x952E;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x7684;&#x7A81;&#x7834;&#x201D;&#x83B7;&#x5F97;&#x4E86; 2018 &#x5E74;&#x7684;&#x56FE;&#x7075;&#x5956;&#x3002;&#x8FD1;&#x5E74;&#x6765;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;&#x4E00;&#x76F4;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x3001;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x3001;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x548C;&#x673A;&#x5668;&#x4EBA;&#x6280;&#x672F;&#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x4E2D;&#x60CA;&#x4EBA;&#x7A81;&#x7834;&#x7684;&#x539F;&#x56E0;&#x3002;<a id="more"></a>&#x5728; ACM &#x7684;&#x516C;&#x544A;&#x4E2D;&#x662F;&#x8FD9;&#x6837;&#x5199;&#x9053;&#x7684;&#xFF1A;&#x867D;&#x7136;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#x5F15;&#x5165;&#x4E86;&#x4EBA;&#x5DE5;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;&#x5E2E;&#x52A9;&#x8BA1;&#x7B97;&#x673A;&#x8BC6;&#x522B;&#x6A21;&#x5F0F;&#x548C;&#x6A21;&#x62DF;&#x4EBA;&#x7C7B;&#x667A;&#x80FD;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x4F46;&#x5230;&#x4E86; 21 &#x4E16;&#x7EAA;&#x521D;&#xFF0C;LeCun&#x3001;Hinton &#x548C; Bengio &#x4ECD;&#x575A;&#x6301;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x5C0F;&#x56E2;&#x4F53;&#x3002;&#x867D;&#x7136;&#x4ED6;&#x4EEC;&#x91CD;&#x65B0;&#x70B9;&#x71C3;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x793E;&#x533A;&#x5BF9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5174;&#x8DA3;&#x7684;&#x52AA;&#x529B;&#x5728;&#x6700;&#x521D;&#x66FE;&#x906D;&#x5230;&#x6000;&#x7591;&#xFF0C;&#x4F46;&#x5176;&#x60F3;&#x6CD5;&#x5F15;&#x53D1;&#x4E86;&#x91CD;&#x5927;&#x7684;&#x6280;&#x672F;&#x8FDB;&#x6B65;&#xFF0C;&#x5176;&#x65B9;&#x6CD5;&#x73B0;&#x5728;&#x5DF2;&#x6210;&#x4E3A;&#x8BE5;&#x9886;&#x57DF;&#x7684;&#x4E3B;&#x5BFC;&#x8303;&#x4F8B;&#x3002;&#x6B64;&#x524D;&#x4ED6;&#x4EEC;&#x5728;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x9886;&#x57DF;&#x7684;&#x5730;&#x4F4D;&#x65E9;&#x5DF2;&#x662F;&#x65E0;&#x4EBA;&#x4E0D;&#x77E5;&#xFF0C;&#x5C3D;&#x7BA1;&#x4E09;&#x4EBA;&#x8D70;&#x5411;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x4ECD;&#x7136;&#x662F;&#x591A;&#x5E74;&#x7684;&#x5408;&#x4F5C;&#x4F19;&#x4F34;&#x548C;&#x631A;&#x53CB;&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;&#x4E09;&#x4F4D;&#x6240;&#x4F5C;&#x51FA;&#x7684;&#x4E3B;&#x8981;&#x8D21;&#x732E;&#xFF1A;<br><strong>&#x6770;&#x5F17;&#x91CC;&#xB7;&#x8F9B;&#x987F;(Geoffery Hinton)</strong><br><img src="/images/TURING/hinton.jpeg" alt="Geoffery Hinton"><br>&#x2003;&#x2003;<strong>&#x53CD;&#x5411;&#x4F20;&#x64AD;(Back Propagation)</strong>&#xFF1A;&#x5728; 1986 &#x5E74;&#x4E0E; David Rumelhart &#x548C; Ronald Williams &#x5171;&#x540C;&#x64B0;&#x5199;&#x7684; &#x201C;Learning Internal Representations by Error Propagation&#x201D; &#x4E00;&#x6587;&#x4E2D;&#xFF0C;Hinton &#x8BC1;&#x660E;&#x4E86;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5141;&#x8BB8;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x5185;&#x90E8;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;&#x4F7F;&#x7528;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6210;&#x4E3A;&#x53EF;&#x80FD;&#x7F51;&#x7EDC;&#x89E3;&#x51B3;&#x4EE5;&#x524D;&#x88AB;&#x8BA4;&#x4E3A;&#x8D85;&#x51FA;&#x5176;&#x8303;&#x56F4;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5982;&#x4ECA;&#xFF0C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x662F;&#x5927;&#x591A;&#x6570;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6807;&#x51C6;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x73BB;&#x5C14;&#x5179;&#x66FC;&#x673A;(Boltzmann Machines)</strong>&#xFF1A;1983 &#x5E74;&#xFF0C;Hinton &#x4E0E; Terrence Sejnowski &#x4E00;&#x8D77;&#xFF0C;&#x53D1;&#x660E;&#x4E86;&#x73BB;&#x5C14;&#x5179;&#x66FC;&#x673A;&#xFF0C;&#x8FD9;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x80FD;&#x591F;&#x5B66;&#x4E60;&#x4E0D;&#x5C5E;&#x4E8E;&#x8F93;&#x5165;&#x6216;&#x8F93;&#x51FA;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x5185;&#x90E8;&#x8868;&#x793A;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E4B;&#x4E00;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x5BF9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6539;&#x8FDB;(Improvement of Convolutional Neural Network)</strong>&#xFF1A;2012 &#x5E74;&#xFF0C;Hinton &#x548C;&#x4ED6;&#x7684;&#x5B66;&#x751F; Alex Krizhevsky &#x4EE5;&#x53CA; Ilya Sutskever &#x901A;&#x8FC7; Rectified Linear Neurons &#x548C; Dropout Regularization &#x6539;&#x8FDB;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5E76;&#x5728;&#x8457;&#x540D;&#x7684; ImageNet &#x8BC4;&#x6D4B;&#x4E2D;&#x5C06;&#x5BF9;&#x8C61;&#x8BC6;&#x522B;&#x7684;&#x9519;&#x8BEF;&#x7387;&#x51CF;&#x534A;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x6380;&#x8D77;&#x4E00;&#x573A;&#x9769;&#x547D;&#x3002; </p><p><strong>&#x7EA6;&#x4E66;&#x4E9A;&#xB7;&#x672C;&#x5409;&#x5965;(Yoshua Bengio)</strong><br><img src="/images/TURING/bengio.jpeg" alt="Yoshua Bengio"><br>&#x2003;&#x2003;<strong>&#x5E8F;&#x5217;&#x7684;&#x6982;&#x7387;&#x6A21;&#x578B;(Probabilistic models of sequences)</strong>&#xFF1A;&#x5728; 20 &#x4E16;&#x7EAA; 90 &#x5E74;&#x4EE3;&#xFF0C;Bengio &#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0E;&#x5E8F;&#x5217;&#x7684;&#x6982;&#x7387;&#x6A21;&#x578B;&#x76F8;&#x7ED3;&#x5408;&#xFF0C;&#x4F8B;&#x5982;&#x9690;&#x9A6C;&#x5C14;&#x53EF;&#x592B;&#x6A21;&#x578B;&#x3002;&#x8FD9;&#x4E9B;&#x60F3;&#x6CD5;&#x88AB;&#x7EB3;&#x5165; AT&#xFF06;T / NCR &#x7528;&#x4E8E;&#x9605;&#x8BFB;&#x624B;&#x5199;&#x652F;&#x7968;&#x4E2D;&#xFF0C;&#x88AB;&#x8BA4;&#x4E3A;&#x662F; 20 &#x4E16;&#x7EAA; 90 &#x5E74;&#x4EE3;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7814;&#x7A76;&#x7684;&#x5DC5;&#x5CF0;&#x4E4B;&#x4F5C;&#x3002;&#x73B0;&#x4EE3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x7CFB;&#x7EDF;&#x4E5F;&#x662F;&#x8FD9;&#x4E9B;&#x6982;&#x5FF5;&#x7684;&#x6269;&#x5C55;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x9AD8;&#x7EF4;&#x8BCD;&#x6C47;&#x5D4C;&#x5165;&#x548C;&#x5173;&#x6CE8;(High-dimensional word embeddings and attention)</strong>&#xFF1A;2000 &#x5E74;&#xFF0C;Bengio &#x64B0;&#x5199;&#x4E86;&#x5177;&#x6709;&#x91CC;&#x7A0B;&#x7891;&#x610F;&#x4E49;&#x7684;&#x8BBA;&#x6587;&#x201C;A Neural Probabilistic Language Model&#x201D;&#xFF0C;&#x5B83;&#x5F15;&#x5165;&#x4E86;&#x9AD8;&#x7EF4;&#x8BCD;&#x5411;&#x91CF;&#x4F5C;&#x4E3A;&#x8BCD;&#x4E49;&#x7684;&#x8868;&#x793A;&#x3002;Bengio &#x7684;&#x89C1;&#x89E3;&#x5BF9;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x4EFB;&#x52A1;&#x4EA7;&#x751F;&#x4E86;&#x5DE8;&#x5927;&#x800C;&#x6301;&#x4E45;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x5305;&#x62EC;&#x8BED;&#x8A00;&#x7FFB;&#x8BD1;&#x3001;&#x95EE;&#x7B54;&#x548C;&#x89C6;&#x89C9;&#x95EE;&#x7B54;&#x3002;&#x4ED6;&#x7684;&#x56E2;&#x961F;&#x8FD8;&#x5F15;&#x5165;&#x4E86;&#x6CE8;&#x610F;&#x529B;&#x673A;&#x5236;&#xFF0C;&#x8FD9;&#x79CD;&#x673A;&#x5236;&#x4FC3;&#x4F7F;&#x4E86;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;&#x7A81;&#x7834;&#xFF0C;&#x5E76;&#x6784;&#x6210;&#x4E86;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x5E8F;&#x5217;&#x5904;&#x7406;&#x7684;&#x5173;&#x952E;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x751F;&#x6210;&#x5F0F;&#x5BF9;&#x6297;&#x7F51;&#x7EDC;(Generative Adversarial Networks)</strong>&#xFF1A;&#x81EA; 2010 &#x5E74;&#x4EE5;&#x6765;&#xFF0C;Bengio &#x5173;&#x4E8E;&#x751F;&#x6210;&#x6027;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x8BBA;&#x6587;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x4E0E; Ian Goodfellow &#x5171;&#x540C;&#x5F00;&#x53D1;&#x7684;&#x751F;&#x6210;&#x6027;&#x5BF9;&#x6297;&#x7F51;&#x7EDC;&#xFF08;GAN&#xFF09;&#xFF0C;&#x5F15;&#x53D1;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;&#x5B66;&#x7684;&#x9769;&#x547D;&#x3002; </p><p><strong>&#x6768;&#x7ACB;&#x6606;(Yann LeCun)</strong><br><img src="/images/TURING/lecun.jpeg" alt="Yann LeCun"><br>&#x2003;&#x2003;<strong>&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;(Convolutional Neural Networks)</strong>&#xFF1A;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#xFF0C;LeCun &#x5F00;&#x53D1;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x73B0;&#x5DF2;&#x6210;&#x4E3A;&#x8BE5;&#x9886;&#x57DF;&#x7684;&#x57FA;&#x672C;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x3002;&#x9664;&#x4E86;&#x5176;&#x4ED6;&#x4F18;&#x70B9;&#x4E4B;&#x5916;&#xFF0C;&#x5B83;&#x8FD8;&#x5177;&#x6709;&#x4F7F;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x66F4;&#x6709;&#x6548;&#x7684;&#x5FC5;&#x8981;&#x6027;&#x3002;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#x540E;&#x671F;&#xFF0C;&#x591A;&#x4F26;&#x591A;&#x5927;&#x5B66;&#x548C;&#x8D1D;&#x5C14;&#x5B9E;&#x9A8C;&#x5BA4;&#x5DE5;&#x4F5C;&#x671F;&#x95F4;&#xFF0C;LeCun &#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x5728;&#x624B;&#x5199;&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x4E0A;&#x8BAD;&#x7EC3;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7CFB;&#x7EDF;&#x7684;&#x4EBA;&#x3002;&#x5982;&#x4ECA;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4EE5;&#x53CA;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x3001;&#x8BED;&#x97F3;&#x5408;&#x6210;&#x3001;&#x56FE;&#x50CF;&#x5408;&#x6210;&#x548C;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x7684;&#x884C;&#x4E1A;&#x6807;&#x51C6;&#x3002;&#x5B83;&#x4EEC;&#x7528;&#x4E8E;&#x5404;&#x79CD;&#x5E94;&#x7528;&#xFF0C;&#x5305;&#x62EC;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x3001;&#x533B;&#x5B66;&#x56FE;&#x50CF;&#x5206;&#x6790;&#x3001;&#x8BED;&#x97F3;&#x6FC0;&#x6D3B;&#x52A9;&#x624B;&#x548C;&#x4FE1;&#x606F;&#x8FC7;&#x6EE4;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x6539;&#x8FDB;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;(Improved Back Propagation Algorithms)</strong>&#xFF1A;LeCun &#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x65E9;&#x671F;&#x7684;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5; backprop&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x53D8;&#x5206;&#x539F;&#x7406;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x4E86;&#x7B80;&#x6D01;&#x7684;&#x63A8;&#x5BFC;&#x3002;&#x4ED6;&#x7684;&#x5DE5;&#x4F5C;&#x8BA9;&#x52A0;&#x5FEB;&#x4E86;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#xFF0C;&#x5305;&#x62EC;&#x63CF;&#x8FF0;&#x4E24;&#x79CD;&#x52A0;&#x901F;&#x5B66;&#x4E60;&#x65F6;&#x95F4;&#x7684;&#x7B80;&#x5355;&#x65B9;&#x6CD5;&#x3002; </p><p>&#x2003;&#x2003;<strong>&#x62D3;&#x5BBD;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8303;&#x56F4;(Widening the Range of Neural Networks)</strong>&#xFF1A;LeCun &#x8FD8;&#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x66F4;&#x4E3A;&#x5E7F;&#x6CDB;&#x4EFB;&#x52A1;&#x7684;&#x8BA1;&#x7B97;&#x6A21;&#x578B;&#xFF0C;&#x5176;&#x65E9;&#x671F;&#x5DE5;&#x4F5C;&#x73B0;&#x5DF2;&#x6210;&#x4E3A; AI &#x7684;&#x57FA;&#x7840;&#x6982;&#x5FF5;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x9886;&#x57DF;&#xFF0C;&#x4ED6;&#x7814;&#x7A76;&#x4E86;&#x5982;&#x4F55;&#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5B66;&#x4E60;&#x5206;&#x5C42;&#x7279;&#x5F81;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x4E2A;&#x7406;&#x5FF5;&#x73B0;&#x5728;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8BB8;&#x591A;&#x8BC6;&#x522B;&#x4EFB;&#x52A1;&#x4E2D;&#x3002;&#x4E0E; L&#xE9;onBottou &#x4E00;&#x8D77;&#xFF0C;&#x4ED6;&#x8FD8;&#x63D0;&#x51FA;&#x4E86;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x4E3A;&#x590D;&#x6742;&#x7684;&#x6A21;&#x5757;&#x7F51;&#x7EDC;&#xFF0C;&#x5176;&#x4E2D;&#x901A;&#x8FC7;&#x81EA;&#x52A8;&#x533A;&#x5206;&#x6765;&#x6267;&#x884C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#xFF0C;&#x76EE;&#x524D;&#x5728;&#x6BCF;&#x4E2A;&#x73B0;&#x4EE3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x8F6F;&#x4EF6;&#x4E2D;&#x5F97;&#x5230;&#x4F7F;&#x7528;&#x3002;&#x4ED6;&#x4EEC;&#x8FD8;&#x63D0;&#x51FA;&#x4E86;&#x53EF;&#x4EE5;&#x64CD;&#x4F5C;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x67B6;&#x6784;&#xFF0C;&#x5982;&#x56FE;&#x5F62;&#x3002; &#x5728;&#x300A;&#x8FDE;&#x7EBF;&#x300B;&#x6742;&#x5FD7;&#x7684;&#x62A5;&#x9053;&#x4E2D;&#xFF0C;Geoffery Hinton &#x88AB;&#x95EE;&#x53CA;&#x83B7;&#x5F97;&#x56FE;&#x9886;&#x5956;&#x7684;&#x610F;&#x4E49;&#x65F6;&#xFF0C;&#x4ED6;&#x8868;&#x793A;&#x5341;&#x5206;&#x60CA;&#x8BB6;&#xFF0C;&#x201C;&#x6211;&#x731C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x73B0;&#x5728;&#x662F;&#x53D7;&#x4EBA;&#x5C0A;&#x656C;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4ED6;&#x770B;&#x6765;&#x56FE;&#x7075;&#x5C06;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E2D;&#x6700;&#x503C;&#x5F97;&#x5C0A;&#x656C;&#x7684;&#x5B66;&#x79D1;&#x4E86;&#x3002; &#x636E;&#x4E86;&#x89E3;&#xFF0C;&#x56FE;&#x7075;&#x5956;&#x7531; ACM &#x4E8E; 1966 &#x5E74;&#x8BBE;&#x7F6E;&#xFF0C;&#x6BCF;&#x5E74;&#x9881;&#x53D1;&#x4E00;&#x6B21;&#xFF0C;&#x8BBE;&#x7ACB;&#x76EE;&#x7684;&#x4E4B;&#x4E00;&#x662F;&#x7EAA;&#x5FF5;&#x8457;&#x540D;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x5148;&#x9A71;&#x827E;&#x4F26; &#x2022; &#x56FE;&#x7075;&#xFF08;Alan Turing&#xFF09;&#xFF0C;&#x4ED6;&#x5728; 20 &#x4E16;&#x7EAA; 30 &#x5E74;&#x4EE3;&#x3001;40 &#x5E74;&#x4EE3;&#x548C; 50 &#x5E74;&#x4EE3;&#x5960;&#x5B9A;&#x4E86;&#x8BA1;&#x7B97;&#x548C;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x7684;&#x65E9;&#x671F;&#x57FA;&#x7840;&#x3002; &#x56FE;&#x7075;&#x5956;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x9886;&#x57DF;&#x7684;&#x6700;&#x9AD8;&#x5956;&#x3002;&#x83B7;&#x5956;&#x8005;&#x5FC5;&#x987B;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x9886;&#x57DF;&#x5177;&#x6709;&#x6301;&#x4E45;&#x91CD;&#x5927;&#x7684;&#x5148;&#x8FDB;&#x6027;&#x6280;&#x672F;&#x8D21;&#x732E;&#x3002;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x9886;&#x57DF;&#x7684;&#x5148;&#x9A71;&#x9A6C;&#x6587; &#x2022; &#x660E;&#x65AF;&#x57FA;&#xFF08;Marvin Lee Minsky&#xFF09;&#x3001;&#x7EA6;&#x7FF0; &#x2022; &#x9EA6;&#x5361;&#x9521;&#xFF08;John McCarthy&#xFF09;&#x3001;&#x827E;&#x4F26; &#x2022; &#x7EBD;&#x5384;&#x5C14;&#xFF08;Allen Newell&#xFF09;&#x548C;&#x53F8;&#x9A6C;&#x8D3A;&#xFF08;Herbert Alexander Simon&#xFF09;&#x7B49;&#x4EBA;&#x90FD;&#x66FE;&#x7ECF;&#x83B7;&#x5956;&#x3002;&#x534E;&#x4EBA;&#x79D1;&#x5B66;&#x5BB6;&#x59DA;&#x671F;&#x667A; 2000 &#x5E74;&#x56E0;&#x4E3A;&#x4F2A;&#x968F;&#x673A;&#x6570;&#x751F;&#x6210;&#x7B49;&#x8BA1;&#x7B97;&#x9886;&#x57DF;&#x7684;&#x91CD;&#x8981;&#x8D21;&#x732E;&#x83B7;&#x5956;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;DEEP LEARNING&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="Turing Reward" scheme="https://USTCcoder.github.io/categories/Computer-Science/Turing-Reward/"/>
    
    
  </entry>
  
  <entry>
    <title>Turing Reward in 2017</title>
    <link href="https://USTCcoder.github.io/2018/03/22/TuringReward-2017/"/>
    <id>https://USTCcoder.github.io/2018/03/22/TuringReward-2017/</id>
    <published>2018-03-22T11:29:40.000Z</published>
    <updated>2019-05-11T13:21:14.540Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2003;&#x2003;2018 &#x5E74; 3 &#x6708; 21 &#x65E5;&#xFF0C;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#xFF08;ACM&#xFF09;&#x5C06;2017&#x5E74;&#x56FE;&#x7075;&#x5956;&#x6388;&#x4E88;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x524D;&#x6821;&#x957F;&#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;&#xFF08;John L. Hennessy&#xFF09;&#x548C;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x9000;&#x4F11;&#x6559;&#x6388;&#x5927;&#x536B;&#xB7;&#x5E15;&#x7279;&#x68EE;&#xFF08;David A. Patterson&#xFF09;&#xFF0C;&#x4EE5;&#x8868;&#x5F70;&#x4ED6;&#x4EEC;&#x5F00;&#x521B;&#x4E86;&#x4E00;&#x79CD;&#x7CFB;&#x7EDF;&#x7684;&#x3001;&#x5B9A;&#x91CF;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8BBE;&#x8BA1;&#x548C;&#x8BC4;&#x4EF7;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#xFF0C;&#x5E76;&#x5BF9;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x884C;&#x4E1A;&#x4EA7;&#x751F;&#x4E86;&#x6301;&#x4E45;&#x7684;&#x5F71;&#x54CD;&#x3002;</p><a id="more"></a><p><img src="/images/TURING/hennessyandpatterson.jpeg" alt="Group photo"></p><p>&#x2003;&#x2003;&#x964D;&#x4F4E;&#x5904;&#x7406;&#x5668;&#x590D;&#x6742;&#x6027;&#x7684;&#x6982;&#x5FF5;&#x67B6;&#x6784;&#x7814;&#x7A76;&#x53EF;&#x4EE5;&#x8FFD;&#x6EAF;&#x5230;1960&#x5E74;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7531;IBM&#x8D44;&#x52A9;&#x7684;801&#x9879;&#x76EE;&#xFF0C;&#x7531;&#x8F69;&#x5C3C;&#x8BD7;&#x548C;&#x5E15;&#x7279;&#x68EE;&#x8D1F;&#x8D23;&#x3002;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x548C;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x90FD;&#x5728;&#x5927;&#x529B;&#x7814;&#x7A76;RISC&#x67B6;&#x6784;&#x7684;&#x53EF;&#x884C;&#x6027;&#x65B9;&#x6CD5;,&#x63A8;&#x5E7F;&#x5176;&#x6982;&#x5FF5;,&#x5E76;&#x4ECB;&#x7ECD;&#x7ED9;&#x5B66;&#x672F;&#x754C;&#x548C;&#x4EA7;&#x4E1A;&#x754C;&#x3002;RISC&#x65B9;&#x6CD5;&#x4E0D;&#x540C;&#x4E8E;&#x5F53;&#x65F6;&#x6D41;&#x884C;&#x7684;&#x590D;&#x6742;&#x6307;&#x4EE4;&#x96C6;&#x8BA1;&#x7B97;&#x673A;(CISC)&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x7EC4;&#x7B80;&#x5355;&#x548C;&#x901A;&#x7528;&#x7684;&#x6307;&#x4EE4;(&#x8BA1;&#x7B97;&#x673A;&#x5FC5;&#x987B;&#x6267;&#x884C;&#x7684;&#x529F;&#x80FD;)&#xFF0C;&#x9700;&#x8981;&#x7684;&#x6676;&#x4F53;&#x7BA1;&#x6570;&#x91CF;&#x6BD4;&#x590D;&#x6742;&#x6307;&#x4EE4;&#x96C6;&#x5C11;&#xFF0C;&#x5E76;&#x4E14;&#x51CF;&#x5C11;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x5FC5;&#x987B;&#x6267;&#x884C;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x3002;</p><p>&#x2003;&#x2003;&#x5E15;&#x7279;&#x68EE;&#x7684;&#x4F2F;&#x514B;&#x5229;&#x56E2;&#x961F;&#x521B;&#x9020;&#x4E86;RISC&#x8FD9;&#x4E2A;&#x8BCD;&#xFF0C;&#x5E76;&#x5728;1982&#x5E74;&#x5EFA;&#x7ACB;&#x5E76;&#x6F14;&#x793A;&#x4E86;&#x4ED6;&#x4EEC;&#x7684;RISC-1&#x578B;&#x5904;&#x7406;&#x5668;&#x3002;RISC-1&#x578B;&#x5904;&#x7406;&#x5668;&#x91C7;&#x7528;&#x4E86;44000&#x4E2A;&#x6676;&#x4F53;&#x7BA1;&#x4E2D;&#xFF0C;&#x5176;&#x6027;&#x80FD;&#x8981;&#x4F18;&#x4E8E;&#x4F20;&#x7EDF;&#x7684;CISC&#x8BBE;&#x8BA1;&#xFF0C;&#x540E;&#x8005;&#x7684;&#x5B9E;&#x73B0;&#x5F80;&#x5F80;&#x9700;&#x8981;100,000&#x4E2A;&#x6676;&#x4F53;&#x7BA1;&#x3002;&#x8F69;&#x5C3C;&#x8BD7;&#x4E8E;1984&#x5E74;&#x8054;&#x5408;&#x521B;&#x7ACB;&#x4E86;MIPS&#x7535;&#x8111;&#x7CFB;&#x7EDF;&#x516C;&#x53F8;&#xFF0C;&#x5C06;&#x65AF;&#x5766;&#x798F;&#x56E2;&#x961F;&#x7684;&#x5DE5;&#x4F5C;&#x5E02;&#x573A;&#x5316;&#x3002;&#x540E;&#x6765;&#xFF0C;&#x4F2F;&#x514B;&#x5229;&#x56E2;&#x961F;&#x7684;&#x7814;&#x7A76;&#x6210;&#x679C;&#x901A;&#x8FC7;Sun Microsystems&#x516C;&#x53F8;&#x7684;SPARC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x67B6;&#x6784;&#x5546;&#x4E1A;&#x5316;&#x3002;</p><p>&#x2003;&#x2003;&#x5C3D;&#x7BA1;&#x8BB8;&#x591A;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x5E08;&#x6700;&#x521D;&#x5BF9;RISC&#x6301;&#x6000;&#x7591;&#x6001;&#x5EA6;&#xFF0C;&#x4F46;MIPS&#x548C;SPARC&#x5E02;&#x573A;&#x5316;&#x7684;&#x6210;&#x529F;&#xFF0C;RISC&#x8BBE;&#x8BA1;&#x8F83;&#x4F4E;&#x7684;&#x751F;&#x4EA7;&#x6210;&#x672C;&#xFF0C;&#x4EE5;&#x53CA;&#x66F4;&#x591A;&#x7684;&#x7814;&#x7A76;&#x8FDB;&#x5C55;&#xFF0C;&#x4F7F;RISC&#x5F97;&#x5230;&#x4E86;&#x4E1A;&#x754C;&#x7684;&#x5E7F;&#x6CDB;&#x63A5;&#x7EB3;&#x3002;&#x5230;20&#x4E16;&#x7EAA;90&#x5E74;&#x4EE3;&#x4E2D;&#x671F;&#xFF0C;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x5DF2;&#x7ECF;&#x5728;&#x6574;&#x4E2A;&#x9886;&#x57DF;&#x5360;&#x636E;&#x4E3B;&#x5BFC;&#x5730;&#x4F4D;&#x3002;</p><p><strong>&#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;(John L. Hennessy)</strong></p><p><img src="/images/TURING/hennessy.jpeg" alt="John L. Hennessy"></p><p>&#x2003;&#x2003;&#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;&#xFF0C;&#x4E3A; MIPS &#x79D1;&#x6280;&#x516C;&#x53F8;&#x521B;&#x59CB;&#x4EBA;&#xFF0C;&#x7B2C;&#x5341;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6821;&#x957F;&#x3001;Alphabet&#x516C;&#x53F8;&#x8463;&#x4E8B;&#x957F;&#x3002;</p><p>&#x2003;&#x2003;Hennessy&#x51FA;&#x751F;&#x4E8E;1953&#x5E74;&#x3002;</p><p>&#x2003;&#x2003;1973&#x5E74;&#xFF0C;&#x4ED6;&#x4ECE;&#x7EF4;&#x62C9;&#x8BFA;&#x74E6;&#x5927;&#x5B66;&#x83B7;&#x53D6;&#x7535;&#x673A;&#x5DE5;&#x7A0B;&#x5B66;&#x58EB;&#x5B66;&#x4F4D;&#x3002;</p><p>&#x2003;&#x2003;1975&#x5E74;&#x4EE5;&#x53CA;1977&#x5E74;&#xFF0C;&#x5206;&#x522B;&#x4ECE;&#x7EBD;&#x7EA6;&#x77F3;&#x6EAA;&#x5927;&#x5B66;&#x83B7;&#x53D6;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7855;&#x58EB;&#x53CA;&#x535A;&#x58EB;&#x5B66;&#x4F4D;&#x3002;</p><p>&#x2003;&#x2003;1977&#x5E74;&#x6210;&#x4E3A;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x7684;&#x6559;&#x5E08;&#x3002;</p><p>&#x2003;&#x2003;1981&#x5E74;&#xFF0C;&#x4ED6;&#x5F00;&#x59CB;&#x8FDB;&#x884C;MIPS&#x9879;&#x76EE;&#xFF0C;&#x5E76;&#x7814;&#x7A76;RISC&#x5904;&#x7406;&#x5668;&#x3002;</p><p>&#x2003;&#x2003;1984&#x5E74;&#xFF0C;&#x4ED6;&#x5229;&#x7528;&#x5E74;&#x5EA6;&#x4F11;&#x5047;&#x7684;&#x65F6;&#x95F4;&#x521B;&#x5EFA;&#x4E86; MIPS Computer Systems Inc.&#xFF0C;&#x5C06;&#x4ED6;&#x7814;&#x7A76;&#x5F00;&#x53D1;&#x7684;&#x6280;&#x672F;&#x8FDB;&#x884C;&#x5546;&#x4E1A;&#x5316;&#x3002;</p><p>&#x2003;&#x2003;1987&#x5E74;&#xFF0C;&#x4ED6;&#x6210;&#x4E3A;&#x7535;&#x6C14;&#x5DE5;&#x7A0B;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7684; Willard &#x548C; Inez Kerr Bell &#x6559;&#x6388;&#x3002;</p><p>&#x2003;&#x2003;1989&#x5E74;&#x5230;1993&#x5E74;&#xFF0C;Hennessy&#x62C5;&#x4EFB;&#x4E86;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x5B9E;&#x9A8C;&#x5BA4;&#x4E3B;&#x4EFB;&#x3002;</p><p>&#x2003;&#x2003;1994&#x5E74;&#x5230;1996&#x5E74;&#xFF0C;&#x4ED6;&#x66FE;&#x62C5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7CFB;&#x4E3B;&#x4EFB;&#x3002;</p><p>&#x2003;&#x2003;1996&#x5E74;&#x5230;1999&#x5E74;&#xFF0C;&#x4ED6;&#x62C5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x5DE5;&#x7A0B;&#x5B66;&#x9662;&#x9662;&#x957F;&#x3002;</p><p>&#x2003;&#x2003;1999&#x5E74;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6821;&#x957F;&#x683C;&#x54C8;&#x5FB7;&#xB7;&#x5361;&#x65AF;&#x5E15;&#xFF08;Gerhard Casper&#xFF09;&#x4EFB;&#x547D;Hennessy&#x63A5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6559;&#x52A1;&#x957F;&#x3002;</p><p>&#x2003;&#x2003;&#x968F;&#x540E; 2000&#x5E74;&#x5361;&#x65AF;&#x5E15;&#x5378;&#x4EFB;&#x540E;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x8463;&#x4E8B;&#x4F1A;&#x4EFB;&#x547D;Hennessy&#x63A5;&#x66FF;&#x5361;&#x65AF;&#x5E15;&#x51FA;&#x4EFB;&#x6821;&#x957F;&#x4E00;&#x804C;&#xFF0C;&#x5E76;&#x4E00;&#x76F4;&#x5EF6;&#x7EED;&#x5230; 2016&#x5E74;&#x3002;&#x5728;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x65AF;&#x5766;&#x798F;&#x5B8C;&#x6210;&#x4E86;&#x4ECE;&#x4E00;&#x4E2A;&#x5730;&#x533A;&#x6027;&#x6559;&#x80B2;&#x673A;&#x6784;&#x5230;&#x4E16;&#x754C;&#x9876;&#x7EA7;&#x5927;&#x5B66;&#x7684;&#x8715;&#x53D8;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x5916;&#x56F4;&#x7684;&#x7845;&#x8C37;&#x4E5F;&#x6210;&#x4E3A;&#x4E86;&#x4E16;&#x754C;&#x521B;&#x65B0;&#x7684;&#x5F15;&#x64CE;&#xFF0C;&#x800C;Hennessy&#x6559;&#x6388;&#x5219;&#x6210;&#x4E3A;&#x516C;&#x8BA4;&#x7684;&#x300C;&#x7845;&#x8C37;&#x6559;&#x7236;&#x300D;&#x3002;</p><p>&#x2003;&#x2003;&#x6B64;&#x5916;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;Hennessy&#x4ECE;2004&#x5E74;&#x8D77;&#x4FBF;&#x52A0;&#x5165;&#x4E86;Google&#xFF08;&#x540E;&#x6765;&#x7684;Alphabet&#x516C;&#x53F8;&#xFF09;&#x7684;&#x8463;&#x4E8B;&#x4F1A;&#xFF0C;&#x5E76;&#x4E8E;2007&#x5E74;&#x62C5;&#x4EFB;&#x72EC;&#x7ACB;&#x8463;&#x4E8B;&#x3002;</p><p>&#x2003;&#x2003;&#x5728; 2018&#x5E74; 2 &#x6708;&#xFF0C;&#x4F34;&#x968F;&#x7740; Alphabet &#x516C;&#x53F8;&#xFF08;Google &#x7684;&#x6BCD;&#x516C;&#x53F8;&#xFF09;&#x53D1;&#x5E03; 2017&#x5E74;&#x8D22;&#x62A5;&#xFF0C;&#x8FD8;&#x540C;&#x65F6;&#x5BA3;&#x5E03; 66 &#x5C81;&#x7684;Hennessy&#x4E3A; Alphabet &#x7684;&#x7B2C;&#x4E09;&#x4EFB;&#x8463;&#x4E8B;&#x957F;&#x3002;&#xFF08;&#x96F7;&#x950B;&#x7F51;&#x66FE;&#x7ECF;&#x6709;&#x8BE6;&#x7EC6;&#x62A5;&#x9053;&#xFF1A;&#x5168;&#x5E74;&#x8425;&#x6536;&#x7834;&#x5343;&#x4EBF;&#x7F8E;&#x5143;&#x7684; Google&#xFF0C;&#x8FCE;&#x6765;&#x4E86; 20&#x5E74;&#x6765;&#x6700;&#x5927;&#x7684;&#x4EBA;&#x4E8B;&#x53D8;&#x52A8;&#xFF09;</p><p>&#x2003;&#x2003;&#x5728;&#x7814;&#x7A76;&#x65B9;&#x9762;&#xFF0C;Hennessy&#x4E0E;Patterson&#x5171;&#x540C;&#x4E3A;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x91CF;&#x5316;&#x65B9;&#x6CD5;&#x3002;&#x540C;&#x65F6;&#x4ED6;&#x4EEC;&#x7F16;&#x5199;&#x7684;&#x300A;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#xFF08;&#x91CF;&#x5316;&#x7814;&#x7A76;&#x65B9;&#x6CD5;&#xFF09;&#x300B;&#xFF08;Computer Architecture: A Quantitative Approach&#xFF09;&#xFF0C;&#x4ECE;1990&#x5E74;&#x4EE5;&#x6765;&#x4E00;&#x76F4;&#x88AB;&#x5E7F;&#x6CDB;&#x7528;&#x4F5C;&#x7814;&#x7A76;&#x751F;&#x7684;&#x6743;&#x5A01;&#x6559;&#x6750;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;Hennessy&#x5C06; Donald Knuth &#x7684; MIX &#x5904;&#x7406;&#x5668;&#x66F4;&#x65B0;&#x4E3A; MMIX &#x505A;&#x51FA;&#x4E86;&#x8D21;&#x732E;&#x3002;</p><p>&#x2003;&#x2003;2004&#x5E74;&#xFF0C;&#x4ED6;1989&#x5E74;&#x5408;&#x4F5C;&#x7684;&#x4E00;&#x7BC7;&#x5173;&#x4E8E;&#x9AD8;&#x6027;&#x80FD;&#x7F13;&#x5B58;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x8BBA;&#x6587;&#x83B7;&#x5F97;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x68B0;&#x534F;&#x4F1A; SIGARCH ISCA &#x7684;&#x5F71;&#x54CD;&#x8BBA;&#x6587;&#x5956;&#x3002;</p><p>&#x2003;&#x2003;2009&#x5E74;&#xFF0C;Hennessy&#x518D;&#x6B21;&#x83B7;&#x5F97;&#x8BE5;&#x5956;&#xFF0C;&#x8FD9;&#x6B21;&#x662F;&#x4ED6;&#x5728;1994&#x5E74;&#x5408;&#x4F5C;&#x7684;&#x6709;&#x5173;&#x65AF;&#x5766;&#x798F; FLASH &#x591A;&#x5904;&#x7406;&#x5668;&#x7684;&#x8BBA;&#x6587;&#x3002;</p><p><strong>&#x5927;&#x536B;&#xB7;&#x5E15;&#x7279;&#x68EE;(David A. Patterson)</strong></p><p><img src="/images/TURING/patterson.jpeg" alt="David A. Patterson"></p><p>&#x2003;&#x2003;Patterson &#x51FA;&#x751F;&#x4E8E;1947&#x5E74;&#xFF0C;</p><p>&#x2003;&#x2003;1969&#x5E74;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x6D1B;&#x6749;&#x77F6;&#x5206;&#x6821;&#x83B7;&#x6570;&#x5B66;&#x5B66;&#x58EB;&#x5B66;&#x4F4D;&#x3002;</p><p>&#x2003;&#x2003;1970&#x5E74;&#x548C;1976&#x5E74;&#xFF0C;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x6D1B;&#x6749;&#x77F6;&#x5206;&#x6821;&#x5206;&#x522B;&#x83B7;&#x5F97;&#x8BA1;&#x7B97;&#x673A;&#x7855;&#x58EB;&#x548C;&#x535A;&#x58EB;&#x5B66;&#x4F4D;&#x3002;</p><p>&#x2003;&#x2003;1976&#x5E74;&#xFF0C;&#x535A;&#x58EB;&#x6BD5;&#x4E1A;&#x540E;&#xFF0C;&#x52A0;&#x5165;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x3002;</p><p>&#x2003;&#x2003;1994&#x5E74;&#xFF0C;&#x5F53;&#x9009;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#x4F1A;&#x58EB;&#xFF08;ACM Fellow&#xFF09;&#x3002;</p><p>&#x2003;&#x2003;2004&#x5E74;&#x81F3; 2006&#x5E74;&#xFF0C;&#x4EFB;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#x4E3B;&#x5E2D;&#x3002;</p><p>&#x2003;&#x2003;2016&#x5E74;&#xFF0C;DavidPatterson&#x6559;&#x6388;&#x5BA3;&#x5E03;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x9000;&#x4F11;&#xFF0C;&#x5B66;&#x6821;&#x7ED9;&#x4ED6;&#x4E3E;&#x529E;&#x4E86;&#x4E00;&#x4E2A;&#x9000;&#x4F11;&#x5178;&#x793C;&#xFF0C;&#x7EAA;&#x5FF5;&#x4ED6;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x65B9;&#x9762;&#x7684; 40&#x5E74;&#x5B66;&#x672F;&#x751F;&#x6DAF;&#x3002;&#x4E00;&#x5E74;&#x4E4B;&#x540E;&#xFF0C;&#x6559;&#x6388;&#x516C;&#x5F00;&#x5BA3;&#x5E03;&#x81EA;&#x5DF1;&#x52A0;&#x5165;&#x8C37;&#x6B4C; TPU &#x56E2;&#x961F;&#xFF0C;&#x8C37;&#x6B4C;&#x7684; TPU &#x8BBA;&#x6587;&#x4E2D;&#x4E5F;&#x6709;&#x4ED6;&#x7684;&#x7F72;&#x540D;&#x3002;&#xFF08;&#x96F7;&#x950B;&#x7F51;&#x8BE6;&#x7EC6;&#x62A5;&#x9053;&#xFF1A;David Patterson&#x6559;&#x6388;&#x516C;&#x5F00;&#x5BA3;&#x5E03;&#x52A0;&#x5165;&#x8C37;&#x6B4C;TPU&#x56E2;&#x961F;&#xFF0C;&#x597D;&#x620F;&#x624D;&#x521A;&#x521A;&#x5F00;&#x573A;&#xFF09;</p><p>&#x2003;&#x2003;Patterson&#x6559;&#x6388;&#x5728;&#x4F2F;&#x514B;&#x5229;&#x5927;&#x5B66;&#x5E26;&#x9886;&#x56E2;&#x961F;&#x957F;&#x671F;&#x8FDB;&#x884C;RISC&#x7684;&#x7814;&#x7A76;&#xFF0C;&#x5BF9;&#x5168;&#x4E16;&#x754C;RISC&#x5904;&#x7406;&#x5668;&#x7684;&#x7814;&#x53D1;&#x548C;&#x76F8;&#x5173;&#x5E94;&#x7528;&#x505A;&#x51FA;&#x4E86;&#x5DE8;&#x5927;&#x8D21;&#x732E;&#xFF1B;&#x4ED6;&#x5728; 2003&#x5E74;&#x5230; 2005&#x5E74;&#x95F4;&#x662F;&#x7F8E;&#x56FD;&#x603B;&#x7EDF;&#x4FE1;&#x606F;&#x6280;&#x672F;&#x54A8;&#x8BE2;&#x59D4;&#x5458;&#x4F1A;&#x6210;&#x5458;&#xFF0C;2004 &#x5230; 2006&#x5E74;&#x95F4;&#x4EFB;&#x56FD;&#x9645;&#x8BA1;&#x7B97;&#x673A;&#x5B66;&#x4F1A;&#x4E3B;&#x5E2D;&#xFF1B;&#x4ED6;&#x8FD8;&#x662F;&#x78C1;&#x76D8;&#x9635;&#x5217; RAID &#x7684;&#x7814;&#x53D1;&#x8005;&#x4E4B;&#x4E00;&#x3002;</p><p>&#x2003;&#x2003;&#x5A01;&#x65AF;&#x5EB7;&#x661F;&#x5927;&#x5B66;&#x9EA6;&#x8FEA;&#x900A;&#x5206;&#x6821;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7684;&#x4E3B;&#x4EFB;Mark Hill&#x8BA4;&#x4E3A;&#xFF0C;Patterson&#x6559;&#x6388;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x65B9;&#x9762;&#x662F;&#x300C;20&#x4E16;&#x7EAA;&#x540E;50&#x5E74;&#x91CC;&#x6700;&#x6770;&#x51FA;&#x7684;&#x51E0;&#x4E2A;&#x4EBA;&#x4E4B;&#x4E00;&#x300D;&#x3002;&#x4ED6;&#x540C;&#x65F6;&#x8FD8;&#x8868;&#x793A;&#xFF0C;Patterson&#x6559;&#x6388;&#x4E0E;Hennessy&#x6559;&#x6388;&#x5408;&#x8457;&#x7684;&#x90A3;&#x672C;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x4E66;&#x662F;&#x8FD9;&#x4E2A;&#x9886;&#x57DF;&#x8FD1;25&#x5E74;&#x6765;&#x6700;&#x6709;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x6559;&#x79D1;&#x4E66;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=grey&gt;&lt;font size=5 face=&quot;STXihei&quot; color=white&gt;&lt;center&gt;RISC Microprocessors&lt;/center&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="Computer Science" scheme="https://USTCcoder.github.io/categories/Computer-Science/"/>
    
      <category term="Turing Reward" scheme="https://USTCcoder.github.io/categories/Computer-Science/Turing-Reward/"/>
    
    
  </entry>
  
</feed>
