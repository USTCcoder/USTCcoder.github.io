<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[谱聚类]]></title>
    <url>%2F2019%2F05%2F09%2FMachine%20Learning_SPECTRAL%2F</url>
    <content type="text"><![CDATA[&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;&#x8C31;&#x805A;&#x7C7B;(spectral clustering):&#x662F;&#x4E00;&#x79CD;&#x57FA;&#x4E8E;&#x56FE;&#x8BBA;&#x7684;&#x805A;&#x7C7B;&#x7B97;&#x6CD5;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x6784;&#x56FE;&#xFF1A;&#x5C06;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x770B;&#x505A;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x70B9;V&#xFF0C;&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x4E4B;&#x7528;&#x8FB9;E&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x8DDD;&#x79BB;&#x8F83;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x503C;&#x8F83;&#x4F4E;&#x3001;&#x8DDD;&#x79BB;&#x8F83;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x503C;&#x8F83;&#x9AD8;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;&#x76F8;&#x4F3C;&#x5EA6;&#x7684;&#x65E0;&#x5411;&#x6743;&#x91CD;&#x56FE;G(V,E)&#x3002;&#x7B2C;&#x4E8C;&#x6B65;&#x662F;&#x5207;&#x56FE;&#xFF1A;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x5207;&#x8FB9;&#x89C4;&#x5219;&#x5C06;&#x56FE;&#x5207;&#x5206;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x5B50;&#x56FE;&#xFF0C;&#x89C4;&#x5219;&#x662F;&#x4F7F;&#x5B50;&#x56FE;&#x5185;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x548C;&#x5C3D;&#x53EF;&#x80FD;&#x5927;&#xFF0C;&#x4E0D;&#x540C;&#x5B50;&#x56FE;&#x95F4;&#x7684;&#x8FB9;&#x6743;&#x91CD;&#x548C;&#x5C3D;&#x53EF;&#x80FD;&#x5C0F;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x805A;&#x7C7B;&#x76EE;&#x7684;&#x3002; &#x6838;&#x5FC3;&#x601D;&#x60F3;&#x2003;&#x2003;1. &#x90BB;&#x63A5;&#x77E9;&#x9635;W&#x7684;&#x6784;&#x5EFA; w_{ij}=\begin{cases}exp(-\frac{\lVert x_i-x_j \rVert ^2}{2 \sigma ^2}), & i \neq j \\[2ex] 0, & i=j \end{cases}&#x2003;&#x2003;2. &#x5EA6;&#x77E9;&#x9635;W&#x7684;&#x6784;&#x5EFA; d_{ij}=\begin{cases}0, & i \neq j \\[2ex] \displaystyle \sum_{j=1} w_{ij}, & i=j \end{cases}&#x2003;&#x2003;3. &#x6743;&#x91CD;&#x5207;&#x56FE; W(A,B)=\displaystyle \sum_{i \in A, j \in B} w_{ij}&#x2003;&#x2003;4. Ncut&#x5207;&#x56FE;\begin{align}Ncut(A_1,A_2, &#x2026; ,A_k)&amp;=\displaystyle \sum_{i=1}^k \frac{W(A_i, \overline {A_i})}{\displaystyle \sum_{j \in A_i} d_j} \\&amp;=\underset{F}{\underbrace{arg\ min}}\ {tr(F^TD^{-1/2}LD^{-1/2}F)}\ \ \ s.t.\ \ \ H^TDH=\mathrm{I}\end{align} &#x2003;&#x2003;5. &#x6807;&#x51C6;&#x5316;&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x77E9;&#x9635; L_{sym}=D^{-1/2}LD^{-1/2}=D^{-1/2}(D-L)D^{-1/2}&#x2003;&#x2003;6. &#x4E00;&#x4E2A;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#x7684;&#x5B9E;&#x4F8B; x=\begin{bmatrix} 0.7 & 0.8 & 0.1 & 0.4 & 0.2 & 0.5 & 0.6 \\ 0.5 & 0.6 & 0.1 & 0.8 & 0.2 & 0.8 & 0.7 \end{bmatrix} w=\begin{bmatrix} 0 & 0.990 & 0.771 & 0.914 & 0.844 & 0.937 & 0.975 \\ 0.990 & 0 & 0.691 & 0.905 & 0.771 & 0.937 & 0.975 \\ 0.771 & 0.691 & 0 & 0.748 & 0.990 & 0.723 & 0.737 \\ 0.914 & 0.905 & 0.748 & 0 & 0.819 & 0.995 & 0.975 \\ 0.844 & 0.771 & 0.990 & 0.819 & 0 & 0.799 & 0.815 \\ 0.937 & 0.937 & 0.723 & 0.995 & 0.799 & 0 & 0.990 \\ 0.975 & 0.975 & 0.737 & 0.975 & 0.815 & 0.990 & 0\end{bmatrix} d=\begin{bmatrix} 5.43 & 0 & 0 & 0 & 0 & 0 & 0 \\ 0 & 5.27 & 0 & 0 & 0 & 0 & 0 \\ 0 & 0 & 4.66 & 0 & 0 & 0 & 0 \\ 0 & 0 & 0 & 5.36 & 0 & 0 & 0 \\ 0 & 0 & 0 & 0 & 5.04 & 0 & 0 \\ 0 & 0 & 0 & 0 & 0 & 5.38 & 0 \\ 0 & 0 & 0 & 0 & 0 & 0 & 5.47\end{bmatrix} L_{sym}=\begin{bmatrix} 1 & -0.185 & -0.153 & -0.169 & -0.161 & -0.173 & -0.179 \\ -0.185 & 1 & -0.139 & -0.170 & -0.150 & -0.176 & -0.182 \\ -0.153 & -0.139 & 1 & -0.150 & -0.204 & -0.144 & -0.146 \\ -0.169 & -0.170 & -0.150 & 1 & -0.158 & -0.185 & -0.180 \\ -0.161 & -0.150 & -0.204 & -0.158 & 1 & -0.153 & -0.155 \\ -0.173 & -0.176 & -0.144 & -0.185 & -0.153 & 1 & -0.183 \\ -0.179 & -0.182 & -0.146 & -0.180 & -0.155 & -0.183 & 1\end{bmatrix} feat\_value=\begin{bmatrix} 0 & 0 & 0 & 0 & 0 & 0 & 0 \\ 0 & 1.080 & 0 & 0 & 0 & 0 & 0 \\ 0 & 0 & 1.159 & 0 & 0 & 0 & 0 \\ 0 & 0 & 0 & 1.205 & 0 & 0 & 0 \\ 0 & 0 & 0 & 0 & 1.183 & 0 & 0 \\ 0 & 0 & 0 & 0 & 0 & 1.187 & 0 \\ 0 & 0 & 0 & 0 & 0 & 0 & 1.186\end{bmatrix} feat\_vector=\begin{bmatrix} -0.385 & -0.141 & 0.535 & -0.004 & 0.371 & 0.534 & -0.349 \\ -0.379 & -0.302 & 0.470 & -0.040 & 0.042 & -0.691 & 0.249 \\ -0.357 & 0.642 & -0.005 & -0.675 & -0.031 & -0.033 & 0.051 \\ -0.383 & -0.178 & -0.575 & -0.004 & 0.246 & -0.299 & -0.584 \\ -0.371 & 0.558 & 0.010 & 0.736 & -0.036 & -0.053 & 0.070 \\ -0.383 & -0.261 & -0.400 & -0.019 & 0.264 & 0.314 & 0.676 \\ -0.387 & -0.256 & -0.034 & -0.017 & -0.853 & 0.213 & -0.104\end{bmatrix}&#x2003;&#x2003;&#x53D6;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x5F81;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x53EF;&#x5F97;&#xFF1A; feature\_vector=\begin{bmatrix} -0.385 & -0.141 \\ -0.379 & -0.302 \\ -0.357 & 0.642 \\ -0.383 & -0.178 \\ -0.371 & 0.558 \\ -0.383 & -0.261 \\ -0.387 & -0.256\end{bmatrix}&#x2003;&#x2003;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x6309;&#x884C;&#x5F52;&#x4E00;&#x5316;&#xFF1A; feature\_vector=\begin{bmatrix} -0.939 & -0.344 \\ -0.782 & -0.623 \\ -0.486 & 0.874 \\ -0.907 & -0.422 \\ -0.553 & 0.833 \\ -0.827 & -0.563 \\ -0.834 & -0.552\end{bmatrix}&#x2003;&#x2003;&#x53EF;&#x4EE5;&#x660E;&#x663E;&#x770B;&#x51FA;&#xFF1A;$\{x_1,x_2,x_4,x_6,x_7\} \in A_1\ ,\ \{x_3,x_5\} \in A_2$ &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;SPECTRAL_main.m123456789101112131415161718192021clear;clc;close all;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,20)+5;rand(1,20)+10],[rand(1,20)+10;rand(1,20)+5],[rand(1,20)+15;rand(1,20)+10]];%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num=3;%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));endy=SPECTRAL_classify(x_scale,sample_num,class_num);%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 SPECTRAL_display(x,y,sample_num,class_num);else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end SPECTRAL_classify.m12345678910111213141516171819202122function y=SPECTRAL_classify(x_scale,sample_num,class_num)%w&#x4E3A;&#x90BB;&#x63A5;&#x77E9;&#x9635;w=zeros(sample_num);for i=1:sample_num w(i,:)=exp(-sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2)/2); w(i,i)=0;end%D&#x4E3A;&#x5EA6;&#x77E9;&#x9635;d=diag(sum(w,2));%&#x6807;&#x51C6;&#x5316;&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x77E9;&#x9635;l=d^(-0.5)*(d-w)*d^(-0.5);%&#x6C42;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x548C;&#x7279;&#x5F81;&#x503C;[feat_vector,feat_value_temp]=eig(l);feat_value=diag(feat_value_temp);temp=sort(feat_value);loc=feat_value&lt;=temp(class_num);%&#x6C42;&#x51FA;&#x6700;&#x5C0F;&#x7684;class_num&#x4E2A;&#x7279;&#x5F81;&#x5411;&#x91CF;class_feat_vector=feat_vector(:,loc);%&#x7279;&#x5F81;&#x5411;&#x91CF;&#x5F52;&#x4E00;&#x5316;class_feat_vector=class_feat_vector./repmat(sqrt(sum(class_feat_vector.^2,2)),1,class_num);%&#x5229;&#x7528;kmeans&#x8FDB;&#x884C;&#x5206;&#x7C7B;y=SPECTRAL_kmeans(class_feat_vector&apos;,sample_num,class_num); SPECTRAL_display.m1234567891011function SPECTRAL_display(x,y,sample_num,class_num)color_bar=zeros(class_num,3);hold on;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)];endfor i=1:sample_num %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; SPECTRAL_kmeans.m1234567891011121314151617181920212223242526272829303132function y=SPECTRAL_kmeans(class_feat_vector,sample_num,class_num)%&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;loc_center=class_feat_vector(:,1:class_num);%&#x8BBE;&#x7F6E;&#x8FED;&#x4EE3;&#x6B21;&#x6570;k=0;while 1 %&#x521D;&#x59CB;&#x5316;&#x6700;&#x65B0;&#x7684;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3; loc_center_new=zeros(size(loc_center)); distance=zeros(class_num,sample_num); %distance&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB; for i=1:class_num distance(i,:)=sum((class_feat_vector-repmat(loc_center(:,i),1,sample_num)).^2); end %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x54EA;&#x4E00;&#x7C7B;&#x6700;&#x8FD1; [~,y]=min(distance); %&#x66F4;&#x65B0;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3; for i=1:class_num loc_center_new(:,i)=sum(class_feat_vector(:,y==i),2)/sum(y==i); end %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x76F8;&#x7B49;&#x5219;&#x5206;&#x7C7B;&#x5B8C;&#x6BD5; if isequal(loc_center_new,loc_center) break; %&#x5426;&#x5219;&#x7EE7;&#x7EED;&#x5206;&#x7C7B; else loc_center=loc_center_new; k=k+1; %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x6B21;&#x6570;&#x8FBE;&#x5230;1000&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED3;&#x675F;&#xFF0C;&#x5219;&#x5F3A;&#x5236;&#x5206;&#x7C7B;&#x7ED3;&#x675F; if k&gt;=1000 break; end endend &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x4F7F;&#x7528;&#x4E86;&#x964D;&#x7EF4;&#x6280;&#x672F;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#x7684;&#x805A;&#x7C7B;&#x3002; &#x5BF9;&#x5904;&#x7406;&#x7A00;&#x758F;&#x6570;&#x636E;&#x7684;&#x805A;&#x7C7B;&#x6548;&#x679C;&#x5F88;&#x597D;&#x3002; &#x5EFA;&#x7ACB;&#x5728;&#x8C31;&#x56FE;&#x7406;&#x8BBA;&#xFF0C;&#x80FD;&#x591F;&#x5728;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#x4E0A;&#x805A;&#x7C7B;&#xFF0C;&#x4E14;&#x6536;&#x655B;&#x4E8E;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x805A;&#x7C7B;&#x5BF9;&#x4E8E;&#x76F8;&#x4F3C;&#x5EA6;&#x56FE;&#x7684;&#x6539;&#x53D8;&#x548C;&#x805A;&#x7C7B;&#x53C2;&#x6570;&#x7684;&#x9009;&#x62E9;&#x975E;&#x5E38;&#x654F;&#x611F;&#x3002; &#x9002;&#x7528;&#x4E8E;&#x5747;&#x8861;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x5404;&#x7C7B;&#x6570;&#x76EE;&#x76F8;&#x5DEE;&#x60AC;&#x6B8A;&#xFF0C;&#x8C31;&#x805A;&#x7C7B;&#x4E0D;&#x9002;&#x7528;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x6700;&#x7EC8;&#x7C7B;&#x522B;&#x6570;K op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x77E9;&#x9635; op2=&gt;operation: &#x53D6;&#x6700;&#x5C0F;&#x7684;K&#x4E2A;&#x7279;&#x5F81;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF; op3=&gt;operation: &#x5229;&#x7528;k-means&#x5BF9;&#x5F52;&#x4E00;&#x5316;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x5206;&#x7C7B; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;op2-&gt;op3-&gt;o-&gt;e{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[密度最大值聚类]]></title>
    <url>%2F2019%2F05%2F07%2FMachine%20Learning_MDCA%2F</url>
    <content type="text"><![CDATA[&#x5BC6;&#x5EA6;&#x6700;&#x5927;&#x503C;&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;MDCA(maximum density clustering application):&#x91C7;&#x7528;&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6700;&#x521D;&#x5C06;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x7F6E;&#x4E8E;&#x4E00;&#x4E2A;&#x7C7B;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x67D0;&#x4E9B;&#x51C6;&#x5219;&#x5C06;&#x8FD9;&#x4E9B;&#x7C7B;&#x522B;&#x9010;&#x6E10;&#x7EC6;&#x5206;&#x3002;&#x7EC6;&#x5206;&#x7684;&#x8FC7;&#x7A0B;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x8FBE;&#x5230;&#x9884;&#x671F;&#x7684;&#x6570;&#x76EE;&#x3002; &#x5206;&#x88C2;&#x51C6;&#x5219;&#x2003;&#x2003;&#x627E;&#x51FA;&#x6240;&#x6709;&#x7C7B;&#x522B;&#x4E2D;&#x5230;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x518D;&#x5C06;&#x8BE5;&#x6837;&#x672C;&#x5355;&#x72EC;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B;&#x3002; d_{max}=\underset{C_i \subseteq C}{max}(\underset{x_i \in C_i}{max}{\lVert x_i-\overline C_i \rVert}),其中\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i} &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;DIANA_main.m12345678910111213141516171819202122232425clear;clc;close all;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,100)+5;rand(1,100)+10],[rand(1,100)+10;rand(1,100)+5],[rand(1,100)+15;rand(1,100)+10]];%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num=3;%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end[y,class_center]=DIANA_classify(x_scale,sample_num,class_num);%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;for i=1:feat_num class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));end%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 DIANA_display(x,y,class_center,sample_num,class_num);else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end DIANA_classify.m12345678910111213141516171819202122232425262728293031323334353637383940414243444546function [y,class_center]=DIANA_classify(x_scale,sample_num,class_num)if class_num==1 class_center=sum(x_scale,2)/sample_num; y=ones(1,sample_num);else %&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x89C6;&#x4E3A;0&#x7C7B; y=zeros(1,sample_num); distance=zeros(sample_num); for i=1:sample_num distance(i,:)=sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C; [row,col]=find(distance==max(max(distance)),1); %&#x5C06;row&#x5206;&#x4E3A;&#x7B2C;&#x4E00;&#x7C7B;,col&#x5206;&#x4E3A;&#x7B2C;&#x4E8C;&#x7C7B; y(row)=1; y(col)=2; %&#x8BBE;&#x7F6E;&#x7B2C;&#x4E00;&#x7C7B;&#x548C;&#x7B2C;&#x4E8C;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,1)=x_scale(:,row); class_center(:,2)=x_scale(:,col); %&#x76EE;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570; class_num_temp=2; distance_min=zeros(1,sample_num); while class_num_temp~=class_num for i=1:sample_num %&#x6C42;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB; distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2); %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x503C; distance_min(i)=distance(find(distance==min(distance),1)); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x503C;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B; temp=find(distance_min==max(distance_min),1); %&#x7C7B;&#x522B;&#x6570;+1 class_num_temp=class_num_temp+1; %&#x4FEE;&#x6539;&#x7C7B;&#x522B;&#x4FE1;&#x606F; y(temp)=class_num_temp; for i=1:class_num_temp %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); end end %&#x91C7;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x8FDB;&#x884C;&#x5206;&#x7C7B; for i=1:sample_num distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2); y(i)=find(distance==min(distance),1); endend DIANA_display.m12345678910111213function DIANA_display(x,y,class_center,sample_num,class_num)color_bar=zeros(class_num,3);hold on;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)]; %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A; plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)endfor i=1:sample_num %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x5206;&#x88C2;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;&#x3002; &#x6267;&#x884C;&#x6548;&#x7387;&#x4F4E;O(n&#xB2;)&#xFF0C;&#x4E0D;&#x9002;&#x5408;&#x5927;&#x6570;&#x636E;&#x96C6;&#x3002; &#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x6700;&#x7EC8;&#x7C7B;&#x522B;&#x6570;N op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;,&#x5E76;&#x5C06;&#x6240;&#x6709;&#x6837;&#x672C;&#x90FD;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B; op2=&gt;operation: &#x5206;&#x88C2;&#x5230;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;&#x6700;&#x5927;&#x7684;&#x6837;&#x672C; cond1=&gt;condition: &#x5F53;&#x524D;&#x7C7B;&#x522B;&#x6570;&#x662F;&#x5426;&#x7B49;&#x4E8E;N&#xFF1F; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;cond1 cond1(yes)-&gt;o-&gt;e cond1(no)-&gt;op2(right)-&gt;cond1{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[DBSCAN]]></title>
    <url>%2F2019%2F05%2F05%2FMachine%20Learning_DBSCAN%2F</url>
    <content type="text"><![CDATA[DBSCAN&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;DBSCAN(density-based spatial clustering of applications with noise):DBSCAN&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x626B;&#x63CF;&#x534A;&#x5F84; (eps)&#x548C;&#x6700;&#x5C0F;&#x5305;&#x542B;&#x70B9;&#x6570;(minPts)&#x3002; &#x4EFB;&#x9009;&#x4E00;&#x4E2A;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#x5F00;&#x59CB;&#xFF0C;&#x627E;&#x51FA;&#x4E0E;&#x5176;&#x8DDD;&#x79BB;&#x5728;eps&#x4E4B;&#x5185;(&#x5305;&#x62EC;eps)&#x7684;&#x6240;&#x6709;&#x9644;&#x8FD1;&#x70B9;&#x3002;&#x5982;&#x679C;&#x9644;&#x8FD1;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;minPts&#xFF0C;&#x5219;&#x5F53;&#x524D;&#x70B9;&#x4E0E;&#x5176;&#x9644;&#x8FD1;&#x70B9;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x7C07;&#xFF0C;&#x5E76;&#x4E14;&#x51FA;&#x53D1;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#x3002; &#x7136;&#x540E;&#x9012;&#x5F52;&#xFF0C;&#x4EE5;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x5904;&#x7406;&#x8BE5;&#x7C07;&#x5185;&#x6240;&#x6709;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#xFF0C;&#x4ECE;&#x800C;&#x5BF9;&#x7C07;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;&#x5982;&#x679C;&#x9644;&#x8FD1;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x5C0F;&#x4E8E;minPts&#xFF0C;&#x5219;&#x8BE5;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#xFF0C;&#x4E0D;&#x4F5C;&#x6269;&#x5C55;&#x3002;&#x5982;&#x679C;&#x7C07;&#x5145;&#x5206;&#x5730;&#x88AB;&#x6269;&#x5C55;&#xFF0C;&#x5373;&#x7C07;&#x5185;&#x7684;&#x6240;&#x6709;&#x70B9;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;&#x5DF2;&#x8BBF;&#x95EE;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x540C;&#x6837;&#x7684;&#x7B97;&#x6CD5;&#x53BB;&#x5904;&#x7406;&#x672A;&#x88AB;&#x8BBF;&#x95EE;&#x7684;&#x70B9;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x70B9;&#x90FD;&#x88AB;&#x6807;&#x8BB0;&#x3002; &#x601D;&#x60F3;&#x56FE;&#x89E3; &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;DBSCAN_main.m1234567891011121314151617181920212223clear;clc;close all;%&#x641C;&#x7D22;&#x534A;&#x5F84;eps=0.03;%&#x5706;&#x5185;&#x70B9;&#x6570;minpts=2;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,1000)*100;rand(1,1000)*10+75],[rand(1,1000)*100;rand(1,1000)*10+60],[rand(1,1000)*100;rand(1,1000)*10+45],[rand(1,1000)*100;rand(1,1000)*10+30],[rand(1,1000)*100;rand(1,1000)*10+15]];%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end[y,color_bar]=DBSCAN_classify(x_scale,sample_num,eps,minpts);%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 DBSCAN_display(x,y,color_bar,sample_num)else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end DBSCAN_classify.m1234567891011121314151617181920212223242526272829303132333435363738394041function [y,color_bar]=DBSCAN_classify(x_scale,sample_num,eps,minpts)%&#x6807;&#x8BB0;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5206;&#x8FC7;&#x7C7B;flag=zeros(1,sample_num);y=zeros(1,sample_num);color_bar=[];%&#x7C7B;&#x522B;&#x6570;&#x76EE;i=1;%&#x627E;&#x5230;&#x672A;&#x6807;&#x8BB0;&#x7684;&#x6570;&#x636E;&#x70B9;&#x5219;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;while ~isempty(find(flag==0,1)) %&#x6C42;&#x51FA;&#x8BE5;&#x70B9;C&#x5230;&#x5176;&#x4F59;&#x5404;&#x70B9;&#x7684;&#x8DDD;&#x79BB; distance=sum((x_scale-repmat(x_scale(:,find(flag==0,1)),1,sample_num)).^2); %&#x5C06;&#x627E;&#x5230;&#x7684;&#x70B9;&#x6807;&#x8BB0; flag(find(flag==0,1))=1; %&#x627E;&#x51FA;&#x8DDD;&#x79BB;&#x627E;&#x5230;&#x7684;&#x70B9;&#x5C0F;&#x4E8E;&#x534A;&#x5F84;&#x7684;&#x6240;&#x6709;&#x70B9; temp=find(distance&lt;eps^2); %&#x5982;&#x679C;&#x4E2A;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x8BBE;&#x5B9A;&#x7684;&#x4E2A;&#x6570; if length(temp)&gt;=minpts %&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x989C;&#x8272;&#x4FE1;&#x606F; color_bar(i,:)=[rand(1),rand(1),rand(1)]; %&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x5168;&#x90E8;&#x5206;&#x4E3A;i&#x7C7B; y(temp)=i; %&#x627E;&#x51FA;i&#x7C7B;&#x4E2D;&#x6CA1;&#x6709;&#x6807;&#x8BB0;&#x7684;&#x70B9;&#x5219;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF; while ~isempty(find(y==i&amp;flag==0,1)) %&#x6C42;&#x51FA;&#x8BE5;&#x70B9;D&#x5230;&#x5176;&#x4F59;&#x5404;&#x70B9;&#x7684;&#x8DDD;&#x79BB; distance_part=sum((x_scale-repmat(x_scale(:,find(y==i&amp;flag==0,1)),1,sample_num)).^2); %&#x5C06;&#x627E;&#x5230;&#x7684;&#x70B9;&#x6807;&#x8BB0; flag(find(y==i&amp;flag==0,1))=1; %&#x627E;&#x51FA;&#x8DDD;&#x79BB;&#x627E;&#x5230;&#x7684;&#x70B9;&#x5C0F;&#x4E8E;&#x534A;&#x5F84;&#x7684;&#x6240;&#x6709;&#x70B9; temp_part=find(distance_part&lt;eps^2); %&#x5982;&#x679C;&#x4E2A;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x8BBE;&#x5B9A;&#x7684;&#x4E2A;&#x6570;, if length(temp_part)&gt;=minpts %&#x5C06;&#x8FD9;&#x4E9B;&#x70B9;&#x5168;&#x90E8;&#x5206;&#x4E3A;i&#x7C7B; y(temp_part)=i; end end else continue; end %&#x8FD9;&#x4E00;&#x7C7B;&#x627E;&#x5B8C;&#x65F6;&#xFF0C;&#x7C7B;&#x522B;&#x52A0;1 i=i+1;end DBSCAN_display.m12345678910111213function DBSCAN_display(x,y,color_bar,sample_num)figure;hold on;for i=1:sample_num if y(i)==0 %&#x753B;&#x51FA;&#x566A;&#x58F0;&#x70B9;&#xFF0C;&#x7528;*&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;k*&apos;) else %&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;); endendhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x4E0D;&#x9700;&#x8981;&#x4E8B;&#x5148;&#x7ED9;&#x5B9A;&#x7C7B;&#x522B;&#x6570;&#x76EE;&#x3002; &#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x610F;&#x5F62;&#x72B6;&#x7684;&#x805A;&#x7C7B;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x5BF9;&#x4E8E;&#x9AD8;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x8DDD;&#x79BB;&#x7684;&#x5EA6;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x3002; &#x4E0D;&#x9002;&#x5408;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x5BC6;&#x5EA6;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x7684;&#x60C5;&#x51B5;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x626B;&#x63CF;&#x534A;&#x5F84;eps&#xFF0C;&#x6700;&#x5C0F;&#x5305;&#x542B;&#x70B9;&#x6570;minPts op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316; op2=&gt;operation: &#x6807;&#x8BB0;&#x6240;&#x6709;&#x6837;&#x672C;&#x4E2D;&#x4EFB;&#x4E00;&#x672A;&#x6807;&#x8BB0;&#x70B9;&#xFF0C;&#x5E76;&#x7F6E;&#x4E3A;&#x65B0;&#x7C7B;&#x522B; op3=&gt;operation: &#x5C06;&#x5468;&#x56F4;&#x6837;&#x672C;&#x5168;&#x90E8;&#x5F52;&#x4E3A;&#x8BE5;&#x7C7B; op4=&gt;operation: &#x6807;&#x8BB0;&#x8BE5;&#x7C7B;&#x522B;&#x4E2D;&#x4EFB;&#x4E00;&#x672A;&#x6807;&#x8BB0;&#x70B9; cond1=&gt;condition: &#x6240;&#x6709;&#x6837;&#x672C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x672A;&#x6807;&#x8BB0;&#x70B9;&#xFF1F; cond2=&gt;condition: &#x8BE5;&#x6837;&#x672C;&#x5468;&#x56F4;&#x6837;&#x672C;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;minPts&#xFF1F; cond3=&gt;condition: &#x5F53;&#x524D;&#x7C7B;&#x522B;&#x662F;&#x5426;&#x5B58;&#x5728;&#x672A;&#x6807;&#x8BB0;&#x70B9;&#xFF1F; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;cond1 cond1(yes)-&gt;op2-&gt;cond2 cond1(no)-&gt;o-&gt;e cond2(yes)-&gt;op3-&gt;cond3 cond2(no)-&gt;cond3 cond3(yes)-&gt;op4(left)-&gt;cond2 cond3(no)-&gt;cond1{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[迭代自组织分析聚类]]></title>
    <url>%2F2019%2F05%2F05%2FMachine%20Learning_ISODATA%2F</url>
    <content type="text"><![CDATA[&#x8FED;&#x4EE3;&#x81EA;&#x7EC4;&#x7EC7;&#x5206;&#x6790;&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;ISODATA(iterative selforganizing data analysis) :&#x5728;k-&#x5747;&#x503C;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x589E;&#x52A0;&#x5BF9;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x7684;&#x5408;&#x5E76;&#x548C;&#x5206;&#x88C2;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x5F53;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x4E2D;&#x6837;&#x672C;&#x6570;&#x592A;&#x5C11;&#xFF0C;&#x6216;&#x4E24;&#x4E2A;&#x7C7B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x592A;&#x8FD1;&#xFF0C;&#x6216;&#x6837;&#x672C;&#x7C7B;&#x522B;&#x8FDC;&#x5927;&#x4E8E;&#x8BBE;&#x5B9A;&#x7C7B;&#x522B;&#x6570;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x5F53;&#x805A;&#x7C7B;&#x7ED3;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x4E2D;&#x6837;&#x672C;&#x6570;&#x592A;&#x591A;&#xFF0C;&#x6216;&#x67D0;&#x4E2A;&#x7C7B;&#x5185;&#x65B9;&#x5DEE;&#x592A;&#x5927;&#xFF0C;&#x6216;&#x6837;&#x672C;&#x7C7B;&#x522B;&#x8FDC;&#x5C0F;&#x4E8E;&#x8BBE;&#x5B9A;&#x7C7B;&#x522B;&#x6570;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x5206;&#x88C2;&#x3002; &#x6838;&#x5FC3;&#x601D;&#x60F3;&#x2003;&#x2003;1. &#x521D;&#x59CB;&#x53D8;&#x91CF;(k,n,dmin,dmax,t)&#x2003;&#x2003;&#x2003;&#x2003;k&#xFF1A;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x7684;&#x805A;&#x7C7B;&#x6570;&#x2003;&#x2003;&#x2003;&#x2003;n&#xFF1A;&#x6BCF;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x2003;&#x2003;&#x2003;&#x2003;dmin&#xFF1A;&#x6700;&#x5C0F;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;&#x2003;&#x2003;&#x2003;&#x2003;dmax&#xFF1A;&#x6700;&#x5927;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x2003;&#x2003;&#x2003;&#x2003;t&#xFF1A;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570; &#x2003;&#x2003;2. &#x6700;&#x5C0F;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB; d_{min}=\underset{C_i,C_j \subseteq C}{min}{\lVert \overline {C_i}-\overline {C_j} \rVert},其中\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}&#x2003;&#x2003;3. &#x6700;&#x5927;&#x7C7B;&#x5185;&#x8DDD;&#x79BB; d_{max}=\underset{C_i \subseteq C}{max}\frac {1}{\lvert {C_i} \rvert}\underset{x_i \in C_i}{\sum}{\lVert x_i-\overline C_i \rVert},其中\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i} &#x521D;&#x59CB;&#x65F6;&#x523B;&#x72B6;&#x6001; &#x7B2C;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x540E; &#x7B2C;&#x4E8C;&#x6B21;&#x8FED;&#x4EE3;&#x540E; &#x7B2C;&#x4E09;&#x6B21;&#x8FED;&#x4EE3;&#x540E; &#x7B2C;&#x56DB;&#x6B21;&#x8FED;&#x4EE3;&#x540E; &#x7B2C;&#x4E94;&#x6B21;&#x8FED;&#x4EE3;&#x540E; &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;ISODATA_main.m123456789101112131415161718192021222324252627282930313233clear;clc;close all;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,20)+5;rand(1,20)+10],[rand(1,20)+10;rand(1,20)+5],[rand(1,20)+15;rand(1,20)+10],[rand(1,20)+20;rand(1,20)+5],[rand(1,20)+25;rand(1,20)+10]];%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;hope_class_num=20;%&#x5E0C;&#x671B;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6570;&#x76EE;hope_num=80;%&#x8BBE;&#x5B9A;&#x7C7B;&#x5185;&#x7684;&#x6700;&#x5927;&#x8DDD;&#x79BB;,&#x5C0F;&#x4E00;&#x70B9;max_class_inner_distance=0.01;%&#x8BBE;&#x5B9A;&#x7C7B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;,&#x5C0F;&#x4E00;&#x70B9;min_class_between_distance=0.1;%&#x6700;&#x591A;&#x8FED;&#x4EE3;&#x6B21;&#x6570;times=100;%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end[y,class_num,class_center]=ISODATA_classify(x_scale,sample_num,hope_class_num,hope_num,max_class_inner_distance,min_class_between_distance,times);%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;for i=1:feat_num class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));end%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 ISODATA_display(x,y,class_center,sample_num,class_num);else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end ISODATA_classify.m123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158function [y,class_num,class_center]=ISODATA_classify(x_scale,sample_num,hope_class_num,hope_num,max_class_inner_distance,min_class_between_distance,times)%&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x89C6;&#x4E3A;0&#x7C7B;y=zeros(1,sample_num);%&#x5C06;&#x524D;class_num&#x4E2A;&#x6837;&#x672C;&#x5206;&#x4E3A;class_num&#x7C7B;y(1:hope_class_num)=1:hope_class_num;%&#x76EE;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num=hope_class_num;k=0;while 1 class_center=zeros(2,class_num); for i=1:class_num %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); end %&#x91C7;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x8FDB;&#x884C;&#x5206;&#x7C7B; for i=1:sample_num distance=sum((class_center-repmat(x_scale(:,i),1,class_num)).^2); y(i)=find(distance==min(distance),1); end for i=1:class_num %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); end %&#x5982;&#x679C;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x5927;&#x4E8E;times&#xFF0C;&#x5219;&#x505C;&#x6B62;&#x8FED;&#x4EE3; if k&gt;=times break; end each_class_num=zeros(1,class_num); distance_between_class=zeros(class_num); %&#x7EDF;&#x8BA1;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2A;&#x6570;,&#x5E76;&#x6C42;&#x51FA;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB; for i=1:class_num each_class_num(i)=sum(y==i); distance_between_class(i,:)=sum((class_center-repmat(class_center(:,i),1,class_num)).^2); distance_between_class(i,i)=inf; end %&#x7EDF;&#x8BA1;&#x7C7B;&#x5185;&#x8DDD;&#x79BB; distance_class_inner=zeros(1,class_num); for i=1:class_num temp=x_scale(:,y==i); distance_class_inner(i)=sum(sum((temp-repmat(class_center(:,i),1,sum(y==i))).^2))/sum(y==i); end %&#x5982;&#x679C;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7684;&#x4E00;&#x7C7B;&#x7684;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x5927;&#x4E8E;&#x8BBE;&#x5B9A;&#x503C;&#xFF0C;&#x5219;&#x5206;&#x88C2;&#x4E24;&#x7C7B; if max(distance_class_inner)&gt;max_class_inner_distance tem=find(distance_class_inner==max(distance_class_inner),1); %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C; temp=x_scale(:,y==tem); %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB; distance=zeros(size(temp)); for i=1:sum(y==tem) distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C; [row,col]=find(distance==max(max(distance)),1); %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E; temp=find(y==tem); row=temp(row); col=temp(col); %&#x7C7B;&#x522B;&#x6570;+1 class_num=class_num+1; %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500; y(y==tem)=0; %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1 y(row)=tem; y(col)=class_num; k=k+1; continue; end %&#x5982;&#x679C;&#x4E24;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;&#x8BBE;&#x5B9A;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x5408;&#x5E76;&#x4E24;&#x7C7B; if min(min(distance_between_class))&lt;min_class_between_distance %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x522B; [row,col]=find(distance_between_class==min(min(distance_between_class)),1); %&#x7C7B;&#x522B;&#x6570;-1 class_num=class_num-1; %&#x5C06;col&#x7C7B;&#x5408;&#x5E76;&#x5230;row&#x7C7B;&#x4E2D; y(y==col)=row; %&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7; y(y&gt;col)=y(y&gt;col)-1; k=k+1; continue; end %&#x5982;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x6570;&#x91CF;&#x7684;&#x4E00;&#x534A; if min(each_class_num)&lt;=hope_num/2 %&#x627E;&#x5230;&#x8BE5;&#x7C7B;&#x522B; tem=find(each_class_num==min(each_class_num),1); %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500; y(y==tem)=0; %&#x91CD;&#x65B0;&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7; y(y&gt;tem)=y(y&gt;tem)-1; %&#x7C7B;&#x522B;&#x6570;-1 class_num=class_num-1; continue; end %&#x5982;&#x679C;&#x67D0;&#x4E00;&#x7C7B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x6570;&#x91CF;&#x7684;2&#x500D; if max(each_class_num)&gt;=hope_num*2 %&#x627E;&#x5230;&#x8BE5;&#x7C7B;&#x522B; tem=find(each_class_num==max(each_class_num),1); %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C; temp=x_scale(:,y==tem); %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB; distance=zeros(size(temp)); for i=1:sum(y==tem) distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C; [row,col]=find(distance==max(max(distance)),1); %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E; temp=find(y==tem); row=temp(row); col=temp(col); %&#x7C7B;&#x522B;&#x6570;+1 class_num=class_num+1; %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500; y(y==tem)=0; %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1 y(row)=tem; y(col)=class_num; continue; end %&#x5982;&#x679C;&#x73B0;&#x6709;&#x7C7B;&#x522B;&#x6570;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x7C7B;&#x522B;&#x6570;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x62C6;&#x5206;&#x7C7B;&#x5185;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7C7B;&#x522B; if class_num&lt;=hope_class_num/2 tem=find(distance_class_inner==max(distance_class_inner),1); %temp&#x4E3A;&#x8BE5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C; temp=x_scale(:,y==tem); %distance(i,j)&#x6307;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x5230;&#x7B2C;j&#x4E2A;&#x6837;&#x672C;&#x7684;&#x8DDD;&#x79BB; distance=zeros(size(temp)); for i=1:sum(y==tem) distance(i,:)=sum((temp-repmat(temp(:,i),1,sum(y==tem))).^2); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C; [row,col]=find(distance==max(max(distance)),1); %&#x5206;&#x522B;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6240;&#x5728;&#x4F4D;&#x7F6E; temp=find(y==tem); row=temp(row); col=temp(col); %&#x7C7B;&#x522B;&#x6570;+1 class_num=class_num+1; %&#x4EE4;&#x8BE5;&#x7C7B;&#x522B;&#x64A4;&#x9500; y(y==tem)=0; %&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x8986;&#x76D6;&#x539F;&#x7C7B;&#x522B;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x522B;&#x4E3A;&#x539F;&#x7C7B;&#x522B;&#x6570;+1 y(row)=tem; y(col)=class_num; continue; end %&#x5982;&#x679C;&#x73B0;&#x6709;&#x7C7B;&#x522B;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x5E0C;&#x671B;&#x7C7B;&#x522B;&#x6570;&#x7684;&#x4E8C;&#x500D;&#xFF0C;&#x5408;&#x5E76;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x7C7B; if class_num&gt;=hope_class_num*2 %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x522B; [row,col]=find(distance_between_class==min(min(distance_between_class)),1); %&#x7C7B;&#x522B;&#x6570;-1 class_num=class_num-1; %&#x5C06;col&#x7C7B;&#x5408;&#x5E76;&#x5230;row&#x7C7B;&#x4E2D; y(y==col)=row; %&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x5E8F;&#x53F7; y(y&gt;col)=y(y&gt;col)-1; continue; end %&#x6DFB;&#x52A0;&#x6837;&#x672C;&#x7C7B;&#x5185;&#x95F4;&#x8DDD;&#x6700;&#x5927;&#x503C; break;end ISODATA_display.m12345678910111213function ISODATA_display(x,y,class_center,sample_num,class_num)color_bar=zeros(class_num,3);hold on;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)]; %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A; plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)endfor i=1:sample_num %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x53EF;&#x4EE5;&#x52A8;&#x6001;&#x8C03;&#x6574;&#x7C7B;&#x522B;&#x4E2A;&#x6570;&#x548C;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#xFF0C;&#x5728;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E0D;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6709;&#x8F83;&#x597D;&#x7684;&#x5206;&#x7C7B;&#x80FD;&#x529B;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x8BBE;&#x7F6E;&#x7684;&#x53C2;&#x6570;&#x8F83;&#x591A;&#xFF0C;&#x53C2;&#x6570;&#x503C;&#x4E0D;&#x597D;&#x786E;&#x5B9A;&#xFF0C;&#x4E14;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#x76F8;&#x4E92;&#x5236;&#x7EA6;&#x3002; &#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570; op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;,&#x5E76;&#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3; op2=&gt;operation: &#x5229;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x5BF9;&#x6570;&#x636E;&#x5206;&#x7C7B;&#xFF0C;&#x5F97;&#x5230;&#x6807;&#x7B7E;Y op3=&gt;operation: &#x83B7;&#x53D6;&#x65B0;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3; cond1=&gt;condition: &#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x5C0F;&#x4E8E;T&#xFF1F; op4=&gt;operation: &#x8BA1;&#x7B97;&#x7C7B;&#x5185;&#x548C;&#x7C7B;&#x95F4;&#x8DDD;&#x79BB; cond2=&gt;condition: &#x662F;&#x5426;&#x8FBE;&#x5230;&#x5206;&#x88C2;&#x6761;&#x4EF6; cond3=&gt;condition: &#x662F;&#x5426;&#x8FBE;&#x5230;&#x5408;&#x5E76;&#x6761;&#x4EF6; op5=&gt;operation: &#x5206;&#x88C2;&#x7C7B;&#x522B; op6=&gt;operation: &#x5408;&#x5E76;&#x7C7B;&#x522B; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;op2-&gt;op3-&gt;cond1 cond1(yes)-&gt;op4-&gt;cond2 cond1(no)-&gt;o-&gt;e cond2(yes,right)-&gt;op5(right)-&gt;op2 cond2(no)-&gt;cond3 cond3(no)-&gt;o cond3(yes,right)-&gt;op6(right)-&gt;op2{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k均值聚类]]></title>
    <url>%2F2019%2F05%2F03%2FMachine%20Learning_KMEANS%2F</url>
    <content type="text"><![CDATA[k-means&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;k-means :&#x968F;&#x673A;&#x9009;&#x53D6;K&#x4E2A;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#xFF0C;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0E;&#x5404;&#x4E2A;&#x79CD;&#x5B50;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x7ED9;&#x8DDD;&#x79BB;&#x5B83;&#x6700;&#x8FD1;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x3002;&#x6BCF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4F1A;&#x6839;&#x636E;&#x805A;&#x7C7B;&#x4E2D;&#x73B0;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x88AB;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C06;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x3002; &#x6838;&#x5FC3;&#x601D;&#x60F3;&#x2003;&#x2003;1. &#x6C42;&#x51FA;k&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;a1,a2, &#x2026; ,ak a_i=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_j}{\sum}{x_i}&#x2003;&#x2003;2. &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6837;&#x672C;xj&#xFF0C;&#x5C06;&#x5176;&#x6807;&#x8BB0;&#x4E3A;&#x8DDD;&#x79BB;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;ai&#x6700;&#x8FD1;&#x7684;&#x7C7B;&#x522B;j y_j=\underset{i}min\{\sqrt{\sum_{j=1}^n \lVert x_j-a_i \rVert}\}&#x2003;&#x2003;3. &#x91CD;&#x590D;1&#xFF0C;2&#x76F4;&#x5230;&#x6EE1;&#x8DB3;&#x67D0;&#x4E2A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6; &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;KMEANS_main.m12345678910111213141516171819202122232425262728293031323334353637383940414243444546clear;clc;close all;%&#x7C7B;&#x522B;&#x6570;&#x76EE;&#xFF0C;&#x8BF7;&#x8F93;&#x5165;&#x5927;&#x4E8E;1&#x7684;&#x6570;class_num=3;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[rand(1,500)*100-20;rand(1,500)];%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end%&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;loc_center=zeros(feat_num,class_num);%&#x5982;&#x679C;&#x7C7B;&#x522B;&#x6570;&#x5927;&#x4E8E;&#x6837;&#x672C;&#x6570;&#x6216;&#x8005;&#x7C7B;&#x522B;&#x6570;&#x5C0F;&#x4E8E;1&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x5206;&#x7C7B;if class_num&gt;sample_num||class_num&lt;1 disp(&apos;ERROR!&apos;)else %&#x5982;&#x679C;&#x7C7B;&#x522B;&#x6570;&#x7B49;&#x4E8E;1&#xFF0C;&#x5219;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x90FD;&#x5C5E;&#x4E8E;&#x8BE5;&#x7C7B;&#x522B;,&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x4E3A;&#x6240;&#x6709;&#x6837;&#x672C;&#x7684;&#x4E2D;&#x70B9; if class_num==1 y=ones(1,sample_num); loc_center(:,1)=sum(x,2)/sample_num; k=0; else %&#x53D6;&#x524D;class_num&#x4E2A;&#x6837;&#x672C;&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x7C7B;&#x522B; loc_center=x_scale(:,1:class_num); %ISO&#x805A;&#x7C7B;&#x6CD5; [y,loc_center,k]=KMEANS_classify(x_scale,loc_center,sample_num,class_num); %&#x5C06;&#x7F29;&#x653E;&#x540E;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x590D;&#x539F; for i=1:feat_num loc_center(i,:)=loc_center(i,:)*(max(x(i,:))-min(x(i,:)))+min(x(i,:)); end end if k&gt;=1000 disp(&apos;Incorrect Classify&apos;) else %&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A; if feat_num==2 KMEANS_display(x,y,loc_center,sample_num,class_num) else disp(&apos;The Feature Is Not Two-Dimensional&apos;); end endend KMEANS_classify.m123456789101112131415161718192021222324252627282930function [y,loc_center,k]=KMEANS_classify(x_scale,loc_center,sample_num,class_num)%&#x8BBE;&#x7F6E;&#x8FED;&#x4EE3;&#x6B21;&#x6570;k=0;while 1 %&#x521D;&#x59CB;&#x5316;&#x6700;&#x65B0;&#x7684;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3; loc_center_new=zeros(size(loc_center)); distance=zeros(class_num,sample_num); %distance&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB; for i=1:class_num distance(i,:)=sum((x_scale-repmat(loc_center(:,i),1,sample_num)).^2); end %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x54EA;&#x4E00;&#x7C7B;&#x6700;&#x8FD1; [~,y]=min(distance); %&#x66F4;&#x65B0;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3; for i=1:class_num loc_center_new(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); end %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x7C7B;&#x4E2D;&#x5FC3;&#x76F8;&#x7B49;&#x5219;&#x5206;&#x7C7B;&#x5B8C;&#x6BD5; if isequal(loc_center_new,loc_center) break; %&#x5426;&#x5219;&#x7EE7;&#x7EED;&#x5206;&#x7C7B; else loc_center=loc_center_new; k=k+1; %&#x5982;&#x679C;&#x5206;&#x7C7B;&#x6B21;&#x6570;&#x8FBE;&#x5230;1000&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED3;&#x675F;&#xFF0C;&#x5219;&#x5F3A;&#x5236;&#x5206;&#x7C7B;&#x7ED3;&#x675F; if k&gt;=1000 break; end endend KMEANS_display.m12345678910111213function KMEANS_display(x,y,loc_center,sample_num,class_num)hold on;color_bar=zeros(class_num,3);%&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)]; plot(loc_center(1,i),loc_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)end%&#x753B;&#x51FA;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x7528;o&#x8868;&#x793A;for i=1:sample_num plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002; &#x5927;&#x6570;&#x636E;&#x96C6;&#x65F6;&#xFF0C;&#x6709;&#x8F83;&#x597D;&#x7684;&#x4F38;&#x7F29;&#x6027;&#x548C;&#x9AD8;&#x6548;&#x7387;&#x3002; &#x5F53;&#x6BCF;&#x7C7B;&#x6570;&#x636E;&#x8FD1;&#x4F3C;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#xFF0C;&#x6548;&#x679C;&#x5F88;&#x597D;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; k&#x662F;&#x7528;&#x6237;&#x8BBE;&#x5B9A;&#xFF0C;&#x4E0D;&#x540C;k&#x503C;&#x7ED3;&#x679C;&#x4E0D;&#x540C;&#x3002; &#x5BF9;&#x521D;&#x59CB;&#x4E2D;&#x5FC3;&#x70B9;&#x654F;&#x611F;&#x3002; &#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002; &#x79BB;&#x7FA4;&#x503C;&#x5BF9;&#x6A21;&#x578B;&#x7684;&#x5F71;&#x54CD;&#x8F83;&#x5927;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x521D;&#x59CB;&#x7C7B;&#x522B;&#x6570;k&#xFF0C;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;T op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;,&#x5E76;&#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3; op2=&gt;operation: &#x5229;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x5BF9;&#x6570;&#x636E;&#x5206;&#x7C7B;&#xFF0C;&#x5F97;&#x5230;&#x6807;&#x7B7E;Y op3=&gt;operation: &#x83B7;&#x53D6;&#x65B0;&#x805A;&#x7C7B;&#x4E2D;&#x5FC3; cond1=&gt;condition: &#x805A;&#x7C7B;&#x4E2D;&#x5FC3;&#x662F;&#x5426;&#x6539;&#x53D8;&#x6216;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x5C0F;&#x4E8E;T&#xFF1F; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;op2-&gt;op3-&gt;cond1 cond1(yes,right)-&gt;op2 cond1(no)-&gt;o-&gt;e{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Travelling In HangZhou]]></title>
    <url>%2F2019%2F05%2F02%2FTravelling%20Diaries_hangzhou%2F</url>
    <content type="text"><![CDATA[&#x56DB;&#x6708;&#x676D;&#x5DDE;&#xFF0C;&#x4E9B;&#x8BB8;&#x8BB0;&#x5FC6;&#x3002; ADu:&#x4F60;&#x6700;&#x559C;&#x6B22;&#x7684;&#x989C;&#x8272;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; Cmilly:&#x5929;&#x7A7A;&#x4E00;&#x6837;&#x7684;&#x84DD;&#x8272;&#x3002; &#x90A3;&#x5929;&#x7684;&#x9633;&#x5149;&#x548C;&#x7166;&#xFF0C;&#x67D4;&#x8F6F;&#x5F97;&#x5026;&#x4EBA;&#xFF0C;&#x8F7B;&#x98CE;&#x5439;&#x8D77;&#x6811;&#x53F6;&#xFF0C;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x5982;&#x68A6;&#x4F3C;&#x5E7B;&#x3002; &#x4E5D;&#x6EAA;&#x70DF;&#x6811; &#x2003;&#x2003;&#x521D;&#x5165;&#x4E5D;&#x6EAA;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x4F53;&#x5473;&#x5230;&#x5979;&#x7684;&#x6C14;&#x8D28;&#xFF0C;&#x5C06;&#x81EA;&#x5DF1;&#x5B89;&#x653E;&#x4E8E;&#x5C71;&#x6DA7;&#x5C0F;&#x9053;&#xFF0C;&#x4E45;&#x800C;&#x4E45;&#x4E4B;&#xFF0C;&#x5BDF;&#x89C9;&#x5DF2;&#x88AB;&#x4E00;&#x80A1;&#x6E05;&#x98CE;&#x5305;&#x56F4;&#xFF0C;&#x4EFF;&#x4F5B;&#x662F;&#x8EAB;&#x5904;&#x68EE;&#x6797;&#x4E4B;&#x5883;&#x3002;&#x60F3;&#x8D77;&#x5728;&#x7E41;&#x534E;&#x95F9;&#x5E02;&#xFF0C;&#x6240;&#x89C1;&#x4E4B;&#x5904;&#xFF0C;&#x4EBA;&#x6D77;&#x6D8C;&#x52A8;&#x3002;&#x5BF9;&#x6BD4;&#x4E8E;&#x6B64;&#xFF0C;&#x771F;&#x771F;&#x5207;&#x5207;&#x4F53;&#x4F1A;&#x5230;&#x4E00;&#x79CD;&#x6C89;&#x6EBA;&#x3002; &#x2003;&#x2003;&#x6E29;&#x6696;&#x7684;&#x5929;&#x6C14;&#xFF0C;&#x6F2B;&#x6B65;&#x5728;&#x4E5D;&#x6EAA;&#x5341;&#x516B;&#x6DA7;&#xFF0C;&#x6B22;&#x5FEB;&#x7684;&#x9C7C;&#x513F;&#x5728;&#x6C34;&#x4E2D;&#x6E38;&#x6765;&#x6E38;&#x53BB;&#xFF0C;&#x770B;&#x7740;&#x8FDC;&#x5904;&#x8D77;&#x4F0F;&#x7684;&#x5C0F;&#x5C71;&#xFF0C;&#x6E56;&#x8FB9;&#x5C0F;&#x8DEF;&#x4E0A;&#x5C11;&#x6709;&#x4EBA;&#x8D70;&#x3002;&#x5148;&#x662F;&#x7ECF;&#x8FC7;&#x4E00;&#x7247;&#x897F;&#x6E56;&#x9F99;&#x4E95;&#x8336;&#x4E61;&#xFF0C;&#x5C06;&#x81EA;&#x5DF1;&#x7F6E;&#x8EAB;&#x4E8E;&#x90CA;&#x5916;&#x7530;&#x5730;&#x4E4B;&#x95F4;&#xFF0C;&#x56DE;&#x5934;&#x671B;&#x53BB;&#x5DF2;&#x662F;&#x4E00;&#x5E55;&#x7FE0;&#x7EFF;&#x3002; &#x2003;&#x2003;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x5EFA;&#x5728;&#x4E5D;&#x6EAA;&#x5C71;&#x8170;&#xFF0C;&#x8981;&#x4E00;&#x76F4;&#x4E0A;&#x884C;&#xFF0C;&#x544A;&#x522B;&#x4E86;&#x90A3;&#x4E00;&#x62B9;&#x7EFF;&#x610F;&#x76CE;&#x7136;&#xFF0C;&#x62AC;&#x5934;&#x671B;&#x671B;&#x5929;&#x7A7A;&#xFF0C;&#x52A0;&#x7D27;&#x4E86;&#x6B65;&#x4F10;&#x3002;&#x9053;&#x8DEF;&#x4E24;&#x8FB9;&#x690D;&#x88AB;&#x7E41;&#x8302;&#xFF0C;&#x5F62;&#x6210;&#x8FDE;&#x7EF5;&#x7684;&#x6E7F;&#x5730;&#x3002;&#x65F6;&#x800C;&#x53EF;&#x4EE5;&#x9082;&#x9005;&#x5404;&#x7C7B;&#x6816;&#x606F;&#x4E8E;&#x6B64;&#x7684;&#x6C34;&#x9E1F;&#xFF0C;&#x4E00;&#x7FA4;&#x7FA4;&#x96CF;&#x9E1F;&#x7531;&#x6210;&#x9E1F;&#x5E26;&#x7740;&#x5728;&#x8302;&#x5BC6;&#x82A6;&#x82C7;&#x4E1B;&#x4E2D;&#x63A0;&#x8FC7;&#xFF0C;&#x9047;&#x89C1;&#x4EBA;&#x65F6;&#x4FBF;&#x4F1A;&#x4ED3;&#x7687;&#x9003;&#x53BB;&#x3002; &#x2003;&#x2003;&#x4E0D;&#x89C9;&#x5DF2;&#x5230;&#x5C71;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x8FDC;&#x5904;&#x770B;&#x5C71;&#x7684;&#x90A3;&#x79CD;&#x9065;&#x8FDC;&#x4E0D;&#x53EF;&#x53CA;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x662F;&#x611F;&#x53D7;&#x5230;&#x4E00;&#x79CD;&#x795E;&#x5723;&#x4E0D;&#x53EF;&#x4FB5;&#x72AF;&#x3002;&#x6EAA;&#x4E2D;&#x6C34;&#x8D28;&#x8FD9;&#x822C;&#x6E05;&#x6F88;&#xFF0C;&#x6E90;&#x4E8E;&#x751F;&#x6001;&#x7684;&#x4FDD;&#x62A4;&#x3002;&#x6211;&#x5BF9;&#x676D;&#x5DDE;&#x7684;&#x5370;&#x8C61;&#xFF0C;&#x9664;&#x4E86;&#x4FBF;&#x6377;&#x7684;&#x652F;&#x4ED8;&#x4EE5;&#x5916;&#x5C31;&#x662F;&#x4EBA;&#x4EEC;&#x7684;&#x7D20;&#x8D28;&#x3002;&#x5728;&#x6B64;&#x8FC7;&#x4E00;&#x4E2A;&#x9A6C;&#x8DEF;&#x90FD;&#x4F1A;&#x8BA9;&#x6211;&#x70ED;&#x6CEA;&#x76C8;&#x7736;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x4F60;&#x4E0D;&#x4F1A;&#x770B;&#x5230;&#x57CE;&#x5E02;&#x91CC;&#x6D51;&#x6D4A;&#x7684;&#x7A7A;&#x6C14;&#x548C;&#x6C61;&#x6C34;&#xFF0C;&#x88AB;&#x53D6;&#x800C;&#x4EE3;&#x4E4B;&#x7684;&#x662F;&#x5145;&#x65A5;&#x8FD9;&#x7EFF;&#x8336;&#x6E05;&#x9999;&#x7684;&#x82AC;&#x82B3;&#x548C;&#x6E05;&#x6F88;&#x5954;&#x6D41;&#x7684;&#x6C34;&#x6E20;,&#x5979;&#x4EEC;&#x90FD;&#x662F;&#x8FD9;&#x6DF1;&#x5C71;&#x7684;&#x6770;&#x4F5C;&#x3002; &#x2003;&#x2003;&#x6E38;&#x5C71;&#x73A9;&#x6C34;&#x4E0D;&#x77E5;&#x65F6;&#x95F4;&#x4E4B;&#x5FEB;&#x4E5F;&#xFF0C;&#x968F;&#x7740;&#x5C0F;&#x817F;&#x7684;&#x9178;&#x75DB;&#xFF0C;&#x5DF2;&#x77E5;&#x811A;&#x7A0B;&#x7684;&#x9065;&#x8FDC;&#xFF0C;&#x518D;&#x62AC;&#x5934;&#x65F6;&#x5DF2;&#x6765;&#x5230;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x3002;&#x8EAB;&#x5728;&#x5C71;&#x4E2D;&#x4E0D;&#x77E5;&#x5C71;&#xFF0C;&#x867D;&#x4E0D;&#x5F97;&#x5168;&#x8C8C;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x5C71;&#x6DA7;&#x6D41;&#x6CFB;&#x800C;&#x4E0B;&#x7684;&#x6EAA;&#x6D41;&#x3002;&#x56DE;&#x5473;&#x592A;&#x767D;&#x8BD7;&#x53E5;&#xFF0C;&#x9887;&#x6709;&#x94F6;&#x6CB3;&#x843D;&#x4E5D;&#x5929;&#x4E4B;&#x610F;&#x3002; &#x6EAA;&#x4E2D;&#x6EAA; &#x2003;&#x2003;&#x5728;&#x4E5D;&#x6EAA;&#x70DF;&#x6811;&#x4E0D;&#x505A;&#x8FC7;&#x591A;&#x6D41;&#x8FDE;&#xFF0C;&#x76F4;&#x5954;&#x6EAA;&#x4E2D;&#x6EAA;&#xFF0C;&#x72B9;&#x5982;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x4E00;&#x822C;&#x795E;&#x79D8;&#xFF0C;&#x6E05;&#x6F88;&#x7684;&#x6C34;&#x6D17;&#x6DA4;&#x8FD9;&#x4E16;&#x95F4;&#x5C18;&#x4FD7;&#xFF0C;&#x6CB3;&#x5E95;&#x5C42;&#x6B21;&#x5206;&#x660E;&#xFF0C;&#x7ED9;&#x6C34;&#x6DFB;&#x52A0;&#x4E00;&#x80A1;&#x529B;&#x91CF;&#xFF0C;&#x6C34;&#x9762;&#x51B2;&#x5237;&#x8FD9;&#x77F3;&#x9636;&#xFF0C;&#x4EFF;&#x4F5B;&#x51C0;&#x5316;&#x6211;&#x7684;&#x5FC3;&#x7075;&#x3002;&#x65F6;&#x800C;&#x5FEB;&#xFF0C;&#x65F6;&#x800C;&#x6162;&#xFF0C;&#x65F6;&#x800C;&#x6C79;&#x6C79;&#x800C;&#x6765;&#xFF0C;&#x65F6;&#x800C;&#x6F7A;&#x6F7A;&#x6D41;&#x52A8;&#x3002;&#x6C34;&#x4E2D;&#x6709;&#x8BB8;&#x591A;&#x91D1;&#x9C7C;&#x9CA4;&#x9C7C;&#xFF0C;&#x4E09;&#x4E94;&#x6210;&#x7FA4;&#xFF0C;&#x4E00;&#x53E5;&#x201C;&#x8C2D;&#x4E2D;&#x9C7C;&#x53EF;&#x767E;&#x8BB8;&#x5934;&#xFF0C;&#x7686;&#x82E5;&#x7A7A;&#x6E38;&#x65E0;&#x6240;&#x4F9D;&#x201D;&#x6D8C;&#x4E0A;&#x5FC3;&#x5934;&#x3002; &#x2003;&#x2003;&#x8FD9;&#x91CC;&#x7684;&#x98CE;&#x666F;&#x662F;&#x4E0D;&#x52A0;&#x4EFB;&#x4F55;&#x4FEE;&#x9970;&#x7684;&#xFF0C;&#x4ECE;&#x8FDC;&#x5904;&#x770B;&#xFF0C;&#x5C71;&#x4E0A;&#x4E91;&#x96FE;&#x98D8;&#x6E3A;&#xFF0C;&#x50CF;&#x4EBA;&#x95F4;&#x4ED9;&#x5883;&#x4E00;&#x6837;&#x3002;&#x987A;&#x7740;&#x65C1;&#x8FB9;&#x7684;&#x5D0E;&#x5C96;&#x5C0F;&#x9053;&#x6F2B;&#x6B65;&#xFF0C;&#x7A7A;&#x6C14;&#x4E2D;&#x5939;&#x6742;&#x6CE5;&#x571F;&#x7684;&#x6C14;&#x606F;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x547C;&#x5438;&#xFF0C;&#x56DE;&#x5F52;&#x4E8E;&#x81EA;&#x7136;&#x3002;&#x5C71;&#x4E4B;&#x7F8E;&#xFF0C;&#x6C34;&#x4E4B;&#x7F8E;&#xFF0C;&#x7EFF;&#x6797;&#x626C;&#x98CE;&#xFF0C;&#x767D;&#x6C34;&#x6FC0;&#x6DA7;&#x3002; &#x2003;&#x2003;&#x5929;&#x8272;&#x6E10;&#x665A;&#xFF0C;&#x60A0;&#x7136;&#x81EA;&#x5F97;&#x3002;&#x5929;&#x5E55;&#x5E7D;&#x84DD;&#xFF0C;&#x5C71;&#x8DEF;&#x4E0A;&#x8FD8;&#x6709;&#x6591;&#x9A73;&#x7684;&#x6811;&#x5F71;&#xFF0C;&#x866B;&#x9E1F;&#x5E7D;&#x5A49;&#x7684;&#x50AC;&#x4FC3;&#x5BA2;&#x4EBA;&#x7684;&#x5F52;&#x7A0B;&#x3002;&#x6211;&#x60F3;&#x5DF2;&#x5230;&#x5206;&#x522B;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x5C71;&#x8DEF;&#x5E76;&#x4E0D;&#x9661;&#x5CED;&#xFF0C;&#x987A;&#x7740;&#x659C;&#x5761;&#x5411;&#x4E0B;&#x884C;&#x8D70;&#xFF0C;&#x5F80;&#x5F80;&#x8D70;&#x7684;&#x6781;&#x5176;&#x60EC;&#x610F;&#x3002;&#x5929;&#x6C14;&#x5FAE;&#x51C9;&#xFF0C;&#x665A;&#x98CE;&#x5439;&#x8FC7;&#x94B1;&#x6C5F;&#x6C34;&#xFF0C;&#x7565;&#x5E26;&#x6709;&#x4E00;&#x4E9B;&#x6F6E;&#x6E7F;&#x7684;&#x5473;&#x9053;&#xFF0C;&#x676D;&#x5DDE;&#x7684;&#x6625;&#x5929;&#x6CA1;&#x6709;&#x51AC;&#x540E;&#x7684;&#x5BD2;&#x51B7;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x590F;&#x521D;&#x7684;&#x71E5;&#x70ED;&#xFF0C;&#x6625;&#x98CE;&#x5439;&#x5F97;&#x6E38;&#x4EBA;&#x9189;&#x3002;&#x5728;&#x6625;&#x98CE;&#x4E2D;&#x6211;&#x5750;&#x4E0A;&#x4E86;&#x56DE;&#x53BB;&#x7684;&#x8F66;&#xFF0C;&#x5728;&#x8F66;&#x4E0A;&#x4E0D;&#x77E5;&#x4F55;&#x65F6;&#x7ADF;&#x5DF2;&#x6C89;&#x9189;&#x3002; &#x2003;&#x2003;&#x559C;&#x7231;&#x201C;&#x6625;&#x6DF1;&#x201D;&#x4E8C;&#x5B57;&#xFF0C;&#x65E9;&#x83BA;&#x65B0;&#x71D5;&#xFF0C;&#x4E71;&#x82B1;&#x6D45;&#x8349;&#xFF0C;&#x6625;&#x5929;&#x5728;&#x4E00;&#x970E;&#x95F4;&#x63A0;&#x8FC7;&#x9621;&#x964C;&#x3002;&#x5CE5;&#x5D58;&#x82B1;&#x8349;&#x4E00;&#x5982;&#x4F7F;&#x8005;&#xFF0C;&#x5531;&#x7740;&#x9882;&#x6B4C;&#x3002;&#x6B64;&#x540E;&#x6625;&#x6DF1;&#xFF0C;&#x7E41;&#x5BC6;&#x9999;&#x5F7B;&#x3002;&#x8D8A;&#x662F;&#x7231;&#x5F97;&#x76DB;&#x5BC6;&#xFF0C;&#x8D8A;&#x662F;&#x6028;&#x5F97;&#x6DF1;&#x6C93;&#x3002;&#x5343;&#x5E06;&#x8FC7;&#x5C3D;&#xFF0C;&#x5C71;&#x8272;&#x5165;&#x753B;&#x3002;&#x66F4;&#x662F;&#x6625;&#x6DF1;&#x5E7D;&#x9759;&#xFF0C;&#x81EA;&#x5F97;&#x60EC;&#x610F;&#x7545;&#x7F8E;&#x3002;&#x4F9D;&#x65E7;&#x884C;&#x4E8E;&#x5C18;&#x4E16;&#xFF0C;&#x4F46;&#x80FD;&#x4FDD;&#x6709;&#x4E00;&#x9897;&#x9614;&#x5BC2;&#x7684;&#x5FC3;&#xFF0C;&#x800C;&#x53C8;&#x80FD;&#x65F6;&#x65F6;&#x4ECE;&#x5176;&#x4E2D;&#x83B7;&#x53D6;&#x4E30;&#x76DB;&#x7684;&#x7F8E;&#x610F;&#x3002; &#x2003;&#x2003;&#x6625;&#x4E8B;&#x5230;&#x6E05;&#x660E;&#xFF0C;&#x5341;&#x5206;&#x82B1;&#x67F3;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Travelling Diaries</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[分裂的层次聚类(DIANA)]]></title>
    <url>%2F2019%2F05%2F02%2FMachine%20Learning_DIANA%2F</url>
    <content type="text"><![CDATA[&#x5206;&#x88C2;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;DIANA(divisive analysis):&#x91C7;&#x7528;&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6700;&#x521D;&#x5C06;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x7F6E;&#x4E8E;&#x4E00;&#x4E2A;&#x7C7B;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x67D0;&#x4E9B;&#x51C6;&#x5219;&#x5C06;&#x8FD9;&#x4E9B;&#x7C7B;&#x522B;&#x9010;&#x6E10;&#x7EC6;&#x5206;&#x3002;&#x7EC6;&#x5206;&#x7684;&#x8FC7;&#x7A0B;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x8FBE;&#x5230;&#x9884;&#x671F;&#x7684;&#x6570;&#x76EE;&#x3002; &#x5206;&#x88C2;&#x51C6;&#x5219;&#x2003;&#x2003;&#x627E;&#x51FA;&#x6240;&#x6709;&#x7C7B;&#x522B;&#x4E2D;&#x5230;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x518D;&#x5C06;&#x8BE5;&#x6837;&#x672C;&#x5355;&#x72EC;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B;&#x3002; d_{max}=\underset{C_i \subseteq C}{max}(\underset{x_i \in C_i}{max}{\lVert x_i-\overline C_i \rVert}),其中\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i} &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;DIANA_main.m12345678910111213141516171819202122232425clear;clc;close all;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,100)+5;rand(1,100)+10],[rand(1,100)+10;rand(1,100)+5],[rand(1,100)+15;rand(1,100)+10]];%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num=3;%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end[y,class_center]=DIANA_classify(x_scale,sample_num,class_num);%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;for i=1:feat_num class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));end%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 DIANA_display(x,y,class_center,sample_num,class_num);else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end DIANA_classify.m12345678910111213141516171819202122232425262728293031323334353637383940414243444546function [y,class_center]=DIANA_classify(x_scale,sample_num,class_num)if class_num==1 class_center=sum(x_scale,2)/sample_num; y=ones(1,sample_num);else %&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x90FD;&#x89C6;&#x4E3A;0&#x7C7B; y=zeros(1,sample_num); distance=zeros(sample_num); for i=1:sample_num distance(i,:)=sum((x_scale-repmat(x_scale(:,i),1,sample_num)).^2); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C; [row,col]=find(distance==max(max(distance)),1); %&#x5C06;row&#x5206;&#x4E3A;&#x7B2C;&#x4E00;&#x7C7B;,col&#x5206;&#x4E3A;&#x7B2C;&#x4E8C;&#x7C7B; y(row)=1; y(col)=2; %&#x8BBE;&#x7F6E;&#x7B2C;&#x4E00;&#x7C7B;&#x548C;&#x7B2C;&#x4E8C;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,1)=x_scale(:,row); class_center(:,2)=x_scale(:,col); %&#x76EE;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570; class_num_temp=2; distance_min=zeros(1,sample_num); while class_num_temp~=class_num for i=1:sample_num %&#x6C42;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x8DDD;&#x79BB; distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2); %&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5230;&#x6BCF;&#x4E00;&#x7C7B;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x503C; distance_min(i)=distance(find(distance==min(distance),1)); end %&#x627E;&#x5230;&#x8DDD;&#x79BB;&#x6700;&#x5927;&#x503C;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B; temp=find(distance_min==max(distance_min),1); %&#x7C7B;&#x522B;&#x6570;+1 class_num_temp=class_num_temp+1; %&#x4FEE;&#x6539;&#x7C7B;&#x522B;&#x4FE1;&#x606F; y(temp)=class_num_temp; for i=1:class_num_temp %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#x7684;&#x4E2D;&#x5FC3; class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); end end %&#x91C7;&#x7528;&#x6700;&#x8FD1;&#x90BB;&#x8FDB;&#x884C;&#x5206;&#x7C7B; for i=1:sample_num distance=sum((class_center-repmat(x_scale(:,i),1,class_num_temp)).^2); y(i)=find(distance==min(distance),1); endend DIANA_display.m12345678910111213function DIANA_display(x,y,class_center,sample_num,class_num)color_bar=zeros(class_num,3);hold on;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)]; %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A; plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)endfor i=1:sample_num %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x5206;&#x88C2;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;&#x3002; &#x6267;&#x884C;&#x6548;&#x7387;&#x4F4E;O(n&#xB2;)&#xFF0C;&#x4E0D;&#x9002;&#x5408;&#x5927;&#x6570;&#x636E;&#x96C6;&#x3002; &#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x6700;&#x7EC8;&#x7C7B;&#x522B;&#x6570;N op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;,&#x5E76;&#x5C06;&#x6240;&#x6709;&#x6837;&#x672C;&#x90FD;&#x4F5C;&#x4E3A;&#x4E00;&#x7C7B; op2=&gt;operation: &#x5206;&#x88C2;&#x5230;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD;&#x6700;&#x5927;&#x7684;&#x6837;&#x672C; cond1=&gt;condition: &#x5F53;&#x524D;&#x7C7B;&#x522B;&#x6570;&#x662F;&#x5426;&#x7B49;&#x4E8E;N&#xFF1F; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;cond1 cond1(yes)-&gt;o-&gt;e cond1(no)-&gt;op2(right)-&gt;cond1{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[凝聚的层次聚类(AGNES)]]></title>
    <url>%2F2019%2F05%2F01%2FMachine%20Learning_AGNES%2F</url>
    <content type="text"><![CDATA[&#x51DD;&#x805A;&#x7684;&#x5C42;&#x6B21;&#x805A;&#x7C7B;&#x65B9;&#x6CD5; &#x539F;&#x7406;&#x89E3;&#x8BFB;&#x2003;&#x2003;AGNES(agglomerative nesting):&#x91C7;&#x7528;&#x81EA;&#x5E95;&#x5411;&#x4E0A;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6700;&#x521D;&#x5C06;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x67D0;&#x4E9B;&#x51C6;&#x5219;&#x5C06;&#x8FD9;&#x4E9B;&#x7C7B;&#x522B;&#x9010;&#x4E00;&#x5408;&#x5E76;&#x3002;&#x5408;&#x5E76;&#x7684;&#x8FC7;&#x7A0B;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x8FBE;&#x5230;&#x9884;&#x671F;&#x7684;&#x6570;&#x76EE;&#x3002; &#x5408;&#x5E76;&#x51C6;&#x5219;&#x2003;&#x2003;1. &#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x3002; d_{min}(C_i,C_j)=\underset{x_i \in C_i,x_j \in C_j}{min}{\lVert x_i-x_j \rVert}&#x2003;&#x2003;2. &#x6700;&#x5927;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x6700;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x3002; d_{max}(C_i,C_j)=\underset{x_i \in C_i,x_j \in C_j}{max}{\lVert x_i-x_j \rVert} &#x2003;&#x2003;3. &#x5747;&#x503C;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E2D;&#x6837;&#x672C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x3002; d_{mean}(C_i,C_j)={\lVert \overline {C_i}- \overline {C_j} \rVert},其中\overline {C_i}=\frac {1}{\lvert C_i \rvert}\underset{x_i \in C_i}{\sum}{x_i}&#x2003;&#x2003;4. &#x5E73;&#x5747;&#x8DDD;&#x79BB;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E2D;&#x6837;&#x672C;&#x95F4;&#x4E24;&#x4E24;&#x8DDD;&#x79BB;&#x7684;&#x5E73;&#x5747;&#x503C;&#x4F5C;&#x4E3A;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x3002; d_{avg}(C_i,C_j)=\frac {1}{\lvert C_i \rvert \lvert C_j \rvert}\underset{x_i \in C_i}{\sum}\underset{x_j \in C_j}{\sum}{\lVert x_i-x_j \rVert} &#x7B97;&#x6CD5;&#x6D41;&#x7A0B; &#x4EE3;&#x7801;&#x5B9E;&#x6218;AGNES_main.m12345678910111213141516171819202122232425clear;clc;close all;%&#x8F93;&#x5165;x&#x7684;&#x77E9;&#x9635;x=[[rand(1,100)+5;rand(1,100)+10],[rand(1,100)+10;rand(1,100)+5],[rand(1,100)+15;rand(1,100)+10]];%&#x5E0C;&#x671B;&#x5212;&#x5206;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num=3;%&#x6837;&#x672C;&#x6570;sample_num=size(x,2);%&#x7279;&#x5F81;&#x6570;&#x76EE;feat_num=size(x,1);%&#x5C3A;&#x5EA6;&#x7F29;&#x653E;&#x5230;0-1x_scale=zeros(size(x));for i=1:feat_num x_scale(i,:)=(x(i,:)-min(x(i,:)))/(max(x(i,:))-min(x(i,:)));end[y,class_center]=AGNES_classify(x_scale,sample_num,class_num);%&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#x5C3A;&#x5EA6;&#x590D;&#x539F;for i=1:feat_num class_center(i,:)=(max(x(i,:))-min(x(i,:)))*class_center(i,:)+min(x(i,:));end%&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x7279;&#x5F81;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED8;&#x56FE;&#x8868;&#x793A;if feat_num==2 AGNES_display(x,y,class_center,sample_num,class_num);else disp(&apos;The Feature Is Not Two-Dimensional&apos;);end AGNES_classify.m123456789101112131415161718192021222324252627282930function [y,class_center]=AGNES_classify(x_scale,sample_num,class_num)%&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x7C7B;&#x522B;y=1:sample_num;%&#x5F53;&#x524D;&#x7684;&#x7C7B;&#x522B;&#x6570;class_num_temp=sample_num;%&#x521D;&#x59CB;&#x5316;&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x4E2D;&#x5FC3;class_center=x_scale;while class_num_temp~=class_num %&#x521D;&#x59CB;&#x5316;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD; center_distance=zeros(class_num_temp); for i=1:class_num_temp %&#x8BA1;&#x7B97;&#x7C7B;&#x522B;&#x4E2D;&#x5FC3;&#x8DDD; center_distance(i,:)=sum((class_center-repmat(class_center(:,i),1,class_num_temp)).^2); center_distance(i,i)=inf; end %&#x4ECE;&#x4E2D;&#x5FC3;&#x8DDD;&#x4E2D;&#x627E;&#x5230;&#x6700;&#x5C0F;&#x503C; [row,col]=find(center_distance==min(min(center_distance)),1); %&#x5C06;&#x4E24;&#x7C7B;&#x5408;&#x5E76; y(y==col)=row; %&#x66F4;&#x65B0;&#x7C7B;&#x522B;&#xFF0C;&#x4ECE;&#x7B2C;1&#x7C7B;&#x8FDE;&#x7EED;&#x5206;&#x7C7B; y(y&gt;col)=y(y&gt;col)-1; %&#x7C7B;&#x522B;&#x6570;-1 class_num_temp=class_num_temp-1; %&#x521D;&#x59CB;&#x5316;&#x6837;&#x672C;&#x4E2D;&#x5FC3; class_center=zeros(2,class_num_temp); for i=1:class_num_temp %&#x8BA1;&#x7B97;&#x5F53;&#x524D;&#x6BCF;&#x4E00;&#x7C7B;&#x7684;&#x6837;&#x672C;&#x4E2D;&#x5FC3; class_center(:,i)=sum(x_scale(:,y==i),2)/sum(y==i); endend AGNES_display.m12345678910111213function AGNES_display(x,y,class_center,sample_num,class_num)color_bar=zeros(class_num,3);hold on;for i=1:class_num color_bar(i,:)=[rand(1),rand(1),rand(1)]; %&#x7ED8;&#x5236;&#x6837;&#x672C;&#x4E2D;&#x5FC3;&#xFF0C;&#x7528;*&#x8868;&#x793A; plot(class_center(1,i),class_center(2,i),&apos;color&apos;,color_bar(i,:),&apos;marker&apos;,&apos;*&apos;)endfor i=1:sample_num %&#x7ED8;&#x5236;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x7528;o&#x8868;&#x793A; plot(x(1,i),x(2,i),&apos;color&apos;,color_bar(y(i),:),&apos;marker&apos;,&apos;o&apos;);endhold off; &#x5B9E;&#x9A8C;&#x7ED3;&#x679C; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4F18;&#x70B9;&#xFF1A; &#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x5408;&#x5E76;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x64A4;&#x9500;&#x3002; &#x6267;&#x884C;&#x6548;&#x7387;&#x4F4E;O(n&#xB2;)&#xFF0C;&#x4E0D;&#x9002;&#x5408;&#x5927;&#x6570;&#x636E;&#x96C6;&#x3002; &#x53EA;&#x9002;&#x5408;&#x5206;&#x5E03;&#x5448;&#x51F8;&#x578B;&#x6216;&#x8005;&#x7403;&#x5F62;&#x7684;&#x6570;&#x636E;&#x96C6;&#x3002;st=&gt;start: &#x5F00;&#x59CB; i=&gt;inputoutput: &#x8F93;&#x5165;&#x6570;&#x636E;X&#xFF0C;&#x6700;&#x7EC8;&#x7C7B;&#x522B;&#x6570;N op1=&gt;operation: &#x6570;&#x636E;&#x5F52;&#x4E00;&#x5316;,&#x5E76;&#x5C06;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x90FD;&#x5F53;&#x6210;&#x521D;&#x59CB;&#x7C7B; op2=&gt;operation: &#x5408;&#x5E76;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x7C7B; cond1=&gt;condition: &#x5F53;&#x524D;&#x7C7B;&#x522B;&#x6570;&#x662F;&#x5426;&#x7B49;&#x4E8E;N&#xFF1F; o=&gt;inputoutput: &#x8F93;&#x51FA;&#x6807;&#x7B7E;Y e=&gt;end: &#x7ED3;&#x675F; st-&gt;i-&gt;op1-&gt;cond1 cond1(yes)-&gt;o-&gt;e cond1(no)-&gt;op2(right)-&gt;cond1{&quot;scale&quot;:1,&quot;line-width&quot;:2,&quot;line-length&quot;:50,&quot;text-margin&quot;:10,&quot;font-size&quot;:12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ID3]]></title>
    <url>%2F2019%2F04%2F30%2FMachine%20Learning_ID3%2F</url>
    <content type="text"><![CDATA[&#x2003; Watermelon&#x1F349; 111111 &gt; 2222 33333 x = 100 * y + z - 10 / 33 + 10 % 3f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right ) 777 111 \hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx aaa bbb ccc ddd eee fff ggg hhh iii jjj document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>决策树</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[BP神经网络]]></title>
    <url>%2F2019%2F04%2F25%2FMachine%20Learning_BP%2F</url>
    <content type="text"><![CDATA[&#x2003; Watermelon&#x1F349; 111111 &gt; 2222 33333 x = 100 * y + z - 10 / 33 + 10 % 3f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right ) 777 111 \hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx aaa bbb ccc ddd eee fff ggg hhh iii jjj document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>聚类方法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[HK]]></title>
    <url>%2F2019%2F04%2F20%2FMachine%20Learning_HK%2F</url>
    <content type="text"><![CDATA[&#x2003; Watermelon&#x1F349; 111111 &gt; 2222 33333 x = 100 * y + z - 10 / 33 + 10 % 3f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right ) 777 111 \hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx aaa bbb ccc ddd eee fff ggg hhh iii jjj document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>决策树</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k近邻]]></title>
    <url>%2F2019%2F03%2F25%2FMachine%20Learning_KNN%2F</url>
    <content type="text"><![CDATA[&#x2003; Watermelon&#x1F349; 111111 &gt; 2222 33333 x = 100 * y + z - 10 / 33 + 10 % 3f=\lim_{x \to 0} \left ( \frac{\sin x}{x} \right ) 777 111 \hat{f}(\xi ):=\int_{-\infty }^{\infty }f(x)e^{-2\pi ix\xi}dx aaa bbb ccc ddd eee fff ggg hhh iii jjj document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>k近邻</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[personal recommendation]]></title>
    <url>%2F2019%2F03%2F22%2Fpersonal%20recommendation%2F</url>
    <content type="text"><![CDATA[leifengta xxxxxxx Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Computer Science</category>
        <category>personal recommendation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo Environment]]></title>
    <url>%2F2019%2F03%2F22%2FHexo%20GitHub1%2F</url>
    <content type="text"><![CDATA[Do you want a personal blog for yourself ?Follow me, please. &#x8FD9;&#x4E2A;&#x6559;&#x7A0B;&#x4E3B;&#x8981;&#x9488;&#x5BF9;&#x4E8E;Windows&#x64CD;&#x4F5C;&#x5E73;&#x53F0;&#xFF0C;&#x5982;&#x679C;&#x662F;Mac&#x6216;&#x8005;Linux&#x5E73;&#x53F0;&#x4E5F;&#x5927;&#x540C;&#x5C0F;&#x5F02;&#x3002; Install Node.js&#x53BB;&#x5B98;&#x7F51;https://nodejs.org &#x4E0B;&#x8F7D;&#x3002;Node.js&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5B89;&#x88C5;hexo&#xFF0C;npm&#x5F00;&#x5934;&#x7684;&#x547D;&#x4EE4;&#x90FD;&#x4F9D;&#x8D56;&#x4E8E;Node.js .&#x5982;&#x679C;&#x51FA;&#x73B0; bash: nmp: command not found&#x5219;&#x4EE3;&#x8868;&#x4F60;&#x7684;Node.js&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x3002; Install git&#x53BB;&#x5B98;&#x7F51;https://git-scm.com/download/win &#x4E0B;&#x8F7D;&#x3002;&#x6309;&#x7167;&#x8981;&#x6C42;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x7684;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002; Install hexo&#x5B89;&#x88C5;&#x6DD8;&#x5B9D;&#x955C;&#x50CF;npm install -g cnpm --registry=https://registry.npm.taobao.org &#x5B89;&#x88C5;hexo&#x6846;&#x67B6;cnpm install -g hexo-cli &#x5B89;&#x88C5;&#x8FDC;&#x7A0B;&#x90E8;&#x7F72;cnpm install hexo-deployer-git --save &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;Myblog&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x6587;&#x4EF6;&#x5939;,&#x4EE5;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;cd Myblog hexo&#x521D;&#x59CB;&#x5316;hexo init Deploy local files to GitHub&#x521B;&#x5EFA;GitHub&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5EFA;&#x7ACB;&#x4ED3;&#x5E93;&#x53BB;&#x5B98;&#x7F51;https://github.com &#x521B;&#x5EFA;git&#x4ED3;&#x5E93;&#x65F6;&#x5019;&#xFF0C;&#x4ED3;&#x5E93;&#x7684;&#x540D;&#x79F0;&#x6709;&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x3002;&#x6211;&#x7684;GitHub&#x4ED3;&#x5E93;&#x7528;&#x6237;&#x540D;&#x662F;USTCcoder,&#x90A3;&#x4E48;&#x6211;&#x521B;&#x5EFA;&#x7684;&#x4ED3;&#x5E93;&#x540D;&#x79F0;&#x5C31;&#x662F;USTCcoder.github.io,&#x6B64;&#x5904;&#x7684;&#x8B66;&#x544A;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x5DF2;&#x7ECF;&#x6709;&#x8FD9;&#x4E2A;&#x5E93;&#x4E86;&#x3002; &#x672C;&#x673A;git&#x521D;&#x59CB;&#x8BBE;&#x7F6E; &#x8BBE;&#x7F6E;&#x59D3;&#x540D;&#x548C;&#x90AE;&#x7BB1;&#x5730;&#x5740; 12git config --global user.name &apos;your name&apos;git config --global user.email &apos;your_email&apos; &#x751F;&#x6210;&#x672C;&#x5730;ssh keyssh-keygen -t rsa -C sa231035@mail.ustc.edu.cn-&#x5C06;&#x516C;&#x94A5;&#x653E;&#x5728;GitHub&#x4E0A;-&#x4F7F;&#x7528;&#x79C1;&#x4EBA;&#x5BC6;&#x94A5;&#x4E0E;GitHub&#x8FDB;&#x884C;&#x8BA4;&#x8BC1;&#x548C;&#x901A;&#x4FE1;ssh -T git@github.com &#x5C06;hexo&#x548C;github&#x8FDB;&#x884C;&#x5173;&#x8054;&#x5C06;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x7F51;&#x7AD9;&#x5730;&#x5740;&#x5199;&#x5165;&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#x4E2D; 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/USTCcoder/USTCcoder.github.io.git branch: master Deploy blogs to remote locations&#x65B0;&#x5EFA;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;hexo new &quot;my first blog&quot;&#x7136;&#x540E;&#x5728;myblog\source\_posts&#x4E2D;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;my first blog.md&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x91CC;&#x7F16;&#x8F91;&#x5373;&#x53EF;&#x3002; &#x7D20;&#x8D28;&#x4E09;&#x8FDE;123hexo cleanhexo ghexo s &#x5728;&#x672C;&#x5730;&#x9884;&#x89C8;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x3002; &#x63A8;&#x5230;&#x8FDC;&#x7AEF;hexo d&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5728;USTCcoder.github.io&#x4E2D;&#x770B;&#x5230;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x5566;&#xFF01;&#xFF01;&#xFF01; &#x5230;&#x6B64;&#x57FA;&#x672C;&#x7684;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x548C;&#x90E8;&#x7F72;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x6269;&#x5C55;&#x7684;&#x529F;&#x80FD;&#x4ECB;&#x7ECD;&#x3002; Install Next theme&#x5728;Myblog&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x8F93;&#x5165;git clone https://github.com/theme-next/hexo-theme-next.git themes/next&#x5728;&#x7AD9;&#x70B9;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x4FEE;&#x6539;theme: next&#x7D20;&#x8D28;&#x4E09;&#x8FDE;&#x5373;&#x53EF;&#x3002; &#x6269;&#x5C55;&#x529F;&#x80FD;1234567cnpm install hexo-generator-searchdb --save &#x6DFB;&#x52A0;&#x641C;&#x7D22;&#x529F;&#x80FD;cnpm install hexo-wordcount --save &#x6DFB;&#x52A0;&#x7EDF;&#x8BA1;&#x529F;&#x80FD;cnpm install hexo-helper-live2d --save cnpm install live2d-widget-model-wanko --save &#x6DFB;&#x52A0;&#x5BA0;&#x7269;cd themes\next git clone https://github.com/theme-next/theme-next-pace source/lib/pace &#x6DFB;&#x52A0;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x7279;&#x6548;cnpm install hexo-generator-feed --save &#x6DFB;&#x52A0;rss&#x529F;&#x80FD;cnpm uninstall hexo-generator-index --save cnpm install hexo-generator-index-pin-top --save &#x6DFB;&#x52A0;&#x535A;&#x6587;&#x7F6E;&#x9876;cnpm install hexo-math --save cnpm uninstall hexo-renderer-marked --save cnpm install hexo-renderer-kramed --save &#x6DFB;&#x52A0;LaTex&#x516C;&#x5F0F;&#x7F16;&#x8F91;&#x529F;&#x80FD; &#x5177;&#x4F53;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;Next&#x4E3B;&#x9898;&#x7684;&#x5B98;&#x65B9;&#x4F7F;&#x7528;&#x6587;&#x6863;http://theme-next.iissnan.com/&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo GitHub</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Personal Experiences]]></title>
    <url>%2F2019%2F03%2F18%2FPersonal%20Experiences1%2F</url>
    <content type="text"><![CDATA[leifengta xxxxxxx Welcome to [Hexo] document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Personal Experiences</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Image Processing]]></title>
    <url>%2F2019%2F03%2F18%2FImage%20Processing%20%2F</url>
    <content type="text"><![CDATA[leifengta xxxxxxx &#x675C;&#x675C;&#x7231;&#x6C64;&#x5706; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Image Processing</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux Ubuntu]]></title>
    <url>%2F2019%2F03%2F18%2FLinux%20Ubuntu1%2F</url>
    <content type="text"><![CDATA[leifengta xxxxxxx &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;- &#x76EE;&#x5F55;life is shortyou need python &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;- &#x53C2;&#x8003;&#x6587;&#x732E; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Linux Ubuntu</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Turing Reward in 2018]]></title>
    <url>%2F2018%2F03%2F22%2FTuringReward-2018%2F</url>
    <content type="text"><![CDATA[&#x2003;&#x2003;2019 &#x5E74; 3 &#x6708; 27 &#x65E5;&#xFF0C;ACM &#x5BA3;&#x5E03;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x4F4D;&#x5927;&#x725B; Yoshua Bengio&#x3001;Yann LeCun&#x3001;Geoffrey Hinton &#x56E0;&#x201C;&#x5728;&#x6982;&#x5FF5;&#x548C;&#x5DE5;&#x7A0B;&#x65B9;&#x9762;&#x4F7F;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6210;&#x4E3A;&#x8BA1;&#x7B97;&#x7684;&#x5173;&#x952E;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x7684;&#x7A81;&#x7834;&#x201D;&#x83B7;&#x5F97;&#x4E86; 2018 &#x5E74;&#x7684;&#x56FE;&#x7075;&#x5956;&#x3002;&#x8FD1;&#x5E74;&#x6765;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;&#x4E00;&#x76F4;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x3001;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x3001;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x548C;&#x673A;&#x5668;&#x4EBA;&#x6280;&#x672F;&#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x4E2D;&#x60CA;&#x4EBA;&#x7A81;&#x7834;&#x7684;&#x539F;&#x56E0;&#x3002;&#x5728; ACM &#x7684;&#x516C;&#x544A;&#x4E2D;&#x662F;&#x8FD9;&#x6837;&#x5199;&#x9053;&#x7684;&#xFF1A;&#x867D;&#x7136;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#x5F15;&#x5165;&#x4E86;&#x4EBA;&#x5DE5;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;&#x5E2E;&#x52A9;&#x8BA1;&#x7B97;&#x673A;&#x8BC6;&#x522B;&#x6A21;&#x5F0F;&#x548C;&#x6A21;&#x62DF;&#x4EBA;&#x7C7B;&#x667A;&#x80FD;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x4F46;&#x5230;&#x4E86; 21 &#x4E16;&#x7EAA;&#x521D;&#xFF0C;LeCun&#x3001;Hinton &#x548C; Bengio &#x4ECD;&#x575A;&#x6301;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x5C0F;&#x56E2;&#x4F53;&#x3002;&#x867D;&#x7136;&#x4ED6;&#x4EEC;&#x91CD;&#x65B0;&#x70B9;&#x71C3;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x793E;&#x533A;&#x5BF9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5174;&#x8DA3;&#x7684;&#x52AA;&#x529B;&#x5728;&#x6700;&#x521D;&#x66FE;&#x906D;&#x5230;&#x6000;&#x7591;&#xFF0C;&#x4F46;&#x5176;&#x60F3;&#x6CD5;&#x5F15;&#x53D1;&#x4E86;&#x91CD;&#x5927;&#x7684;&#x6280;&#x672F;&#x8FDB;&#x6B65;&#xFF0C;&#x5176;&#x65B9;&#x6CD5;&#x73B0;&#x5728;&#x5DF2;&#x6210;&#x4E3A;&#x8BE5;&#x9886;&#x57DF;&#x7684;&#x4E3B;&#x5BFC;&#x8303;&#x4F8B;&#x3002;&#x6B64;&#x524D;&#x4ED6;&#x4EEC;&#x5728;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x9886;&#x57DF;&#x7684;&#x5730;&#x4F4D;&#x65E9;&#x5DF2;&#x662F;&#x65E0;&#x4EBA;&#x4E0D;&#x77E5;&#xFF0C;&#x5C3D;&#x7BA1;&#x4E09;&#x4EBA;&#x8D70;&#x5411;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x4ECD;&#x7136;&#x662F;&#x591A;&#x5E74;&#x7684;&#x5408;&#x4F5C;&#x4F19;&#x4F34;&#x548C;&#x631A;&#x53CB;&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;&#x4E09;&#x4F4D;&#x6240;&#x4F5C;&#x51FA;&#x7684;&#x4E3B;&#x8981;&#x8D21;&#x732E;&#xFF1A;&#x6770;&#x5F17;&#x91CC;&#xB7;&#x8F9B;&#x987F;(Geoffery Hinton)&#x2003;&#x2003;&#x53CD;&#x5411;&#x4F20;&#x64AD;(Back Propagation)&#xFF1A;&#x5728; 1986 &#x5E74;&#x4E0E; David Rumelhart &#x548C; Ronald Williams &#x5171;&#x540C;&#x64B0;&#x5199;&#x7684; &#x201C;Learning Internal Representations by Error Propagation&#x201D; &#x4E00;&#x6587;&#x4E2D;&#xFF0C;Hinton &#x8BC1;&#x660E;&#x4E86;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5141;&#x8BB8;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x5185;&#x90E8;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;&#x4F7F;&#x7528;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6210;&#x4E3A;&#x53EF;&#x80FD;&#x7F51;&#x7EDC;&#x89E3;&#x51B3;&#x4EE5;&#x524D;&#x88AB;&#x8BA4;&#x4E3A;&#x8D85;&#x51FA;&#x5176;&#x8303;&#x56F4;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5982;&#x4ECA;&#xFF0C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x662F;&#x5927;&#x591A;&#x6570;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6807;&#x51C6;&#x3002; &#x2003;&#x2003;&#x73BB;&#x5C14;&#x5179;&#x66FC;&#x673A;(Boltzmann Machines)&#xFF1A;1983 &#x5E74;&#xFF0C;Hinton &#x4E0E; Terrence Sejnowski &#x4E00;&#x8D77;&#xFF0C;&#x53D1;&#x660E;&#x4E86;&#x73BB;&#x5C14;&#x5179;&#x66FC;&#x673A;&#xFF0C;&#x8FD9;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x80FD;&#x591F;&#x5B66;&#x4E60;&#x4E0D;&#x5C5E;&#x4E8E;&#x8F93;&#x5165;&#x6216;&#x8F93;&#x51FA;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x5185;&#x90E8;&#x8868;&#x793A;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E4B;&#x4E00;&#x3002; &#x2003;&#x2003;&#x5BF9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6539;&#x8FDB;(Improvement of Convolutional Neural Network)&#xFF1A;2012 &#x5E74;&#xFF0C;Hinton &#x548C;&#x4ED6;&#x7684;&#x5B66;&#x751F; Alex Krizhevsky &#x4EE5;&#x53CA; Ilya Sutskever &#x901A;&#x8FC7; Rectified Linear Neurons &#x548C; Dropout Regularization &#x6539;&#x8FDB;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5E76;&#x5728;&#x8457;&#x540D;&#x7684; ImageNet &#x8BC4;&#x6D4B;&#x4E2D;&#x5C06;&#x5BF9;&#x8C61;&#x8BC6;&#x522B;&#x7684;&#x9519;&#x8BEF;&#x7387;&#x51CF;&#x534A;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x6380;&#x8D77;&#x4E00;&#x573A;&#x9769;&#x547D;&#x3002; &#x7EA6;&#x4E66;&#x4E9A;&#xB7;&#x672C;&#x5409;&#x5965;(Yoshua Bengio)&#x2003;&#x2003;&#x5E8F;&#x5217;&#x7684;&#x6982;&#x7387;&#x6A21;&#x578B;(Probabilistic models of sequences)&#xFF1A;&#x5728; 20 &#x4E16;&#x7EAA; 90 &#x5E74;&#x4EE3;&#xFF0C;Bengio &#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0E;&#x5E8F;&#x5217;&#x7684;&#x6982;&#x7387;&#x6A21;&#x578B;&#x76F8;&#x7ED3;&#x5408;&#xFF0C;&#x4F8B;&#x5982;&#x9690;&#x9A6C;&#x5C14;&#x53EF;&#x592B;&#x6A21;&#x578B;&#x3002;&#x8FD9;&#x4E9B;&#x60F3;&#x6CD5;&#x88AB;&#x7EB3;&#x5165; AT&#xFF06;T / NCR &#x7528;&#x4E8E;&#x9605;&#x8BFB;&#x624B;&#x5199;&#x652F;&#x7968;&#x4E2D;&#xFF0C;&#x88AB;&#x8BA4;&#x4E3A;&#x662F; 20 &#x4E16;&#x7EAA; 90 &#x5E74;&#x4EE3;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7814;&#x7A76;&#x7684;&#x5DC5;&#x5CF0;&#x4E4B;&#x4F5C;&#x3002;&#x73B0;&#x4EE3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x7CFB;&#x7EDF;&#x4E5F;&#x662F;&#x8FD9;&#x4E9B;&#x6982;&#x5FF5;&#x7684;&#x6269;&#x5C55;&#x3002; &#x2003;&#x2003;&#x9AD8;&#x7EF4;&#x8BCD;&#x6C47;&#x5D4C;&#x5165;&#x548C;&#x5173;&#x6CE8;(High-dimensional word embeddings and attention)&#xFF1A;2000 &#x5E74;&#xFF0C;Bengio &#x64B0;&#x5199;&#x4E86;&#x5177;&#x6709;&#x91CC;&#x7A0B;&#x7891;&#x610F;&#x4E49;&#x7684;&#x8BBA;&#x6587;&#x201C;A Neural Probabilistic Language Model&#x201D;&#xFF0C;&#x5B83;&#x5F15;&#x5165;&#x4E86;&#x9AD8;&#x7EF4;&#x8BCD;&#x5411;&#x91CF;&#x4F5C;&#x4E3A;&#x8BCD;&#x4E49;&#x7684;&#x8868;&#x793A;&#x3002;Bengio &#x7684;&#x89C1;&#x89E3;&#x5BF9;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x4EFB;&#x52A1;&#x4EA7;&#x751F;&#x4E86;&#x5DE8;&#x5927;&#x800C;&#x6301;&#x4E45;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x5305;&#x62EC;&#x8BED;&#x8A00;&#x7FFB;&#x8BD1;&#x3001;&#x95EE;&#x7B54;&#x548C;&#x89C6;&#x89C9;&#x95EE;&#x7B54;&#x3002;&#x4ED6;&#x7684;&#x56E2;&#x961F;&#x8FD8;&#x5F15;&#x5165;&#x4E86;&#x6CE8;&#x610F;&#x529B;&#x673A;&#x5236;&#xFF0C;&#x8FD9;&#x79CD;&#x673A;&#x5236;&#x4FC3;&#x4F7F;&#x4E86;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;&#x7A81;&#x7834;&#xFF0C;&#x5E76;&#x6784;&#x6210;&#x4E86;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x5E8F;&#x5217;&#x5904;&#x7406;&#x7684;&#x5173;&#x952E;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x3002; &#x2003;&#x2003;&#x751F;&#x6210;&#x5F0F;&#x5BF9;&#x6297;&#x7F51;&#x7EDC;(Generative Adversarial Networks)&#xFF1A;&#x81EA; 2010 &#x5E74;&#x4EE5;&#x6765;&#xFF0C;Bengio &#x5173;&#x4E8E;&#x751F;&#x6210;&#x6027;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x8BBA;&#x6587;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x4E0E; Ian Goodfellow &#x5171;&#x540C;&#x5F00;&#x53D1;&#x7684;&#x751F;&#x6210;&#x6027;&#x5BF9;&#x6297;&#x7F51;&#x7EDC;&#xFF08;GAN&#xFF09;&#xFF0C;&#x5F15;&#x53D1;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;&#x5B66;&#x7684;&#x9769;&#x547D;&#x3002; &#x6768;&#x7ACB;&#x6606;(Yann LeCun)&#x2003;&#x2003;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;(Convolutional Neural Networks)&#xFF1A;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#xFF0C;LeCun &#x5F00;&#x53D1;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x73B0;&#x5DF2;&#x6210;&#x4E3A;&#x8BE5;&#x9886;&#x57DF;&#x7684;&#x57FA;&#x672C;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x3002;&#x9664;&#x4E86;&#x5176;&#x4ED6;&#x4F18;&#x70B9;&#x4E4B;&#x5916;&#xFF0C;&#x5B83;&#x8FD8;&#x5177;&#x6709;&#x4F7F;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x66F4;&#x6709;&#x6548;&#x7684;&#x5FC5;&#x8981;&#x6027;&#x3002;&#x5728; 20 &#x4E16;&#x7EAA; 80 &#x5E74;&#x4EE3;&#x540E;&#x671F;&#xFF0C;&#x591A;&#x4F26;&#x591A;&#x5927;&#x5B66;&#x548C;&#x8D1D;&#x5C14;&#x5B9E;&#x9A8C;&#x5BA4;&#x5DE5;&#x4F5C;&#x671F;&#x95F4;&#xFF0C;LeCun &#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x5728;&#x624B;&#x5199;&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x4E0A;&#x8BAD;&#x7EC3;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7CFB;&#x7EDF;&#x7684;&#x4EBA;&#x3002;&#x5982;&#x4ECA;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4EE5;&#x53CA;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x3001;&#x8BED;&#x97F3;&#x5408;&#x6210;&#x3001;&#x56FE;&#x50CF;&#x5408;&#x6210;&#x548C;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x7684;&#x884C;&#x4E1A;&#x6807;&#x51C6;&#x3002;&#x5B83;&#x4EEC;&#x7528;&#x4E8E;&#x5404;&#x79CD;&#x5E94;&#x7528;&#xFF0C;&#x5305;&#x62EC;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x3001;&#x533B;&#x5B66;&#x56FE;&#x50CF;&#x5206;&#x6790;&#x3001;&#x8BED;&#x97F3;&#x6FC0;&#x6D3B;&#x52A9;&#x624B;&#x548C;&#x4FE1;&#x606F;&#x8FC7;&#x6EE4;&#x3002; &#x2003;&#x2003;&#x6539;&#x8FDB;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;(Improved Back Propagation Algorithms)&#xFF1A;LeCun &#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x65E9;&#x671F;&#x7684;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5; backprop&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x53D8;&#x5206;&#x539F;&#x7406;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x4E86;&#x7B80;&#x6D01;&#x7684;&#x63A8;&#x5BFC;&#x3002;&#x4ED6;&#x7684;&#x5DE5;&#x4F5C;&#x8BA9;&#x52A0;&#x5FEB;&#x4E86;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#xFF0C;&#x5305;&#x62EC;&#x63CF;&#x8FF0;&#x4E24;&#x79CD;&#x52A0;&#x901F;&#x5B66;&#x4E60;&#x65F6;&#x95F4;&#x7684;&#x7B80;&#x5355;&#x65B9;&#x6CD5;&#x3002; &#x2003;&#x2003;&#x62D3;&#x5BBD;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8303;&#x56F4;(Widening the Range of Neural Networks)&#xFF1A;LeCun &#x8FD8;&#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x66F4;&#x4E3A;&#x5E7F;&#x6CDB;&#x4EFB;&#x52A1;&#x7684;&#x8BA1;&#x7B97;&#x6A21;&#x578B;&#xFF0C;&#x5176;&#x65E9;&#x671F;&#x5DE5;&#x4F5C;&#x73B0;&#x5DF2;&#x6210;&#x4E3A; AI &#x7684;&#x57FA;&#x7840;&#x6982;&#x5FF5;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x9886;&#x57DF;&#xFF0C;&#x4ED6;&#x7814;&#x7A76;&#x4E86;&#x5982;&#x4F55;&#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5B66;&#x4E60;&#x5206;&#x5C42;&#x7279;&#x5F81;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x4E2A;&#x7406;&#x5FF5;&#x73B0;&#x5728;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8BB8;&#x591A;&#x8BC6;&#x522B;&#x4EFB;&#x52A1;&#x4E2D;&#x3002;&#x4E0E; L&#xE9;onBottou &#x4E00;&#x8D77;&#xFF0C;&#x4ED6;&#x8FD8;&#x63D0;&#x51FA;&#x4E86;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x4E3A;&#x590D;&#x6742;&#x7684;&#x6A21;&#x5757;&#x7F51;&#x7EDC;&#xFF0C;&#x5176;&#x4E2D;&#x901A;&#x8FC7;&#x81EA;&#x52A8;&#x533A;&#x5206;&#x6765;&#x6267;&#x884C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#xFF0C;&#x76EE;&#x524D;&#x5728;&#x6BCF;&#x4E2A;&#x73B0;&#x4EE3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x8F6F;&#x4EF6;&#x4E2D;&#x5F97;&#x5230;&#x4F7F;&#x7528;&#x3002;&#x4ED6;&#x4EEC;&#x8FD8;&#x63D0;&#x51FA;&#x4E86;&#x53EF;&#x4EE5;&#x64CD;&#x4F5C;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x67B6;&#x6784;&#xFF0C;&#x5982;&#x56FE;&#x5F62;&#x3002; &#x5728;&#x300A;&#x8FDE;&#x7EBF;&#x300B;&#x6742;&#x5FD7;&#x7684;&#x62A5;&#x9053;&#x4E2D;&#xFF0C;Geoffery Hinton &#x88AB;&#x95EE;&#x53CA;&#x83B7;&#x5F97;&#x56FE;&#x9886;&#x5956;&#x7684;&#x610F;&#x4E49;&#x65F6;&#xFF0C;&#x4ED6;&#x8868;&#x793A;&#x5341;&#x5206;&#x60CA;&#x8BB6;&#xFF0C;&#x201C;&#x6211;&#x731C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x73B0;&#x5728;&#x662F;&#x53D7;&#x4EBA;&#x5C0A;&#x656C;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4ED6;&#x770B;&#x6765;&#x56FE;&#x7075;&#x5C06;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E2D;&#x6700;&#x503C;&#x5F97;&#x5C0A;&#x656C;&#x7684;&#x5B66;&#x79D1;&#x4E86;&#x3002; &#x636E;&#x4E86;&#x89E3;&#xFF0C;&#x56FE;&#x7075;&#x5956;&#x7531; ACM &#x4E8E; 1966 &#x5E74;&#x8BBE;&#x7F6E;&#xFF0C;&#x6BCF;&#x5E74;&#x9881;&#x53D1;&#x4E00;&#x6B21;&#xFF0C;&#x8BBE;&#x7ACB;&#x76EE;&#x7684;&#x4E4B;&#x4E00;&#x662F;&#x7EAA;&#x5FF5;&#x8457;&#x540D;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x5148;&#x9A71;&#x827E;&#x4F26; &#x2022; &#x56FE;&#x7075;&#xFF08;Alan Turing&#xFF09;&#xFF0C;&#x4ED6;&#x5728; 20 &#x4E16;&#x7EAA; 30 &#x5E74;&#x4EE3;&#x3001;40 &#x5E74;&#x4EE3;&#x548C; 50 &#x5E74;&#x4EE3;&#x5960;&#x5B9A;&#x4E86;&#x8BA1;&#x7B97;&#x548C;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x7684;&#x65E9;&#x671F;&#x57FA;&#x7840;&#x3002; &#x56FE;&#x7075;&#x5956;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x9886;&#x57DF;&#x7684;&#x6700;&#x9AD8;&#x5956;&#x3002;&#x83B7;&#x5956;&#x8005;&#x5FC5;&#x987B;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x9886;&#x57DF;&#x5177;&#x6709;&#x6301;&#x4E45;&#x91CD;&#x5927;&#x7684;&#x5148;&#x8FDB;&#x6027;&#x6280;&#x672F;&#x8D21;&#x732E;&#x3002;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x9886;&#x57DF;&#x7684;&#x5148;&#x9A71;&#x9A6C;&#x6587; &#x2022; &#x660E;&#x65AF;&#x57FA;&#xFF08;Marvin Lee Minsky&#xFF09;&#x3001;&#x7EA6;&#x7FF0; &#x2022; &#x9EA6;&#x5361;&#x9521;&#xFF08;John McCarthy&#xFF09;&#x3001;&#x827E;&#x4F26; &#x2022; &#x7EBD;&#x5384;&#x5C14;&#xFF08;Allen Newell&#xFF09;&#x548C;&#x53F8;&#x9A6C;&#x8D3A;&#xFF08;Herbert Alexander Simon&#xFF09;&#x7B49;&#x4EBA;&#x90FD;&#x66FE;&#x7ECF;&#x83B7;&#x5956;&#x3002;&#x534E;&#x4EBA;&#x79D1;&#x5B66;&#x5BB6;&#x59DA;&#x671F;&#x667A; 2000 &#x5E74;&#x56E0;&#x4E3A;&#x4F2A;&#x968F;&#x673A;&#x6570;&#x751F;&#x6210;&#x7B49;&#x8BA1;&#x7B97;&#x9886;&#x57DF;&#x7684;&#x91CD;&#x8981;&#x8D21;&#x732E;&#x83B7;&#x5956;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Turing Reward</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Turing Reward in 2017]]></title>
    <url>%2F2018%2F03%2F22%2FTuringReward-2017%2F</url>
    <content type="text"><![CDATA[&#x2003;&#x2003;2018 &#x5E74; 3 &#x6708; 21 &#x65E5;&#xFF0C;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#xFF08;ACM&#xFF09;&#x5C06;2017&#x5E74;&#x56FE;&#x7075;&#x5956;&#x6388;&#x4E88;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x524D;&#x6821;&#x957F;&#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;&#xFF08;John L. Hennessy&#xFF09;&#x548C;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x9000;&#x4F11;&#x6559;&#x6388;&#x5927;&#x536B;&#xB7;&#x5E15;&#x7279;&#x68EE;&#xFF08;David A. Patterson&#xFF09;&#xFF0C;&#x4EE5;&#x8868;&#x5F70;&#x4ED6;&#x4EEC;&#x5F00;&#x521B;&#x4E86;&#x4E00;&#x79CD;&#x7CFB;&#x7EDF;&#x7684;&#x3001;&#x5B9A;&#x91CF;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8BBE;&#x8BA1;&#x548C;&#x8BC4;&#x4EF7;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#xFF0C;&#x5E76;&#x5BF9;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x884C;&#x4E1A;&#x4EA7;&#x751F;&#x4E86;&#x6301;&#x4E45;&#x7684;&#x5F71;&#x54CD;&#x3002; &#x2003;&#x2003;&#x964D;&#x4F4E;&#x5904;&#x7406;&#x5668;&#x590D;&#x6742;&#x6027;&#x7684;&#x6982;&#x5FF5;&#x67B6;&#x6784;&#x7814;&#x7A76;&#x53EF;&#x4EE5;&#x8FFD;&#x6EAF;&#x5230;1960&#x5E74;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7531;IBM&#x8D44;&#x52A9;&#x7684;801&#x9879;&#x76EE;&#xFF0C;&#x7531;&#x8F69;&#x5C3C;&#x8BD7;&#x548C;&#x5E15;&#x7279;&#x68EE;&#x8D1F;&#x8D23;&#x3002;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x548C;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x90FD;&#x5728;&#x5927;&#x529B;&#x7814;&#x7A76;RISC&#x67B6;&#x6784;&#x7684;&#x53EF;&#x884C;&#x6027;&#x65B9;&#x6CD5;,&#x63A8;&#x5E7F;&#x5176;&#x6982;&#x5FF5;,&#x5E76;&#x4ECB;&#x7ECD;&#x7ED9;&#x5B66;&#x672F;&#x754C;&#x548C;&#x4EA7;&#x4E1A;&#x754C;&#x3002;RISC&#x65B9;&#x6CD5;&#x4E0D;&#x540C;&#x4E8E;&#x5F53;&#x65F6;&#x6D41;&#x884C;&#x7684;&#x590D;&#x6742;&#x6307;&#x4EE4;&#x96C6;&#x8BA1;&#x7B97;&#x673A;(CISC)&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x7EC4;&#x7B80;&#x5355;&#x548C;&#x901A;&#x7528;&#x7684;&#x6307;&#x4EE4;(&#x8BA1;&#x7B97;&#x673A;&#x5FC5;&#x987B;&#x6267;&#x884C;&#x7684;&#x529F;&#x80FD;)&#xFF0C;&#x9700;&#x8981;&#x7684;&#x6676;&#x4F53;&#x7BA1;&#x6570;&#x91CF;&#x6BD4;&#x590D;&#x6742;&#x6307;&#x4EE4;&#x96C6;&#x5C11;&#xFF0C;&#x5E76;&#x4E14;&#x51CF;&#x5C11;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x5FC5;&#x987B;&#x6267;&#x884C;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x3002; &#x2003;&#x2003;&#x5E15;&#x7279;&#x68EE;&#x7684;&#x4F2F;&#x514B;&#x5229;&#x56E2;&#x961F;&#x521B;&#x9020;&#x4E86;RISC&#x8FD9;&#x4E2A;&#x8BCD;&#xFF0C;&#x5E76;&#x5728;1982&#x5E74;&#x5EFA;&#x7ACB;&#x5E76;&#x6F14;&#x793A;&#x4E86;&#x4ED6;&#x4EEC;&#x7684;RISC-1&#x578B;&#x5904;&#x7406;&#x5668;&#x3002;RISC-1&#x578B;&#x5904;&#x7406;&#x5668;&#x91C7;&#x7528;&#x4E86;44000&#x4E2A;&#x6676;&#x4F53;&#x7BA1;&#x4E2D;&#xFF0C;&#x5176;&#x6027;&#x80FD;&#x8981;&#x4F18;&#x4E8E;&#x4F20;&#x7EDF;&#x7684;CISC&#x8BBE;&#x8BA1;&#xFF0C;&#x540E;&#x8005;&#x7684;&#x5B9E;&#x73B0;&#x5F80;&#x5F80;&#x9700;&#x8981;100,000&#x4E2A;&#x6676;&#x4F53;&#x7BA1;&#x3002;&#x8F69;&#x5C3C;&#x8BD7;&#x4E8E;1984&#x5E74;&#x8054;&#x5408;&#x521B;&#x7ACB;&#x4E86;MIPS&#x7535;&#x8111;&#x7CFB;&#x7EDF;&#x516C;&#x53F8;&#xFF0C;&#x5C06;&#x65AF;&#x5766;&#x798F;&#x56E2;&#x961F;&#x7684;&#x5DE5;&#x4F5C;&#x5E02;&#x573A;&#x5316;&#x3002;&#x540E;&#x6765;&#xFF0C;&#x4F2F;&#x514B;&#x5229;&#x56E2;&#x961F;&#x7684;&#x7814;&#x7A76;&#x6210;&#x679C;&#x901A;&#x8FC7;Sun Microsystems&#x516C;&#x53F8;&#x7684;SPARC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x67B6;&#x6784;&#x5546;&#x4E1A;&#x5316;&#x3002; &#x2003;&#x2003;&#x5C3D;&#x7BA1;&#x8BB8;&#x591A;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x5E08;&#x6700;&#x521D;&#x5BF9;RISC&#x6301;&#x6000;&#x7591;&#x6001;&#x5EA6;&#xFF0C;&#x4F46;MIPS&#x548C;SPARC&#x5E02;&#x573A;&#x5316;&#x7684;&#x6210;&#x529F;&#xFF0C;RISC&#x8BBE;&#x8BA1;&#x8F83;&#x4F4E;&#x7684;&#x751F;&#x4EA7;&#x6210;&#x672C;&#xFF0C;&#x4EE5;&#x53CA;&#x66F4;&#x591A;&#x7684;&#x7814;&#x7A76;&#x8FDB;&#x5C55;&#xFF0C;&#x4F7F;RISC&#x5F97;&#x5230;&#x4E86;&#x4E1A;&#x754C;&#x7684;&#x5E7F;&#x6CDB;&#x63A5;&#x7EB3;&#x3002;&#x5230;20&#x4E16;&#x7EAA;90&#x5E74;&#x4EE3;&#x4E2D;&#x671F;&#xFF0C;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x5DF2;&#x7ECF;&#x5728;&#x6574;&#x4E2A;&#x9886;&#x57DF;&#x5360;&#x636E;&#x4E3B;&#x5BFC;&#x5730;&#x4F4D;&#x3002; &#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;(John L. Hennessy) &#x2003;&#x2003;&#x7EA6;&#x7FF0;&#xB7;&#x8F69;&#x5C3C;&#x8BD7;&#xFF0C;&#x4E3A; MIPS &#x79D1;&#x6280;&#x516C;&#x53F8;&#x521B;&#x59CB;&#x4EBA;&#xFF0C;&#x7B2C;&#x5341;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6821;&#x957F;&#x3001;Alphabet&#x516C;&#x53F8;&#x8463;&#x4E8B;&#x957F;&#x3002; &#x2003;&#x2003;Hennessy&#x51FA;&#x751F;&#x4E8E;1953&#x5E74;&#x3002; &#x2003;&#x2003;1973&#x5E74;&#xFF0C;&#x4ED6;&#x4ECE;&#x7EF4;&#x62C9;&#x8BFA;&#x74E6;&#x5927;&#x5B66;&#x83B7;&#x53D6;&#x7535;&#x673A;&#x5DE5;&#x7A0B;&#x5B66;&#x58EB;&#x5B66;&#x4F4D;&#x3002; &#x2003;&#x2003;1975&#x5E74;&#x4EE5;&#x53CA;1977&#x5E74;&#xFF0C;&#x5206;&#x522B;&#x4ECE;&#x7EBD;&#x7EA6;&#x77F3;&#x6EAA;&#x5927;&#x5B66;&#x83B7;&#x53D6;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7855;&#x58EB;&#x53CA;&#x535A;&#x58EB;&#x5B66;&#x4F4D;&#x3002; &#x2003;&#x2003;1977&#x5E74;&#x6210;&#x4E3A;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x7684;&#x6559;&#x5E08;&#x3002; &#x2003;&#x2003;1981&#x5E74;&#xFF0C;&#x4ED6;&#x5F00;&#x59CB;&#x8FDB;&#x884C;MIPS&#x9879;&#x76EE;&#xFF0C;&#x5E76;&#x7814;&#x7A76;RISC&#x5904;&#x7406;&#x5668;&#x3002; &#x2003;&#x2003;1984&#x5E74;&#xFF0C;&#x4ED6;&#x5229;&#x7528;&#x5E74;&#x5EA6;&#x4F11;&#x5047;&#x7684;&#x65F6;&#x95F4;&#x521B;&#x5EFA;&#x4E86; MIPS Computer Systems Inc.&#xFF0C;&#x5C06;&#x4ED6;&#x7814;&#x7A76;&#x5F00;&#x53D1;&#x7684;&#x6280;&#x672F;&#x8FDB;&#x884C;&#x5546;&#x4E1A;&#x5316;&#x3002; &#x2003;&#x2003;1987&#x5E74;&#xFF0C;&#x4ED6;&#x6210;&#x4E3A;&#x7535;&#x6C14;&#x5DE5;&#x7A0B;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7684; Willard &#x548C; Inez Kerr Bell &#x6559;&#x6388;&#x3002; &#x2003;&#x2003;1989&#x5E74;&#x5230;1993&#x5E74;&#xFF0C;Hennessy&#x62C5;&#x4EFB;&#x4E86;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x5B9E;&#x9A8C;&#x5BA4;&#x4E3B;&#x4EFB;&#x3002; &#x2003;&#x2003;1994&#x5E74;&#x5230;1996&#x5E74;&#xFF0C;&#x4ED6;&#x66FE;&#x62C5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x7CFB;&#x4E3B;&#x4EFB;&#x3002; &#x2003;&#x2003;1996&#x5E74;&#x5230;1999&#x5E74;&#xFF0C;&#x4ED6;&#x62C5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x5DE5;&#x7A0B;&#x5B66;&#x9662;&#x9662;&#x957F;&#x3002; &#x2003;&#x2003;1999&#x5E74;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6821;&#x957F;&#x683C;&#x54C8;&#x5FB7;&#xB7;&#x5361;&#x65AF;&#x5E15;&#xFF08;Gerhard Casper&#xFF09;&#x4EFB;&#x547D;Hennessy&#x63A5;&#x4EFB;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6559;&#x52A1;&#x957F;&#x3002; &#x2003;&#x2003;&#x968F;&#x540E; 2000&#x5E74;&#x5361;&#x65AF;&#x5E15;&#x5378;&#x4EFB;&#x540E;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x8463;&#x4E8B;&#x4F1A;&#x4EFB;&#x547D;Hennessy&#x63A5;&#x66FF;&#x5361;&#x65AF;&#x5E15;&#x51FA;&#x4EFB;&#x6821;&#x957F;&#x4E00;&#x804C;&#xFF0C;&#x5E76;&#x4E00;&#x76F4;&#x5EF6;&#x7EED;&#x5230; 2016&#x5E74;&#x3002;&#x5728;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x65AF;&#x5766;&#x798F;&#x5B8C;&#x6210;&#x4E86;&#x4ECE;&#x4E00;&#x4E2A;&#x5730;&#x533A;&#x6027;&#x6559;&#x80B2;&#x673A;&#x6784;&#x5230;&#x4E16;&#x754C;&#x9876;&#x7EA7;&#x5927;&#x5B66;&#x7684;&#x8715;&#x53D8;&#xFF0C;&#x65AF;&#x5766;&#x798F;&#x5916;&#x56F4;&#x7684;&#x7845;&#x8C37;&#x4E5F;&#x6210;&#x4E3A;&#x4E86;&#x4E16;&#x754C;&#x521B;&#x65B0;&#x7684;&#x5F15;&#x64CE;&#xFF0C;&#x800C;Hennessy&#x6559;&#x6388;&#x5219;&#x6210;&#x4E3A;&#x516C;&#x8BA4;&#x7684;&#x300C;&#x7845;&#x8C37;&#x6559;&#x7236;&#x300D;&#x3002; &#x2003;&#x2003;&#x6B64;&#x5916;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;Hennessy&#x4ECE;2004&#x5E74;&#x8D77;&#x4FBF;&#x52A0;&#x5165;&#x4E86;Google&#xFF08;&#x540E;&#x6765;&#x7684;Alphabet&#x516C;&#x53F8;&#xFF09;&#x7684;&#x8463;&#x4E8B;&#x4F1A;&#xFF0C;&#x5E76;&#x4E8E;2007&#x5E74;&#x62C5;&#x4EFB;&#x72EC;&#x7ACB;&#x8463;&#x4E8B;&#x3002; &#x2003;&#x2003;&#x5728; 2018&#x5E74; 2 &#x6708;&#xFF0C;&#x4F34;&#x968F;&#x7740; Alphabet &#x516C;&#x53F8;&#xFF08;Google &#x7684;&#x6BCD;&#x516C;&#x53F8;&#xFF09;&#x53D1;&#x5E03; 2017&#x5E74;&#x8D22;&#x62A5;&#xFF0C;&#x8FD8;&#x540C;&#x65F6;&#x5BA3;&#x5E03; 66 &#x5C81;&#x7684;Hennessy&#x4E3A; Alphabet &#x7684;&#x7B2C;&#x4E09;&#x4EFB;&#x8463;&#x4E8B;&#x957F;&#x3002;&#xFF08;&#x96F7;&#x950B;&#x7F51;&#x66FE;&#x7ECF;&#x6709;&#x8BE6;&#x7EC6;&#x62A5;&#x9053;&#xFF1A;&#x5168;&#x5E74;&#x8425;&#x6536;&#x7834;&#x5343;&#x4EBF;&#x7F8E;&#x5143;&#x7684; Google&#xFF0C;&#x8FCE;&#x6765;&#x4E86; 20&#x5E74;&#x6765;&#x6700;&#x5927;&#x7684;&#x4EBA;&#x4E8B;&#x53D8;&#x52A8;&#xFF09; &#x2003;&#x2003;&#x5728;&#x7814;&#x7A76;&#x65B9;&#x9762;&#xFF0C;Hennessy&#x4E0E;Patterson&#x5171;&#x540C;&#x4E3A;RISC&#x5FAE;&#x5904;&#x7406;&#x5668;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x91CF;&#x5316;&#x65B9;&#x6CD5;&#x3002;&#x540C;&#x65F6;&#x4ED6;&#x4EEC;&#x7F16;&#x5199;&#x7684;&#x300A;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#xFF08;&#x91CF;&#x5316;&#x7814;&#x7A76;&#x65B9;&#x6CD5;&#xFF09;&#x300B;&#xFF08;Computer Architecture: A Quantitative Approach&#xFF09;&#xFF0C;&#x4ECE;1990&#x5E74;&#x4EE5;&#x6765;&#x4E00;&#x76F4;&#x88AB;&#x5E7F;&#x6CDB;&#x7528;&#x4F5C;&#x7814;&#x7A76;&#x751F;&#x7684;&#x6743;&#x5A01;&#x6559;&#x6750;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;Hennessy&#x5C06; Donald Knuth &#x7684; MIX &#x5904;&#x7406;&#x5668;&#x66F4;&#x65B0;&#x4E3A; MMIX &#x505A;&#x51FA;&#x4E86;&#x8D21;&#x732E;&#x3002; &#x2003;&#x2003;2004&#x5E74;&#xFF0C;&#x4ED6;1989&#x5E74;&#x5408;&#x4F5C;&#x7684;&#x4E00;&#x7BC7;&#x5173;&#x4E8E;&#x9AD8;&#x6027;&#x80FD;&#x7F13;&#x5B58;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x8BBA;&#x6587;&#x83B7;&#x5F97;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x68B0;&#x534F;&#x4F1A; SIGARCH ISCA &#x7684;&#x5F71;&#x54CD;&#x8BBA;&#x6587;&#x5956;&#x3002; &#x2003;&#x2003;2009&#x5E74;&#xFF0C;Hennessy&#x518D;&#x6B21;&#x83B7;&#x5F97;&#x8BE5;&#x5956;&#xFF0C;&#x8FD9;&#x6B21;&#x662F;&#x4ED6;&#x5728;1994&#x5E74;&#x5408;&#x4F5C;&#x7684;&#x6709;&#x5173;&#x65AF;&#x5766;&#x798F; FLASH &#x591A;&#x5904;&#x7406;&#x5668;&#x7684;&#x8BBA;&#x6587;&#x3002; &#x5927;&#x536B;&#xB7;&#x5E15;&#x7279;&#x68EE;(David A. Patterson) &#x2003;&#x2003;Patterson &#x51FA;&#x751F;&#x4E8E;1947&#x5E74;&#xFF0C; &#x2003;&#x2003;1969&#x5E74;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x6D1B;&#x6749;&#x77F6;&#x5206;&#x6821;&#x83B7;&#x6570;&#x5B66;&#x5B66;&#x58EB;&#x5B66;&#x4F4D;&#x3002; &#x2003;&#x2003;1970&#x5E74;&#x548C;1976&#x5E74;&#xFF0C;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x6D1B;&#x6749;&#x77F6;&#x5206;&#x6821;&#x5206;&#x522B;&#x83B7;&#x5F97;&#x8BA1;&#x7B97;&#x673A;&#x7855;&#x58EB;&#x548C;&#x535A;&#x58EB;&#x5B66;&#x4F4D;&#x3002; &#x2003;&#x2003;1976&#x5E74;&#xFF0C;&#x535A;&#x58EB;&#x6BD5;&#x4E1A;&#x540E;&#xFF0C;&#x52A0;&#x5165;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x3002; &#x2003;&#x2003;1994&#x5E74;&#xFF0C;&#x5F53;&#x9009;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#x4F1A;&#x58EB;&#xFF08;ACM Fellow&#xFF09;&#x3002; &#x2003;&#x2003;2004&#x5E74;&#x81F3; 2006&#x5E74;&#xFF0C;&#x4EFB;&#x7F8E;&#x56FD;&#x8BA1;&#x7B97;&#x673A;&#x534F;&#x4F1A;&#x4E3B;&#x5E2D;&#x3002; &#x2003;&#x2003;2016&#x5E74;&#xFF0C;DavidPatterson&#x6559;&#x6388;&#x5BA3;&#x5E03;&#x4ECE;&#x52A0;&#x5DDE;&#x5927;&#x5B66;&#x4F2F;&#x514B;&#x5229;&#x5206;&#x6821;&#x9000;&#x4F11;&#xFF0C;&#x5B66;&#x6821;&#x7ED9;&#x4ED6;&#x4E3E;&#x529E;&#x4E86;&#x4E00;&#x4E2A;&#x9000;&#x4F11;&#x5178;&#x793C;&#xFF0C;&#x7EAA;&#x5FF5;&#x4ED6;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x65B9;&#x9762;&#x7684; 40&#x5E74;&#x5B66;&#x672F;&#x751F;&#x6DAF;&#x3002;&#x4E00;&#x5E74;&#x4E4B;&#x540E;&#xFF0C;&#x6559;&#x6388;&#x516C;&#x5F00;&#x5BA3;&#x5E03;&#x81EA;&#x5DF1;&#x52A0;&#x5165;&#x8C37;&#x6B4C; TPU &#x56E2;&#x961F;&#xFF0C;&#x8C37;&#x6B4C;&#x7684; TPU &#x8BBA;&#x6587;&#x4E2D;&#x4E5F;&#x6709;&#x4ED6;&#x7684;&#x7F72;&#x540D;&#x3002;&#xFF08;&#x96F7;&#x950B;&#x7F51;&#x8BE6;&#x7EC6;&#x62A5;&#x9053;&#xFF1A;David Patterson&#x6559;&#x6388;&#x516C;&#x5F00;&#x5BA3;&#x5E03;&#x52A0;&#x5165;&#x8C37;&#x6B4C;TPU&#x56E2;&#x961F;&#xFF0C;&#x597D;&#x620F;&#x624D;&#x521A;&#x521A;&#x5F00;&#x573A;&#xFF09; &#x2003;&#x2003;Patterson&#x6559;&#x6388;&#x5728;&#x4F2F;&#x514B;&#x5229;&#x5927;&#x5B66;&#x5E26;&#x9886;&#x56E2;&#x961F;&#x957F;&#x671F;&#x8FDB;&#x884C;RISC&#x7684;&#x7814;&#x7A76;&#xFF0C;&#x5BF9;&#x5168;&#x4E16;&#x754C;RISC&#x5904;&#x7406;&#x5668;&#x7684;&#x7814;&#x53D1;&#x548C;&#x76F8;&#x5173;&#x5E94;&#x7528;&#x505A;&#x51FA;&#x4E86;&#x5DE8;&#x5927;&#x8D21;&#x732E;&#xFF1B;&#x4ED6;&#x5728; 2003&#x5E74;&#x5230; 2005&#x5E74;&#x95F4;&#x662F;&#x7F8E;&#x56FD;&#x603B;&#x7EDF;&#x4FE1;&#x606F;&#x6280;&#x672F;&#x54A8;&#x8BE2;&#x59D4;&#x5458;&#x4F1A;&#x6210;&#x5458;&#xFF0C;2004 &#x5230; 2006&#x5E74;&#x95F4;&#x4EFB;&#x56FD;&#x9645;&#x8BA1;&#x7B97;&#x673A;&#x5B66;&#x4F1A;&#x4E3B;&#x5E2D;&#xFF1B;&#x4ED6;&#x8FD8;&#x662F;&#x78C1;&#x76D8;&#x9635;&#x5217; RAID &#x7684;&#x7814;&#x53D1;&#x8005;&#x4E4B;&#x4E00;&#x3002; &#x2003;&#x2003;&#x5A01;&#x65AF;&#x5EB7;&#x661F;&#x5927;&#x5B66;&#x9EA6;&#x8FEA;&#x900A;&#x5206;&#x6821;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7684;&#x4E3B;&#x4EFB;Mark Hill&#x8BA4;&#x4E3A;&#xFF0C;Patterson&#x6559;&#x6388;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x65B9;&#x9762;&#x662F;&#x300C;20&#x4E16;&#x7EAA;&#x540E;50&#x5E74;&#x91CC;&#x6700;&#x6770;&#x51FA;&#x7684;&#x51E0;&#x4E2A;&#x4EBA;&#x4E4B;&#x4E00;&#x300D;&#x3002;&#x4ED6;&#x540C;&#x65F6;&#x8FD8;&#x8868;&#x793A;&#xFF0C;Patterson&#x6559;&#x6388;&#x4E0E;Hennessy&#x6559;&#x6388;&#x5408;&#x8457;&#x7684;&#x90A3;&#x672C;&#x8BA1;&#x7B97;&#x673A;&#x67B6;&#x6784;&#x4E66;&#x662F;&#x8FD9;&#x4E2A;&#x9886;&#x57DF;&#x8FD1;25&#x5E74;&#x6765;&#x6700;&#x6709;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x6559;&#x79D1;&#x4E66;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Turing Reward</category>
      </categories>
  </entry>
</search>
